{
  "swagger": "2.0",
  "info": {
    "title": "SolarWinds Information Service",
    "version": "3.0.0"
  },
  "host": "localhost:17774",
  "basePath": "/SolarWinds/InformationService/v3/Json",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Query": {
      "get": {
        "tags": [
          "Query"
        ],
        "operationId": "Query",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Query results",
            "schema": {
              "$ref": "#/definitions/QueryResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Query"
        ],
        "operationId": "QueryWithParameters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/QueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Query results",
            "schema": {
              "$ref": "#/definitions/QueryResponse"
            }
          }
        }
      }
    },
    "/{uri}": {
      "get": {
        "tags": [
          "CRUD"
        ],
        "operationId": "Read",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful read returns the properties of the read object.",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "Update",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uri",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties in the body for an update operation should match the properties of the entity type being updated",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful update returns an empty response."
          }
        }
      },
      "delete": {
        "tags": [
          "CRUD"
        ],
        "operationId": "Delete",
        "parameters": [
          {
            "in": "path",
            "name": "uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful delete returns an empty response."
          }
        }
      }
    },
    "/BulkUpdate": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "BulkUpdate",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The properties in the body for a bulk update operation should match the properties of the entity type being updated",
            "schema": {
              "$ref": "#/definitions/BulkUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful bulk update returns an empty response."
          }
        }
      }
    },
    "/BulkDelete": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "BulkDelete",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful bulk delete returns an empty response."
          }
        }
      }
    },
    "/Invoke/Orion.ADM.NodeInventory/PollNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Poll inventory from set of nodes.",
        "operationId": "OrionADMNodeInventoryPollNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionADMNodeInventoryPollNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ADM.NodeInventory/Enable": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Enables polling of inventory on set of nodes.",
        "operationId": "OrionADMNodeInventoryEnable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionADMNodeInventoryEnableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ADM.NodeInventory/Disable": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Disables polling of inventory on set of nodes.",
        "operationId": "OrionADMNodeInventoryDisable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionADMNodeInventoryDisableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ADM.NodeInventory/SchedulePollNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "More intelligent 'poll now' which can be resolved by its guid. It also triggers an indication when the poll has finished or timed out.",
        "operationId": "OrionADMNodeInventorySchedulePollNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionADMNodeInventorySchedulePollNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ADM.NodeInventory/ScheduleEnable": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "More intelligent 'enable'. During execution adm plugin is installed if not exists. 'Enable' is called after receive notification about adm plugin installation.",
        "operationId": "OrionADMNodeInventoryScheduleEnable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionADMNodeInventoryScheduleEnableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ADM.NodeInventory/UninstallConnectionQualityAgentPlugin": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Uninstall 'ADMConnectionQuality' agent plugin from all nodes with agent where this plugin is installed.",
        "operationId": "OrionADMNodeInventoryUninstallConnectionQualityAgentPlugin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionADMNodeInventoryUninstallConnectionQualityAgentPluginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/Deploy": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deploys an agent to a machine defined by hostname and/or IP address.",
        "operationId": "OrionAgentManagementAgentDeploy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentDeployRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/DeployToNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deploys an agent to an existing node using the supplied credentials.",
        "operationId": "OrionAgentManagementAgentDeployToNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentDeployToNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/DeployPlugin": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deploys the specified plugin to the agent",
        "operationId": "OrionAgentManagementAgentDeployPlugin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentDeployPluginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/RedeployPlugin": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Redeploys the specified plugin to the agent",
        "operationId": "OrionAgentManagementAgentRedeployPlugin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentRedeployPluginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/UninstallPlugin": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Uninstalls the specified plugin from the agent",
        "operationId": "OrionAgentManagementAgentUninstallPlugin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentUninstallPluginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/Uninstall": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Uninstalls the agent.",
        "operationId": "OrionAgentManagementAgentUninstall",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentUninstallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/Delete": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes the agent without uninstalling it.",
        "operationId": "OrionAgentManagementAgentDelete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/ApproveReboot": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Approval for an agent to reboot.",
        "operationId": "OrionAgentManagementAgentApproveReboot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentApproveRebootRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/ApproveUpdate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Approval for an agent to be updated.",
        "operationId": "OrionAgentManagementAgentApproveUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentApproveUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/TestWithEngine": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Tests the connection between the agent and AMS",
        "operationId": "OrionAgentManagementAgentTestWithEngine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentTestWithEngineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/AssignToEngine": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Assigns an agent to a polling engine.",
        "operationId": "OrionAgentManagementAgentAssignToEngine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentAssignToEngineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/ValidateDeploymentCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Validates if provided credentials are valid for agent deployment. If credentials pass validation they can be safely used for deployment via Deploy verb.",
        "operationId": "OrionAgentManagementAgentValidateDeploymentCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentValidateDeploymentCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Tuple~System.Boolean_System.String_System.Int32_System.Int32~"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/RestartAgent": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Initiate Orion Agent service restart.",
        "operationId": "OrionAgentManagementAgentRestartAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentRestartAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/PromoteAgentToRemoteCollector": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionAgentManagementAgentPromoteAgentToRemoteCollector",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentPromoteAgentToRemoteCollectorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/AddAgent": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates Agent entry.",
        "operationId": "OrionAgentManagementAgentAddAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentAddAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/UpdateAgent": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates Agent entry.",
        "operationId": "OrionAgentManagementAgentUpdateAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentUpdateAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/AddPassiveAgent": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds passive agent. This verb exists for usability convenience and uses AddAgent verb internally.",
        "operationId": "OrionAgentManagementAgentAddPassiveAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentAddPassiveAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/TestPassiveAgentConnection": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Verifies whether connection to passive agent is possible.",
        "operationId": "OrionAgentManagementAgentTestPassiveAgentConnection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentTestPassiveAgentConnectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.AgentManagement.Common.Models.AgentPingResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/GetLicensedAgentPluginsInAMSRepository": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Return list of plugin Ids, which are in AMS repository and are licensed",
        "operationId": "OrionAgentManagementAgentGetLicensedAgentPluginsInAMSRepository",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentGetLicensedAgentPluginsInAMSRepositoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Collections.Generic.IEnumerable~System.String~"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Agent/CollectDiagnostics": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Will try to collect diagnostics for agent identified by AgentId and store it to passed path waiting to complete for given minutes at maximum",
        "operationId": "OrionAgentManagementAgentCollectDiagnostics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementAgentCollectDiagnosticsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Proxy/AddProxy": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds a proxy entry.",
        "operationId": "OrionAgentManagementProxyAddProxy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementProxyAddProxyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AgentManagement.Proxy/DeleteProxy": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Delete a proxy entry.",
        "operationId": "OrionAgentManagementProxyDeleteProxy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAgentManagementProxyDeleteProxyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AIIM.AiOpsMetricStatus/SaveAiOpsMetricStatus": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "The verb for saving AiOps metric status",
        "operationId": "OrionAIIMAiOpsMetricStatusSaveAiOpsMetricStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAIIMAiOpsMetricStatusSaveAiOpsMetricStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ActiveDirectory.Application/AssignApplication": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Assign Active Directory application to the specified node.",
        "operationId": "OrionAPMActiveDirectoryApplicationAssignApplication",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMActiveDirectoryApplicationAssignApplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ActiveDirectory.Application/DisableDomainComponents": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Disable domain components on specified Active Directory application.",
        "operationId": "OrionAPMActiveDirectoryApplicationDisableDomainComponents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMActiveDirectoryApplicationDisableDomainComponentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ActiveDirectory.Application/DeleteDisabledComponentsData": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Delete disabled components data from specified Active Directory application.",
        "operationId": "OrionAPMActiveDirectoryApplicationDeleteDisabledComponentsData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMActiveDirectoryApplicationDeleteDisabledComponentsDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.Exchange.Application/ScheduleConfiguration": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Schedule configuration existing exchange application for monitoring. It returns executionKey that is required to check the configuration result. ",
        "operationId": "OrionAPMExchangeApplicationScheduleConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMExchangeApplicationScheduleConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.Exchange.Application/GetConfigurationResult": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "It is getting the result of exchange configuration. As a parameter it require executionKey returned by ScheduleConfiguration verb. ",
        "operationId": "OrionAPMExchangeApplicationGetConfigurationResult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMExchangeApplicationGetConfigurationResultRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Data.Providers.APM.Verbs.ApplicationConfigurationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.IIS.Application/ScheduleConfiguration": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Schedule configuration existing IIS application for monitoring. It returns executionKey that is required to check the configuration result. ",
        "operationId": "OrionAPMIISApplicationScheduleConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMIISApplicationScheduleConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.IIS.Application/GetConfigurationResult": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "It is getting the result of IIS configuration. As a parameter it require executionKey returned by ScheduleConfiguration verb. ",
        "operationId": "OrionAPMIISApplicationGetConfigurationResult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMIISApplicationGetConfigurationResultRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Data.Providers.APM.Verbs.ApplicationConfigurationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.IIS.Site/Start": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Start IIS site.",
        "operationId": "OrionAPMIISSiteStart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMIISSiteStartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.IIS.Site/Stop": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Stop IIS site.",
        "operationId": "OrionAPMIISSiteStop",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMIISSiteStopRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.IIS.Site/Restart": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Restart IIS site.",
        "operationId": "OrionAPMIISSiteRestart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMIISSiteRestartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.IIS.ApplicationPool/Start": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Start IIS application pool.",
        "operationId": "OrionAPMIISApplicationPoolStart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMIISApplicationPoolStartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.IIS.ApplicationPool/Stop": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Stop IIS application pool.",
        "operationId": "OrionAPMIISApplicationPoolStop",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMIISApplicationPoolStopRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.IIS.ApplicationPool/Restart": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Restart IIS application pool.",
        "operationId": "OrionAPMIISApplicationPoolRestart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMIISApplicationPoolRestartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.Application/Unmanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Unmanage existed application.",
        "operationId": "OrionAPMApplicationUnmanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationUnmanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.Application/Remanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Remanage existed application.",
        "operationId": "OrionAPMApplicationRemanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationRemanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.Application/CreateApplication": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Create new application.",
        "operationId": "OrionAPMApplicationCreateApplication",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationCreateApplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.Application/DeleteApplication": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Delete existed application.",
        "operationId": "OrionAPMApplicationDeleteApplication",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationDeleteApplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.Application/PollNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Poll existed application.",
        "operationId": "OrionAPMApplicationPollNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationPollNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ApplicationCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Create application custom property.",
        "operationId": "OrionAPMApplicationCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ApplicationCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Create application custom property with values.",
        "operationId": "OrionAPMApplicationCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ApplicationCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Modify application custom property.",
        "operationId": "OrionAPMApplicationCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ApplicationCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Delete application custom property.",
        "operationId": "OrionAPMApplicationCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ApplicationTemplate/UpdateApplicationTemplateSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Update application template settings.",
        "operationId": "OrionAPMApplicationTemplateUpdateApplicationTemplateSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationTemplateUpdateApplicationTemplateSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ApplicationTemplate/DeleteTemplate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Delete existed application template.",
        "operationId": "OrionAPMApplicationTemplateDeleteTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationTemplateDeleteTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ApplicationTemplate/ExportTemplate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Export existed application template to stream.",
        "operationId": "OrionAPMApplicationTemplateExportTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationTemplateExportTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ApplicationTemplate/ImportTemplate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Import application template",
        "operationId": "OrionAPMApplicationTemplateImportTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMApplicationTemplateImportTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.Component/CalculateBaselineThresholds": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Calculates and sets baseline thresholds for component threshold",
        "operationId": "OrionAPMComponentCalculateBaselineThresholds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMComponentCalculateBaselineThresholdsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.APM.Common.Models.Threshold"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.LicenseInfo/GetLicenseLimit": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns license limit of polled elements.",
        "operationId": "OrionAPMLicenseInfoGetLicenseLimit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMLicenseInfoGetLicenseLimitRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.LicenseInfo/GetLicensedEntitiesCount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns number of licensed entities of specific type on particular engine.",
        "operationId": "OrionAPMLicenseInfoGetLicensedEntitiesCount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMLicenseInfoGetLicensedEntitiesCountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.LicenseInfo/GetLicensedEntityCountFromAllEngines": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns number of licensed entity on all engines.",
        "operationId": "OrionAPMLicenseInfoGetLicensedEntityCountFromAllEngines",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMLicenseInfoGetLicensedEntityCountFromAllEnginesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.LicenseInfo/RefreshLicenseCache": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Trigger refresh license cache.",
        "operationId": "OrionAPMLicenseInfoRefreshLicenseCache",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMLicenseInfoRefreshLicenseCacheRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ServerManagement/StartService": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Start windows service.",
        "operationId": "OrionAPMServerManagementStartService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMServerManagementStartServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ServerManagement/StopService": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Stop windows service.",
        "operationId": "OrionAPMServerManagementStopService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMServerManagementStopServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ServerManagement/RestartService": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Restart windows service.",
        "operationId": "OrionAPMServerManagementRestartService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMServerManagementRestartServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APM.ServerManagement/RebootNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Restart the node.",
        "operationId": "OrionAPMServerManagementRebootNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPMServerManagementRebootNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Stacks.Relation/Traverse": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionStacksRelationTraverse",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionStacksRelationTraverseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.RelianceData"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Stacks.Relation/ProcessUi": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionStacksRelationProcessUi",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionStacksRelationProcessUiRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.UiResponse"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ARM.Settings/GetWebApiSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionARMSettingsGetWebApiSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionARMSettingsGetWebApiSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Arm.Common.Models.WebApiSettings"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ARM.Settings/SetWebApiSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionARMSettingsSetWebApiSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionARMSettingsSetWebApiSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ARM.Settings/TestWebApiSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionARMSettingsTestWebApiSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionARMSettingsTestWebApiSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ASA.Node/ExecuteCliCommand": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Execute CLI command using SSH protocol on port 22",
        "operationId": "OrionASANodeExecuteCliCommand",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionASANodeExecuteCliCommandRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ASA.Interfaces/SetFavorite": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionASAInterfacesSetFavorite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionASAInterfacesSetFavoriteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.NetMan.Firewalls.Common.Models.Actions.FavoriteActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ASA.Interfaces/RemoveFavorite": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionASAInterfacesRemoveFavorite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionASAInterfacesRemoveFavoriteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.NetMan.Firewalls.Common.Models.Actions.FavoriteActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AssetInventory.Polling/PollNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionAssetInventoryPollingPollNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAssetInventoryPollingPollNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AssetInventory.Polling/EnablePollingForNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionAssetInventoryPollingEnablePollingForNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAssetInventoryPollingEnablePollingForNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AssetInventory.Polling/DisablePollingForNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionAssetInventoryPollingDisablePollingForNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAssetInventoryPollingDisablePollingForNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.NCM_NCMJobs/GetJob": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Get job definition data.\n            Valid for Orion users with at least WebUploader NCM role.\n            If approvals are enabled then:\n            * If one level or two levels for WebUploader only then valid for Orion users with at least Engineer NCM role.\n            * If two levels everyone then valid for Orion administrators only.\n            ",
        "operationId": "CirrusNCM_NCMJobsGetJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNCM_NCMJobsGetJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMJob"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.NCM_NCMJobs/UpdateJob": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates the job definition.\n            Valid for Orion users with at least WebUploader NCM role.\n            If approvals are enabled then:\n            * If one level or two levels for WebUploader only then valid for Orion users with at least Engineer NCM role.\n            * If two levels everyone then valid for Orion administrators only.\n            ",
        "operationId": "CirrusNCM_NCMJobsUpdateJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNCM_NCMJobsUpdateJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.NCM_NCMJobs/AddJob": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds the job definition.\n            Valid for Orion users with at least WebUploader NCM role.\n            If approvals are enabled then:\n            * If one level or two levels for WebUploader only then valid for Orion users with at least Engineer NCM role.\n            * If two levels everyone then valid for Orion administrators only.\n            ",
        "operationId": "CirrusNCM_NCMJobsAddJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNCM_NCMJobsAddJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.NCM_NCMJobs/DeleteJobs": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes job definitions.\n            Valid for Orion users with at least WebUploader NCM role.\n            If approvals are enabled then:\n            * If one level or two levels for WebUploader only then valid for Orion users with at least Engineer NCM role.\n            * If two levels everyone then valid for Orion administrators only.\n            ",
        "operationId": "CirrusNCM_NCMJobsDeleteJobs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNCM_NCMJobsDeleteJobsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.Jobs.DeleteNcmJobsResult"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.NCM_NCMJobs/EnableOrDisableJobs": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Enables or disables job definitions.\n            Valid for Orion users with at least WebUploader NCM role.\n            If approvals are enabled then:\n            * If one level or two levels for WebUploader only then valid for Orion users with at least Engineer NCM role.\n            * If two levels everyone then valid for Orion administrators only.\n            ",
        "operationId": "CirrusNCM_NCMJobsEnableOrDisableJobs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNCM_NCMJobsEnableOrDisableJobsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.NCM_NCMJobs/ClearJobLog": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Clears job logs.\n            Valid for Orion users with at least WebUploader NCM role.\n            If approvals are enabled then:\n            * If one level or two levels for WebUploader only then valid for Orion users with at least Engineer NCM role.\n            * If two levels everyone then valid for Orion administrators only.\n            ",
        "operationId": "CirrusNCM_NCMJobsClearJobLog",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNCM_NCMJobsClearJobLogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.NCM_NCMJobs/GetJobStatus": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets the current job status.\n            Valid for Orion users with at least WebUploader NCM role.\n            If approvals are enabled then:\n            * If one level or two levels for WebUploader only then valid for Orion users with at least Engineer NCM role.\n            * If two levels everyone then valid for Orion administrators only.\n            ",
        "operationId": "CirrusNCM_NCMJobsGetJobStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNCM_NCMJobsGetJobStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eJobStatus"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.NCM_NCMJobs/GetJobLog": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets job logs.\n            Valid for Orion users with at least WebUploader NCM role.\n            If approvals are enabled then:\n            * If one level or two levels for WebUploader only then valid for Orion users with at least Engineer NCM role.\n            * If two levels everyone then valid for Orion administrators only.\n            ",
        "operationId": "CirrusNCM_NCMJobsGetJobLog",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNCM_NCMJobsGetJobLogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.NCM_NCMJobs/ValidateJobsAccess": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Tests access for the invoker.",
        "operationId": "CirrusNCM_NCMJobsValidateJobsAccess",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNCM_NCMJobsValidateJobsAccessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ValidationResults"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.RTN/ExecuteRtn": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Starts executing RTN.",
        "operationId": "CirrusRTNExecuteRtn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusRTNExecuteRtnRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.RTN/RunRtn": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Starts executing RTN.",
        "operationId": "CirrusRTNRunRtn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusRTNRunRtnRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/AddRequest": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds a new request. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "CirrusApproveQueueAddRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueAddRequestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/UpdateRequest": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates the request. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "CirrusApproveQueueUpdateRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueUpdateRequestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/ApproveRequest": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Approved the request.\n            If the request status is waiting for execution then for valid Orion user with at least WebUploader NCM role.\n            In the other case for valid Orion user with at least Engineer NCM role.",
        "operationId": "CirrusApproveQueueApproveRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueApproveRequestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/DeclineRequest": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Declines the request. For valid Orion user with at least Engineer NCM role.",
        "operationId": "CirrusApproveQueueDeclineRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueDeclineRequestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/GetTicketStatus": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets the ticket status. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "CirrusApproveQueueGetTicketStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueGetTicketStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eApprovalStatus"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/GetRequest": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets the request data. For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusApproveQueueGetRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueGetRequestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMApprovalTicket"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/DeleteRequest": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes the request. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "CirrusApproveQueueDeleteRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueDeleteRequestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/GetApprovalUsers": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets users who should review operations. For valid Orion user with at least Engineer NCM role.",
        "operationId": "CirrusApproveQueueGetApprovalUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueGetApprovalUsersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMApprovalUser"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/UpdateApprovalUsers": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates users who should review operations. For valid Orion user with at least Engineer NCM role.",
        "operationId": "CirrusApproveQueueUpdateApprovalUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueUpdateApprovalUsersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/GetUserApproveRole": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets the approval role for the user. For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusApproveQueueGetUserApproveRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueGetUserApproveRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eUserApproveRole"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/GetApprovalMode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets the NCM approvals mode. For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusApproveQueueGetApprovalMode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueGetApprovalModeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eApprovalMode"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ApproveQueue/SetApprovalMode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates NCM approval mode. For valid Orion user with at least Engineer NCM role.",
        "operationId": "CirrusApproveQueueSetApprovalMode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusApproveQueueSetApprovalModeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.SecurityPolicy/GetSecurityPolicyAppIds": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets list of security policy IDs for the node.",
        "operationId": "NCMSecurityPolicyGetSecurityPolicyAppIds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMSecurityPolicyGetSecurityPolicyAppIdsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/NCM.VulnerabilitiesAnnouncements/StartVulnerabilityMatching": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Starts vulnerability matching.\n            For valid Orion user with at least Administrator NCM role.\n            ",
        "operationId": "NCMVulnerabilitiesAnnouncementsStartVulnerabilityMatching",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMVulnerabilitiesAnnouncementsStartVulnerabilityMatchingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/NCM.VulnerabilitiesAnnouncements/IsVulnerabilityMatchingActive": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Checks if vulnerability matching is active.\n            For valid Orion user with at least WebViewer NCM role.\n            ",
        "operationId": "NCMVulnerabilitiesAnnouncementsIsVulnerabilityMatchingActive",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMVulnerabilitiesAnnouncementsIsVulnerabilityMatchingActiveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/NCM.VulnerabilitiesAnnouncements/InitVulnerabilitySchedule": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Initializes vulnerability schedule.\n            For valid Orion user with at least Administrator NCM role.\n            ",
        "operationId": "NCMVulnerabilitiesAnnouncementsInitVulnerabilitySchedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMVulnerabilitiesAnnouncementsInitVulnerabilityScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.VulnerabilitiesAnnouncements/GetSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets all vulnerabilities settings.\n            For valid Orion user with at least Administrator NCM role.\n          ",
        "operationId": "NCMVulnerabilitiesAnnouncementsGetSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMVulnerabilitiesAnnouncementsGetSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.VulnerabilityMatchSettingsModel"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/AddSnippet": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds snippet.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsAddSnippet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsAddSnippetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/GetSnippet": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets snippet.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsGetSnippet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsGetSnippetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ConfigSnippet"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/UpdateSnippet": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates snippet.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsUpdateSnippet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsUpdateSnippetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/DeleteSnippets": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Removes specified snippets.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsDeleteSnippets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsDeleteSnippetsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/ImportSnippets": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Imports snippets.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsImportSnippets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsImportSnippetsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/CopySnippets": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Copies list of snippets.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsCopySnippets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsCopySnippetsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/GetTagsList": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets tag list.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsGetTagsList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsGetTagsListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/GetTagsListForSnippets": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets tag list for snippet.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsGetTagsListForSnippets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsGetTagsListForSnippetsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/AddTags": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds tags.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsAddTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsAddTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/DeleteTags": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Removes specified tags.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsDeleteTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsDeleteTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigSnippets/SaveSnippetAsCopy": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Saves snippet as copy.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigSnippetsSaveSnippetAsCopy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigSnippetsSaveSnippetAsCopyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/Diff": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Runs the comparer.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusConfigArchiveDiff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveDiffRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/CompareConfigs": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Compares the configs..\n            Valid for Orion manage node users with at least WebDownloader NCM role.",
        "operationId": "CirrusConfigArchiveCompareConfigs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveCompareConfigsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.DiffEngine.Contract.Models.TextDocumentDiff"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/GetPermissionsByRole": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets all permissions for specified role.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusConfigArchiveGetPermissionsByRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveGetPermissionsByRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/DeleteConfigs": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Removes the config.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveDeleteConfigs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveDeleteConfigsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/GetConfigTypes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets all available config types.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusConfigArchiveGetConfigTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveGetConfigTypesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/CancelTransfers": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Cancels transfers specified in parameter.\n            Valid for Orion manage node users with at least WebDownloader NCM role.",
        "operationId": "CirrusConfigArchiveCancelTransfers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveCancelTransfersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/ExecuteScript": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Executes script on the particular node.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveExecuteScript",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveExecuteScriptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/ExecuteScriptPerNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Executes scripts per nodes.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveExecuteScriptPerNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveExecuteScriptPerNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/ReExecute": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Re-executes script\n            Valid for Orion manage node users with at least WebDownloader NCM role.",
        "operationId": "CirrusConfigArchiveReExecute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveReExecuteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/UploadConfig": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Uploads config.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveUploadConfig",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveUploadConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/UploadConfigPerNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Uploads config.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveUploadConfigPerNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveUploadConfigPerNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/DownloadConfig": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Downloads config file for the particular node.\n            Valid for Orion manage node users with at least WebDownloader NCM role.",
        "operationId": "CirrusConfigArchiveDownloadConfig",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveDownloadConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/ExecuteScriptOnNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Executes script on the particular nodes.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveExecuteScriptOnNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveExecuteScriptOnNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/DownloadConfigOnNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Downloads config file for the particular nodes.\n            Valid for Orion manage node users with at least WebDownloader NCM role.\n            ",
        "operationId": "CirrusConfigArchiveDownloadConfigOnNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveDownloadConfigOnNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/ConfigSearch": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Searches for the config (Verb ConfigSearch will be removed. Please use the ConfigSearch2 verb instead).\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusConfigArchiveConfigSearch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveConfigSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/ConfigSearch2": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Searches for the config.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusConfigArchiveConfigSearch2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveConfigSearch2Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/RunIndexOptimization": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Runs index optimization.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusConfigArchiveRunIndexOptimization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveRunIndexOptimizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/UpdateConfig": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates config.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveUpdateConfig",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveUpdateConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/CloneConfig": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Clones the config.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveCloneConfig",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveCloneConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/ImportConfig": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Imports binary config.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveImportConfig",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveImportConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/ImportBinaryConfig": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Imports binary config.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveImportBinaryConfig",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveImportBinaryConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/SetClearBaseline": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Sets clear baseline.\n            Valid for Orion manage node users with at least WebUploader NCM role.",
        "operationId": "CirrusConfigArchiveSetClearBaseline",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveSetClearBaselineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/ValidateBinaryConfigStorage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Validates binary config storage.\n            Valid for Orion manage node users with at least Administrator NCM role.",
        "operationId": "CirrusConfigArchiveValidateBinaryConfigStorage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveValidateBinaryConfigStorageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ValidationResults"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.ConfigArchive/GetInterfaceConfigSnippets": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets interface config snippets.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusConfigArchiveGetInterfaceConfigSnippets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusConfigArchiveGetInterfaceConfigSnippetsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.SnippetArchive/AddSnippet": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds snippet.\n            For valid Orion user with at least Administrator NCM role.\n            ",
        "operationId": "CirrusSnippetArchiveAddSnippet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSnippetArchiveAddSnippetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.SnippetArchive/DeleteSnippet": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Removes snippet.\n            For valid Orion user with at least Administrator NCM role.\n            ",
        "operationId": "CirrusSnippetArchiveDeleteSnippet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSnippetArchiveDeleteSnippetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.SnippetArchive/UpdateSnippet": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates snippet.\n            For valid Orion user with at least Administrator NCM role.\n            ",
        "operationId": "CirrusSnippetArchiveUpdateSnippet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSnippetArchiveUpdateSnippetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/AddNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds a node to NCM given a complete model. Not recommended - use AddNodeToNCM instead.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusNodesAddNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesAddNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/AddNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "A batch version of the Cirrus.Nodes.AddNodeToNCM verb. Enables NCM to monitor and manage the configuration of Orion nodes, assuming appropriate credentials are available.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusNodesAddNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesAddNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/AddNodeToNCM": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Enables NCM to monitor and manage the configuration of an Orion node, assuming appropriate credentials are available.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusNodesAddNodeToNCM",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesAddNodeToNCMRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/RemoveNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Removes a node from NCM. Does not remove it from Orion, just NCM.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusNodesRemoveNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesRemoveNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/RemoveNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Removes a set of nodes from NCM. Does not remove them from Orion, just NCM. Batch version of the RemoveNode verb.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusNodesRemoveNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesRemoveNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/UpdateNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates the NCM properties of a node. All properties of the node are overwritten. It does not merge. To use this verb, first call GetNode to fetch the current properties of the node, modify the properties that you want to change on that model object, then call UpdateNode to commit the changes.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusNodesUpdateNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesUpdateNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/GetNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Fetches an NCMNode model object for the given node.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusNodesGetNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesGetNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMNode"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/CheckAPLicence": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Tests the current poller licence.\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusNodesCheckAPLicence",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesCheckAPLicenceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/DeleteOverLicenseNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes random nodes which are above the current licence.\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusNodesDeleteOverLicenseNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesDeleteOverLicenseNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/ValidateLogin": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Tests login credentials.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusNodesValidateLogin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesValidateLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.LoginValidationResults"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/GetConnectionProfile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Retrieve single connection profile.\n            User needs Orion node management rights with NCM role WebViewer or higher to call this verb.",
        "operationId": "CirrusNodesGetConnectionProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesGetConnectionProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ConnectionProfile"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/AddConnectionProfile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates a new connection profile.\n            User needs Orion node management rights with NCM role WebViewer or higher to call this verb.",
        "operationId": "CirrusNodesAddConnectionProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesAddConnectionProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/UpdateConnectionProfile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates exisitng connection profile.\n            User needs Orion node management rights with NCM role WebViewer or higher to call this verb.",
        "operationId": "CirrusNodesUpdateConnectionProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesUpdateConnectionProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/DeleteConnectionProfile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes existing connection profile.\n            User needs Orion node management rights with NCM role WebViewer or higher to call this verb.",
        "operationId": "CirrusNodesDeleteConnectionProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesDeleteConnectionProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/GetAllConnectionProfiles": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Retrieve list of all connection profiles created in NCM.\n            User needs Orion node management rights with NCM role WebViewer or higher to call this verb.",
        "operationId": "CirrusNodesGetAllConnectionProfiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesGetAllConnectionProfilesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ConnectionProfile"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/AssignEOSEntry": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Assigns EOS data to provided nodes.\n            For valid Orion user with at least Engineer NCM role.",
        "operationId": "CirrusNodesAssignEOSEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesAssignEOSEntryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/DeleteEOSData": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes EOS data from NCM nodes.\n            Valid for Orion manage node users with at least Engineer NCM role.",
        "operationId": "CirrusNodesDeleteEOSData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesDeleteEOSDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/ChangeEOSType": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Changes EOS type for provided nodes.\n            Valid for Orion manage node users with at least Engineer NCM role.",
        "operationId": "CirrusNodesChangeEOSType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesChangeEOSTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/GetPageableEosDataTable": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets paged EOS data.\n            Valid for Orion manage node users with at least Engineer NCM role.",
        "operationId": "CirrusNodesGetPageableEosDataTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesGetPageableEosDataTableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/GetPageableEosRowCount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets number of EOS rows count.\n            Valid for Orion manage node users with at least Engineer NCM role.",
        "operationId": "CirrusNodesGetPageableEosRowCount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesGetPageableEosRowCountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/ChangeVulnerabilityStateForNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Changes vulnerability states for provided nodes.\n            Valid for Orion manage node users with at least Engineer NCM role.\n            Verb will be removed in a future version of the product.",
        "operationId": "CirrusNodesChangeVulnerabilityStateForNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesChangeVulnerabilityStateForNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/ChangeVulnerabilityStateForAllNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Changes vulnerability states for all assigned nodes.\n            Valid for Orion manage node users with at least Engineer NCM role.\n            Verb will be removed in a future version of the product.",
        "operationId": "CirrusNodesChangeVulnerabilityStateForAllNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesChangeVulnerabilityStateForAllNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/DeleteAllVulnerabilityData": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes all vulnerabilities data.\n            Valid for Orion manage node users with at least Engineer NCM role.\n            Verb will be removed in a future version of the product.",
        "operationId": "CirrusNodesDeleteAllVulnerabilityData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesDeleteAllVulnerabilityDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/ParseMacros": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Processes the provided macro.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusNodesParseMacros",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesParseMacrosRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Nodes/ExecuteConfigChangeReportAction": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Executes and makes config change report.\n            Valid for Orion manage node users with at least WebViewer NCM role.",
        "operationId": "CirrusNodesExecuteConfigChangeReportAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusNodesExecuteConfigChangeReportActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/TestRule": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Evaluates the provided rule on the provided configuration.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsTestRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsTestRuleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/TestRuleOnBackedUpConfig": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Evaluates the provided rule on the provided configuration.\n            If the 'compliance only for administrators' option is enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least a WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsTestRuleOnBackedUpConfig",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsTestRuleOnBackedUpConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetPolicyReport": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets a policy report definition data.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsGetPolicyReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetPolicyReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.PolicyReport"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/UpdatePolicyReport": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates the policy report definition.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebUploader NCM role.",
        "operationId": "CirrusPolicyReportsUpdatePolicyReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsUpdatePolicyReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/AddPolicyReport": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds the policy report definition.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsAddPolicyReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsAddPolicyReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/DeletePolicyReports": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes policy report definitions.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsDeletePolicyReports",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsDeletePolicyReportsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetPolicy": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets a compliance policy data.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsGetPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.Policy"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/UpdatePolicy": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates the compliance policy.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsUpdatePolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsUpdatePolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/AddPolicy": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds the compliance policy.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsAddPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsAddPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/DeletePolicies": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes compliance policies.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsDeletePolicies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsDeletePoliciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetPolicyRule": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets a compliance policy rule data.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsGetPolicyRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetPolicyRuleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.PolicyRule"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/UpdatePolicyRule": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates the compliance policy rule.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsUpdatePolicyRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsUpdatePolicyRuleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/AddPolicyRule": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds the compliance policy rule.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsAddPolicyRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsAddPolicyRuleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/DeletePolicyRules": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes compliance policy rules.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsDeletePolicyRules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsDeletePolicyRulesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/StartCaching": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Start processing and caching policy reports.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebUploader NCM role.",
        "operationId": "CirrusPolicyReportsStartCaching",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsStartCachingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/UpdateReportStatus": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Sets status for provided report.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebUploader NCM role.",
        "operationId": "CirrusPolicyReportsUpdateReportStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsUpdateReportStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetPagablePoliciesList": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets paged data about compliance policies.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsGetPagablePoliciesList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetPagablePoliciesListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetPoliciesRowCount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Counts all compliance policies based on provided criteria.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsGetPoliciesRowCount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetPoliciesRowCountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetPagablePolicyRulesList": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets paged data about compliance rules.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsGetPagablePolicyRulesList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetPagablePolicyRulesListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetPolicyRulesRowCount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Counts all compliance rules based on provided criteria.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebDownloader NCM role.",
        "operationId": "CirrusPolicyReportsGetPolicyRulesRowCount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetPolicyRulesRowCountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetComplianceDataTable": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets data about compliance reports.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebViewer NCM role.",
        "operationId": "CirrusPolicyReportsGetComplianceDataTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetComplianceDataTableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetComplianceColumnsInJSON": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets data about compliance reports.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebViewer NCM role.",
        "operationId": "CirrusPolicyReportsGetComplianceColumnsInJSON",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetComplianceColumnsInJSONRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetPoliciesRowNumber": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets index of the compliance policy row based on provided criteria.\n            Valid for Orion users with at least WebViewer NCM role.",
        "operationId": "CirrusPolicyReportsGetPoliciesRowNumber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetPoliciesRowNumberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetPolicyRulesRowNumber": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets index of the compliance policy rule row based on provided criteria.\n            Valid for Orion users with at least WebViewer NCM role.",
        "operationId": "CirrusPolicyReportsGetPolicyRulesRowNumber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetPolicyRulesRowNumberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GetPolicyReportsRowNumber": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets index of the compliance policy report row based on provided criteria.\n            Valid for Orion users with at least WebViewer NCM role.",
        "operationId": "CirrusPolicyReportsGetPolicyReportsRowNumber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGetPolicyReportsRowNumberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.PolicyReports/GenerateRemediationScriptForNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Generates remediation scripts.\n            If compliance only for administrators option enabled then it's valid only for Orion admins.\n            If not then valid for Orion users with at least WebViewer NCM role.",
        "operationId": "CirrusPolicyReportsGenerateRemediationScriptForNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusPolicyReportsGenerateRemediationScriptForNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NetworkNode"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/GetSetting": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets settings having value associated with the specified settingName. If the settingName is not found, returns the defaultValue you provide.\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusSettingsGetSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsGetSettingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/SaveSetting": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Saves settings.\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusSettingsSaveSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsSaveSettingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/CryptUsernames": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Crypts usernames.\n            For valid Orion user with at least Administrator NCM role.",
        "operationId": "CirrusSettingsCryptUsernames",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsCryptUsernamesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/CryptPasswords": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Crypts password.\n            For valid Orion user with at least Administrator NCM role.",
        "operationId": "CirrusSettingsCryptPasswords",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsCryptPasswordsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/SaveRegExPattern": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Saves RegEx pattern.\n            For valid Orion user with at least Administrator NCM role.",
        "operationId": "CirrusSettingsSaveRegExPattern",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsSaveRegExPatternRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/EnableOrDisableRegExPatterns": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Enables or disables RegEx patterns.\n            For valid Orion user with at least Administrator NCM role.",
        "operationId": "CirrusSettingsEnableOrDisableRegExPatterns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsEnableOrDisableRegExPatternsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/DeleteRegExPatterns": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Removes RegEx patterns.\n            For valid Orion user with at least Administrator NCM role.",
        "operationId": "CirrusSettingsDeleteRegExPatterns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsDeleteRegExPatternsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/GetRegExById": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets RegEx by id.\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusSettingsGetRegExById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsGetRegExByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.ConfigComparison.RegEx"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/GetRegExes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets all RegExes.\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusSettingsGetRegExes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsGetRegExesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SolarWinds.NCM.Contracts.ConfigComparison.RegEx"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/ValidateADUser": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Validates adding user.\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusSettingsValidateADUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsValidateADUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/ValidatePathWithoutImpersonation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Validates the path without impersonation.\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusSettingsValidatePathWithoutImpersonation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsValidatePathWithoutImpersonationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/GetDefaultPath": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets default path.\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusSettingsGetDefaultPath",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsGetDefaultPathRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/GetCoreInstallPath": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets core installation path..\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusSettingsGetCoreInstallPath",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsGetCoreInstallPathRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/GetAppDataPath": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets app data path.\n            For valid Orion user with at least WebViewer NCM role.",
        "operationId": "CirrusSettingsGetAppDataPath",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsGetAppDataPathRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/SetCustomMacros": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Sets custom macros.\n            For valid Orion user with at least Administrator NCM role.",
        "operationId": "CirrusSettingsSetCustomMacros",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsSetCustomMacrosRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/DeleteCustomMacros": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Removes custom macros.\n            For valid Orion user with at least Administrator NCM role.",
        "operationId": "CirrusSettingsDeleteCustomMacros",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsDeleteCustomMacrosRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/SetGlobalMacroForAllNodes": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Sets global macro for all nodes.\n            For valid Orion user with at least Administrator NCM role.",
        "operationId": "CirrusSettingsSetGlobalMacroForAllNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsSetGlobalMacroForAllNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/SaveUserLevelLoginCreds": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Saves user level login credentials.\n            For valid Orion user with at least WebDownloader NCM role.",
        "operationId": "CirrusSettingsSaveUserLevelLoginCreds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsSaveUserLevelLoginCredsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/DecryptData": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Decrypts the data.\n            For valid Orion user with at least Administrator NCM role.",
        "operationId": "CirrusSettingsDecryptData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsDecryptDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Cirrus.Settings/NetworkingSelfTest": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Cross tests connection between all pollers. Only for Orion administrators.",
        "operationId": "CirrusSettingsNetworkingSelfTest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CirrusSettingsNetworkingSelfTestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SolarWinds.NCM.Contracts.Diagnostics.ConnectionTestHostResults"
              }
            }
          }
        }
      }
    },
    "/Invoke/NCM.Eos/BeginRefreshAll": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Starts refreshing End of Support data for all nodes. For valid Orion user with at least Engineer NCM role.",
        "operationId": "NCMEosBeginRefreshAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMEosBeginRefreshAllRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/NCM.Eos/RefreshNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Starts refreshing End of Support data for selected nodes. For valid Orion user with at least Engineer NCM role.",
        "operationId": "NCMEosRefreshNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMEosRefreshNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.Eos/IsRefreshingAll": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Checks if data for all nodes is being refreshed. For valid Orion user with at least Engineer NCM role.",
        "operationId": "NCMEosIsRefreshingAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMEosIsRefreshingAllRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/NCM.Eos/InitSchedule": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Schedule daily lookup of End of Support data. For valid Orion user with Administrator NCM role.",
        "operationId": "NCMEosInitSchedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMEosInitScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareStorage/ValidateFirmwareStorage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Validates firmware operation storage. For valid Orion user with Administrator NCM role.",
        "operationId": "NCMFirmwareStorageValidateFirmwareStorage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareStorageValidateFirmwareStorageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ValidationResults"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareStorage/DeleteFirmwareImages": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes selected firmware images. For valid Orion user with Administrator NCM role.",
        "operationId": "NCMFirmwareStorageDeleteFirmwareImages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareStorageDeleteFirmwareImagesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareStorage/UpdateFirmwareImage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Update selected firmware image. For valid Orion user with Administrator NCM role.",
        "operationId": "NCMFirmwareStorageUpdateFirmwareImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareStorageUpdateFirmwareImageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareDefinitions/GetFirmwareDefinition": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets the firmware definition data. For valid Orion user with at least WebViewer NCM role.",
        "operationId": "NCMFirmwareDefinitionsGetFirmwareDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareDefinitionsGetFirmwareDefinitionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.FirmwareDefinition"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareDefinitions/AddFirmwareDefinition": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds new firmware definition. For valid Orion user with Administrator NCM role.",
        "operationId": "NCMFirmwareDefinitionsAddFirmwareDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareDefinitionsAddFirmwareDefinitionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareDefinitions/UpdateFirmwareDefinition": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates the firmware definition data. For valid Orion user with at least Administrator NCM role.",
        "operationId": "NCMFirmwareDefinitionsUpdateFirmwareDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareDefinitionsUpdateFirmwareDefinitionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareDefinitions/DeleteFirmwareDefinitions": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes selected firmware definitions. For valid Orion user with Administrator NCM role.",
        "operationId": "NCMFirmwareDefinitionsDeleteFirmwareDefinitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareDefinitionsDeleteFirmwareDefinitionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareOperations/PrepareFirmwareUpgrade": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Prepares new firmware upgrade operation. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "NCMFirmwareOperationsPrepareFirmwareUpgrade",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareOperationsPrepareFirmwareUpgradeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareOperations/PrepareRollBack": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Prepares new rollback operation. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "NCMFirmwareOperationsPrepareRollBack",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareOperationsPrepareRollBackRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareOperations/PrepareReExecuteFailed": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Prepares new reexecute operation. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "NCMFirmwareOperationsPrepareReExecuteFailed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareOperationsPrepareReExecuteFailedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareOperations/StartUpgrade": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Starts upgrade operation. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "NCMFirmwareOperationsStartUpgrade",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareOperationsStartUpgradeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareOperations/CancelUpgrade": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Cancels upgrade operations. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "NCMFirmwareOperationsCancelUpgrade",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareOperationsCancelUpgradeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareOperations/GenerateScriptPreview": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Generates script preview for operation. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "NCMFirmwareOperationsGenerateScriptPreview",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareOperationsGenerateScriptPreviewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/NCM.FirmwareOperations/DeleteFirmwareOperations": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes upgrade operations. For valid Orion user with at least WebUploader NCM role.",
        "operationId": "NCMFirmwareOperationsDeleteFirmwareOperations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMFirmwareOperationsDeleteFirmwareOperationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.SwisEntityTemplate/Ping": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "NCMSwisEntityTemplatePing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMSwisEntityTemplatePingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/NCM.ConfigTypes/CreateCustom": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates custom config type.\n            Valid for Orion manage node users with at least Engineer NCM role.",
        "operationId": "NCMConfigTypesCreateCustom",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMConfigTypesCreateCustomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.ConfigTypes.ConfigType"
            }
          }
        }
      }
    },
    "/Invoke/NCM.ConfigTypes/DeleteCustom": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Removes config type by ID.\n            Valid for Orion manage node users with at least Engineer NCM role.",
        "operationId": "NCMConfigTypesDeleteCustom",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMConfigTypesDeleteCustomRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/NCM.ConfigTypes/UpdateCustomName": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates config type.\n            Valid for Orion manage node users with at least Engineer NCM role.",
        "operationId": "NCMConfigTypesUpdateCustomName",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCMConfigTypesUpdateCustomNameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.NCM.Contracts.ConfigTypes.ConfigType"
            }
          }
        }
      }
    },
    "/Invoke/Cli.CliSessionSettings/GetCurrentCliConnectionParameters": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns current CLI connection parameters.",
        "operationId": "CliCliSessionSettingsGetCurrentCliConnectionParameters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CliCliSessionSettingsGetCurrentCliConnectionParametersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.CliConnectionData"
            }
          }
        }
      }
    },
    "/Invoke/Cli.CliSessionSettings/GetCliConnectionTestResult": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns current CLI connection status with logs on success.",
        "operationId": "CliCliSessionSettingsGetCliConnectionTestResult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CliCliSessionSettingsGetCliConnectionTestResultRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.CliTestResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Aws.Regions/GetAwsRegions": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudAwsRegionsGetAwsRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudAwsRegionsGetAwsRegionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.CloudMonitoring.Common.Models.RegionsResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Azure.Regions/GetAzureRegions": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudAzureRegionsGetAzureRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudAzureRegionsGetAzureRegionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.CloudMonitoring.Common.Models.RegionsResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/CreateContainer": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerCreateContainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerCreateContainerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/CreateContainerWithParent": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerCreateContainerWithParent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerCreateContainerWithParentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/UpdateContainer": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerUpdateContainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerUpdateContainerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/DeleteContainer": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerDeleteContainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerDeleteContainerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/AddDefinition": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerAddDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerAddDefinitionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/AddDefinitions": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerAddDefinitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerAddDefinitionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/UpdateDefinition": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerUpdateDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerUpdateDefinitionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/SetDefinitions": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerSetDefinitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerSetDefinitionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/DeleteDefinition": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerDeleteDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerDeleteDefinitionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/DeleteDefinitions": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerDeleteDefinitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerDeleteDefinitionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Container/GetDefinitionFilterQuery": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerGetDefinitionFilterQuery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerGetDefinitionFilterQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.GroupCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionGroupCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionGroupCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.GroupCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionGroupCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionGroupCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.GroupCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionGroupCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionGroupCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.GroupCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionGroupCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionGroupCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.GroupCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionGroupCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionGroupCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ContainerMemberDefinition/GetMembers": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerMemberDefinitionGetMembers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerMemberDefinitionGetMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ContainerMemberDefinition/GetFirstNMembers": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionContainerMemberDefinitionGetFirstNMembers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionContainerMemberDefinitionGetFirstNMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.CiscoAci.Apic/Orion.CiscoAci.AssignAciPolling": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionCiscoAciApicOrionCiscoAciAssignAciPolling",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionCiscoAciApicOrionCiscoAciAssignAciPollingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.CiscoAci.Apic/Orion.CiscoAci.GetPollInterval": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionCiscoAciApicOrionCiscoAciGetPollInterval",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionCiscoAciApicOrionCiscoAciGetPollIntervalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.CiscoAci.Apic/Orion.CiscoAci.IsAciPollingAssigned": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionCiscoAciApicOrionCiscoAciIsAciPollingAssigned",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionCiscoAciApicOrionCiscoAciIsAciPollingAssignedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.CiscoAci.Apic/Orion.CiscoAci.SyncAciCredentialsWithOrion": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionCiscoAciApicOrionCiscoAciSyncAciCredentialsWithOrion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionCiscoAciApicOrionCiscoAciSyncAciCredentialsWithOrionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.CiscoAci.Apic/Orion.CiscoAci.TestAciCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionCiscoAciApicOrionCiscoAciTestAciCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionCiscoAciApicOrionCiscoAciTestAciCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.CiscoAci.Apic/Orion.CiscoAci.UnassignAciPolling": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionCiscoAciApicOrionCiscoAciUnassignAciPolling",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionCiscoAciApicOrionCiscoAciUnassignAciPollingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.NetMan.CloudMonitoring.CloudAccount/Orion.NetMan.CloudMonitoring.CreateOrUpdateCloudAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionNetManCloudMonitoringCloudAccountOrionNetManCloudMonitoringCreateOrUpdateCloudAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionNetManCloudMonitoringCloudAccountOrionNetManCloudMonitoringCreateOrUpdateCloudAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.NetMan.CloudMonitoring.CloudAccount/Orion.NetMan.CloudMonitoring.GetCloudAccountState": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionNetManCloudMonitoringCloudAccountOrionNetManCloudMonitoringGetCloudAccountState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionNetManCloudMonitoringCloudAccountOrionNetManCloudMonitoringGetCloudAccountStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.NetMan.CloudMonitoring.CloudAccount/Orion.NetMan.CloudMonitoring.RemoveCloudAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionNetManCloudMonitoringCloudAccountOrionNetManCloudMonitoringRemoveCloudAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionNetManCloudMonitoringCloudAccountOrionNetManCloudMonitoringRemoveCloudAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.NetMan.Firewalls.Firewall/Orion.NetMan.Firewalls.DisablePolling": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionNetManFirewallsFirewallOrionNetManFirewallsDisablePolling",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionNetManFirewallsFirewallOrionNetManFirewallsDisablePollingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.NetMan.Firewalls.Firewall/Orion.NetMan.Firewalls.EnablePolling": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionNetManFirewallsFirewallOrionNetManFirewallsEnablePolling",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionNetManFirewallsFirewallOrionNetManFirewallsEnablePollingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.NetMan.Firewalls.Firewall/Orion.NetMan.Firewalls.GetAuthorizationKey": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionNetManFirewallsFirewallOrionNetManFirewallsGetAuthorizationKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionNetManFirewallsFirewallOrionNetManFirewallsGetAuthorizationKeyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.NetMan.Firewalls.Firewall/Orion.NetMan.Firewalls.IsPollingEnabled": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionNetManFirewallsFirewallOrionNetManFirewallsIsPollingEnabled",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionNetManFirewallsFirewallOrionNetManFirewallsIsPollingEnabledRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.Interface/Core.AddToCortex": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionInterfaceCoreAddToCortex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionInterfaceCoreAddToCortexRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.Node/Core.AddToCortex": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionNodeCoreAddToCortex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionNodeCoreAddToCortexRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Cortex.Orion.Volume/Core.AddToCortex": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "CortexOrionVolumeCoreAddToCortex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CortexOrionVolumeCoreAddToCortexRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/AddWidget": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesAddWidget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesAddWidgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/RemoveWidget": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesRemoveWidget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesRemoveWidgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/UpdateWidgetLocation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesUpdateWidgetLocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesUpdateWidgetLocationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/SetVisibility": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesSetVisibility",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesSetVisibilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/Clone": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesClone",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesCloneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/Import": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesImport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/Export": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesExport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesExportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/ExportForI18N": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesExportForI18N",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesExportForI18NRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/RestoreToOriginal": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesRestoreToOriginal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesRestoreToOriginalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/DereferenceWidget": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesDereferenceWidget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesDereferenceWidgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/WidgetToReference": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesWidgetToReference",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesWidgetToReferenceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/GetDashboardBreadcrumbs": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesGetDashboardBreadcrumbs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesGetDashboardBreadcrumbsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/GetDashboardGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesGetDashboardGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesGetDashboardGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Instances/UpdateDashboardGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsInstancesUpdateDashboardGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsInstancesUpdateDashboardGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Widgets/Clone": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsWidgetsClone",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsWidgetsCloneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Widgets/RemoveAllLinks": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsWidgetsRemoveAllLinks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsWidgetsRemoveAllLinksRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Widgets/Import": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsWidgetsImport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsWidgetsImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dashboards.Widgets/Export": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDashboardsWidgetsExport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDashboardsWidgetsExportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.DPA.DpaServer/RefreshSchema": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Refresh federation schema of for particular DPA Server",
        "operationId": "OrionDPADpaServerRefreshSchema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDPADpaServerRefreshSchemaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.DPI.Probes/ReloadProbeSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDPIProbesReloadProbeSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDPIProbesReloadProbeSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.DPI.Probes/ReloadAppDefinitions": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDPIProbesReloadAppDefinitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDPIProbesReloadAppDefinitionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.DPI.Probes/GetProbeCapabilities": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDPIProbesGetProbeCapabilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDPIProbesGetProbeCapabilitiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.DPI.Common.Models.ProbeCapabilities"
            }
          }
        }
      }
    },
    "/Invoke/Orion.DPI.Probes/DeployLocalTrafficProbe": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDPIProbesDeployLocalTrafficProbe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDPIProbesDeployLocalTrafficProbeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.DPI.Common.Models.ProbeDeploymentResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.DPI.Probes/DeploySpanPortProbe": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionDPIProbesDeploySpanPortProbe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDPIProbesDeploySpanPortProbeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.DPI.Common.Models.ProbeDeploymentResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.EOC.Sites/CreateSite": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionEOCSitesCreateSite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEOCSitesCreateSiteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.EOC.Sites/RefreshSchema": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionEOCSitesRefreshSchema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEOCSitesRefreshSchemaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.EOC.SiteAccounts/SetEocSiteAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionEOCSiteAccountsSetEocSiteAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEOCSiteAccountsSetEocSiteAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.EOC.SiteAccounts/UpdateAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionEOCSiteAccountsUpdateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEOCSiteAccountsUpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.EOC.SiteAccounts/CreateAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionEOCSiteAccountsCreateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEOCSiteAccountsCreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ESI.IncidentIntegration/SetIncidentIntegrationState": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Sets the state of incident integration respectd by Orion web UI. True is enabled, false means disabled.",
        "operationId": "OrionESIIncidentIntegrationSetIncidentIntegrationState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionESIIncidentIntegrationSetIncidentIntegrationStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/System.Indication/ReportIndication": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "SystemIndicationReportIndication",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SystemIndicationReportIndicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.F5.System.Device/TestApiPolling": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionF5SystemDeviceTestApiPolling",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionF5SystemDeviceTestApiPollingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.F5.Common.Models.API.F5ApiTestConnectionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.F5.System.Device/EnableApiPolling": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionF5SystemDeviceEnableApiPolling",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionF5SystemDeviceEnableApiPollingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.F5.System.Device/DisableApiPolling": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionF5SystemDeviceDisableApiPolling",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionF5SystemDeviceDisableApiPollingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.F5.LTM.Server/LinkNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionF5LTMServerLinkNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionF5LTMServerLinkNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.F5.LTM.Server/UnlinkNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionF5LTMServerUnlinkNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionF5LTMServerUnlinkNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HardwareHealth.HardwareInfoBase/EnableHardwareHealth": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Enable Hardware Health for given entity.",
        "operationId": "OrionHardwareHealthHardwareInfoBaseEnableHardwareHealth",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHardwareHealthHardwareInfoBaseEnableHardwareHealthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HardwareHealth.HardwareInfoBase/DisableHardwareHealth": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Disable Hardware Health for given entity.",
        "operationId": "OrionHardwareHealthHardwareInfoBaseDisableHardwareHealth",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHardwareHealthHardwareInfoBaseDisableHardwareHealthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HardwareHealth.HardwareInfoBase/DeleteHardwareHealth": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Delete Hardware Health for given entity.",
        "operationId": "OrionHardwareHealthHardwareInfoBaseDeleteHardwareHealth",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHardwareHealthHardwareInfoBaseDeleteHardwareHealthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HardwareHealth.HardwareInfoBase/IsHardwareHealthEnabled": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Check if the Hardware Health is enabled for given entity.",
        "operationId": "OrionHardwareHealthHardwareInfoBaseIsHardwareHealthEnabled",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHardwareHealthHardwareInfoBaseIsHardwareHealthEnabledRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HardwareHealth.HardwareItemBase/EnableSensors": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Enable sensors for given Hardware Health Items.",
        "operationId": "OrionHardwareHealthHardwareItemBaseEnableSensors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHardwareHealthHardwareItemBaseEnableSensorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HardwareHealth.HardwareItemBase/DisableSensors": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Disable sensors for given Hardware Health Items.",
        "operationId": "OrionHardwareHealthHardwareItemBaseDisableSensors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHardwareHealthHardwareItemBaseDisableSensorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HardwareHealth.HardwareItemThreshold/SetThreshold": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Sets thresholds for given sensors.",
        "operationId": "OrionHardwareHealthHardwareItemThresholdSetThreshold",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHardwareHealthHardwareItemThresholdSetThresholdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HardwareHealth.HardwareItemThreshold/ClearThresholds": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Clear thresholds for given sensors.",
        "operationId": "OrionHardwareHealthHardwareItemThresholdClearThresholds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHardwareHealthHardwareItemThresholdClearThresholdsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HA.Pools/CreatePool": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates pool based on provided members and resource parameters",
        "operationId": "OrionHAPoolsCreatePool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHAPoolsCreatePoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.HighAvailability.Common.Model.OperationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HA.Pools/EditPool": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates pool with a given poolId",
        "operationId": "OrionHAPoolsEditPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHAPoolsEditPoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.HighAvailability.Common.Model.OperationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HA.Pools/ValidateCreatePool": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Validates pool (without creating it) based on provided members and resource parameters",
        "operationId": "OrionHAPoolsValidateCreatePool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHAPoolsValidateCreatePoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.HighAvailability.Common.Model.OperationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HA.Pools/ValidateEditPool": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Validates pool with given poolId and resource parameters (without actual update)",
        "operationId": "OrionHAPoolsValidateEditPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHAPoolsValidateEditPoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.HighAvailability.Common.Model.OperationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HA.Pools/EnablePool": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Enables pool with a given poolId",
        "operationId": "OrionHAPoolsEnablePool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHAPoolsEnablePoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.HighAvailability.Common.Model.OperationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HA.Pools/DisablePool": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Disables pool with a given poolId",
        "operationId": "OrionHAPoolsDisablePool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHAPoolsDisablePoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.HighAvailability.Common.Model.OperationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HA.Pools/DeletePool": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Delete pool with given poolId.",
        "operationId": "OrionHAPoolsDeletePool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHAPoolsDeletePoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.HighAvailability.Common.Model.OperationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HA.Pools/Switchover": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Manual failover on a given pool.",
        "operationId": "OrionHAPoolsSwitchover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHAPoolsSwitchoverRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.HighAvailability.Common.Model.OperationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.HA.Pools/DeleteStaleEngine": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes OrionServer and related pool memeber with a given hostName.",
        "operationId": "OrionHAPoolsDeleteStaleEngine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionHAPoolsDeleteStaleEngineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.HighAvailability.Common.Model.OperationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NPM.Interfaces/SetPowerLevel": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Set interface power level.",
        "operationId": "OrionNPMInterfacesSetPowerLevel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNPMInterfacesSetPowerLevelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NPM.Interfaces/Unmanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Unmanage interface for specified time.",
        "operationId": "OrionNPMInterfacesUnmanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNPMInterfacesUnmanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NPM.Interfaces/Remanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Manage interface immediately.",
        "operationId": "OrionNPMInterfacesRemanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNPMInterfacesRemanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NPM.Interfaces/DiscoverInterfacesOnNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Run lite discovery process for search interfaces on node and returns list of interfaces.",
        "operationId": "OrionNPMInterfacesDiscoverInterfacesOnNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNPMInterfacesDiscoverInterfacesOnNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Interfaces.Common.Models.Discovery.LiteDiscoveryResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NPM.Interfaces/AddInterfacesOnNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Add provided interface to node.",
        "operationId": "OrionNPMInterfacesAddInterfacesOnNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNPMInterfacesAddInterfacesOnNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Interfaces.Common.Models.Discovery.LiteDiscoveryResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NPM.Interfaces/CreateInterfacesPluginConfiguration": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Create interface plugin configuration based on provided input data.",
        "operationId": "OrionNPMInterfacesCreateInterfacesPluginConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNPMInterfacesCreateInterfacesPluginConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NPM.InterfacesCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNPMInterfacesCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNPMInterfacesCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NPM.InterfacesCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNPMInterfacesCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNPMInterfacesCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NPM.InterfacesCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNPMInterfacesCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNPMInterfacesCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NPM.InterfacesCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNPMInterfacesCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNPMInterfacesCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/ChangeIpStatus": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementChangeIpStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementChangeIpStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/ChangeIpStatusForGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementChangeIpStatusForGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementChangeIpStatusForGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/GetFirstAvailableIp": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementGetFirstAvailableIp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementGetFirstAvailableIpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/GetFirstAvailableIpViaFriendlyName": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementGetFirstAvailableIpViaFriendlyName",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementGetFirstAvailableIpViaFriendlyNameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/GetFirstAvailableIpForGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementGetFirstAvailableIpForGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementGetFirstAvailableIpForGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/StartIpReservation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementStartIpReservation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementStartIpReservationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/StartIpReservationForGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementStartIpReservationForGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementStartIpReservationForGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/CancelIpReservation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementCancelIpReservation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementCancelIpReservationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/CancelIpReservationForGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementCancelIpReservationForGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementCancelIpReservationForGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/FinishIpReservation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementFinishIpReservation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementFinishIpReservationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/FinishIpReservationForGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementFinishIpReservationForGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementFinishIpReservationForGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/CreateSubnet": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementCreateSubnet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementCreateSubnetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/CreateSubnetForGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementCreateSubnetForGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementCreateSubnetForGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/CreateIPv6Subnet": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementCreateIPv6Subnet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementCreateIPv6SubnetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/CreateIPv6SubnetForGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementCreateIPv6SubnetForGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementCreateIPv6SubnetForGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.SubnetManagement/ChangeDisableAutoScanning": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMSubnetManagementChangeDisableAutoScanning",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMSubnetManagementChangeDisableAutoScanningRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.DhcpDnsManagement/CreateIpReservation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMDhcpDnsManagementCreateIpReservation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMDhcpDnsManagementCreateIpReservationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.DhcpDnsManagement/RemoveIpReservation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMDhcpDnsManagementRemoveIpReservation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMDhcpDnsManagementRemoveIpReservationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.DhcpDnsManagement/GetAandPTRrecordsForDnsZone": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMDhcpDnsManagementGetAandPTRrecordsForDnsZone",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMDhcpDnsManagementGetAandPTRrecordsForDnsZoneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SolarWinds.IPAM.Contract.APtrRecordsPair"
              }
            }
          }
        }
      }
    },
    "/Invoke/IPAM.DhcpDnsManagement/AddDnsServer": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMDhcpDnsManagementAddDnsServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMDhcpDnsManagementAddDnsServerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.DhcpDnsManagement/AddDhcpServer": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMDhcpDnsManagementAddDhcpServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMDhcpDnsManagementAddDhcpServerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.DhcpDnsManagement/DeleteDnsServer": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMDhcpDnsManagementDeleteDnsServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMDhcpDnsManagementDeleteDnsServerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.DhcpDnsManagement/DeleteDhcpServer": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMDhcpDnsManagementDeleteDhcpServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMDhcpDnsManagementDeleteDhcpServerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.IPAddressManagement/AddDnsARecord": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMIPAddressManagementAddDnsARecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMIPAddressManagementAddDnsARecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.IPAddressManagement/ChangeDnsARecord": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMIPAddressManagementChangeDnsARecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMIPAddressManagementChangeDnsARecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.IPAddressManagement/RemoveDnsARecord": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMIPAddressManagementRemoveDnsARecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMIPAddressManagementRemoveDnsARecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.IPAddressManagement/AddDnsAaaaRecord": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMIPAddressManagementAddDnsAaaaRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMIPAddressManagementAddDnsAaaaRecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.IPAddressManagement/ChangeDnsAaaaRecord": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMIPAddressManagementChangeDnsAaaaRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMIPAddressManagementChangeDnsAaaaRecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.IPAddressManagement/RemoveDnsAaaaRecord": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMIPAddressManagementRemoveDnsAaaaRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMIPAddressManagementRemoveDnsAaaaRecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.IPAddressManagement/AddDnsARecordWithPtr": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMIPAddressManagementAddDnsARecordWithPtr",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMIPAddressManagementAddDnsARecordWithPtrRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.IPAddressManagement/AddPtrToDnsARecord": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMIPAddressManagementAddPtrToDnsARecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMIPAddressManagementAddPtrToDnsARecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.IPAddressManagement/AddPtrRecord": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMIPAddressManagementAddPtrRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMIPAddressManagementAddPtrRecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.IPAddressManagement/RemovePtrRecord": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMIPAddressManagementRemovePtrRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMIPAddressManagementRemovePtrRecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.AttrDefine/AddCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMAttrDefineAddCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMAttrDefineAddCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.AttrDefine/UpdateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMAttrDefineUpdateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMAttrDefineUpdateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.AttrDefine/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMAttrDefineDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMAttrDefineDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.GroupsCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMGroupsCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMGroupsCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.GroupsCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMGroupsCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMGroupsCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.GroupsCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMGroupsCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMGroupsCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.GroupsCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMGroupsCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMGroupsCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.NodesCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMNodesCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMNodesCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.NodesCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMNodesCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMNodesCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.NodesCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMNodesCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMNodesCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/IPAM.NodesCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "IPAMNodesCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAMNodesCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Licensing.Licenses/ActivateOnline": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionLicensingLicensesActivateOnline",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLicensingLicensesActivateOnlineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Licensing.Licenses/ActivateOffline": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionLicensingLicensesActivateOffline",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLicensingLicensesActivateOfflineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Licensing.Licenses/Deactivate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionLicensingLicensesDeactivate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLicensingLicensesDeactivateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Licensing.Licenses/ReAssignExactlyTo": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionLicensingLicensesReAssignExactlyTo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLicensingLicensesReAssignExactlyToRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Licensing.Licenses/UnAssignFromAllServers": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionLicensingLicensesUnAssignFromAllServers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLicensingLicensesUnAssignFromAllServersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Licensing.Licenses/FindValidAssignments": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionLicensingLicensesFindValidAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLicensingLicensesFindValidAssignmentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Licensing.Licenses/GetEvaluationState": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionLicensingLicensesGetEvaluationState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLicensingLicensesGetEvaluationStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Licensing.Licenses/GetAvailableAssignments": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionLicensingLicensesGetAvailableAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLicensingLicensesGetAvailableAssignmentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Licensing.Licenses/AddLicenseFilter": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionLicensingLicensesAddLicenseFilter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLicensingLicensesAddLicenseFilterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Licensing.Licenses/RemoveLicenseFilter": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionLicensingLicensesRemoveLicenseFilter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLicensingLicensesRemoveLicenseFilterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Maps.Projects/CloneMapProjects": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionMapsProjectsCloneMapProjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapsProjectsCloneMapProjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Maps.Projects/ReplaceResource": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionMapsProjectsReplaceResource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapsProjectsReplaceResourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Maps.Projects/ReplaceResourceAndMapInLimitations": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionMapsProjectsReplaceResourceAndMapInLimitations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapsProjectsReplaceResourceAndMapInLimitationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Maps.Graphs/CreateContainer": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionMapsGraphsCreateContainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapsGraphsCreateContainerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Maps.Graphs/UpdateContainer": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionMapsGraphsUpdateContainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapsGraphsUpdateContainerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Maps.Graphs/DeleteContainer": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionMapsGraphsDeleteContainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapsGraphsDeleteContainerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Maps.GraphMemberDefinitions/GetMembers": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionMapsGraphMemberDefinitionsGetMembers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapsGraphMemberDefinitionsGetMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Maps.GraphMemberDefinitions/GetFirstNMembers": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionMapsGraphMemberDefinitionsGetFirstNMembers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapsGraphMemberDefinitionsGetFirstNMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Metadata.Entity/GetAliases": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "MetadataEntityGetAliases",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MetadataEntityGetAliasesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Metadata.Entity/GetSchemaLoadTime": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "MetadataEntityGetSchemaLoadTime",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MetadataEntityGetSchemaLoadTimeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Mibs.Management/GetDatabaseState": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionMibsManagementGetDatabaseState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMibsManagementGetDatabaseStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Mibs.Management.Common.MibVersioning.Models.DatabaseState"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.InterfaceSources/EnableFlowInterfaceSources": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowInterfaceSourcesEnableFlowInterfaceSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowInterfaceSourcesEnableFlowInterfaceSourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.InterfaceSources/DisableFlowInterfaceSources": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowInterfaceSourcesDisableFlowInterfaceSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowInterfaceSourcesDisableFlowInterfaceSourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.InterfaceSources/SetExporterFlowDirection": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowInterfaceSourcesSetExporterFlowDirection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowInterfaceSourcesSetExporterFlowDirectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.NodeSources/EnableFlowNodeSources": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowNodeSourcesEnableFlowNodeSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowNodeSourcesEnableFlowNodeSourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.NodeSources/DisableFlowNodeSources": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowNodeSourcesDisableFlowNodeSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowNodeSourcesDisableFlowNodeSourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.NodeSources/SetManualSamplingRate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowNodeSourcesSetManualSamplingRate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowNodeSourcesSetManualSamplingRateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.NodeSources/SetAutoDetectedSamplingRate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowNodeSourcesSetAutoDetectedSamplingRate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowNodeSourcesSetAutoDetectedSamplingRateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.IPAddressGroupsManagement/SetIPRanges": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowIPAddressGroupsManagementSetIPRanges",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowIPAddressGroupsManagementSetIPRangesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Netflow.Contracts.IPGroups.ManageIpGroupsResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.IPAddressGroupsManagement/DeleteAllIpGroups": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowIPAddressGroupsManagementDeleteAllIpGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowIPAddressGroupsManagementDeleteAllIpGroupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Netflow.Contracts.IPGroups.ManageIpGroupsResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.IPAddressGroupsManagement/DeleteIpGroups": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowIPAddressGroupsManagementDeleteIpGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowIPAddressGroupsManagementDeleteIpGroupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Netflow.Contracts.IPGroups.ManageIpGroupsResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.IPAddressGroupsManagement/SetIpGroupsAsModified": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowIPAddressGroupsManagementSetIpGroupsAsModified",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowIPAddressGroupsManagementSetIpGroupsAsModifiedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Netflow.IPGroupExternalRelation/CreateFromIPAMGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionNetflowIPGroupExternalRelationCreateFromIPAMGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetflowIPGroupExternalRelationCreateFromIPAMGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.OLM.Nodes/EnableLogMonitoring": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Enable Log Analyzer monitoring for given node ID",
        "operationId": "OrionOLMNodesEnableLogMonitoring",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOLMNodesEnableLogMonitoringRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.OLM.Nodes/DisableLogMonitoring": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Disable Log Analyzer monitoring for given node ID",
        "operationId": "OrionOLMNodesDisableLogMonitoring",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOLMNodesDisableLogMonitoringRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.OLM.LogEntry/UidMaxForDate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "For internal use only.",
        "operationId": "OrionOLMLogEntryUidMaxForDate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOLMLogEntryUidMaxForDateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.OLM.LogEntry/UidMinForDate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "For internal use only.",
        "operationId": "OrionOLMLogEntryUidMinForDate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOLMLogEntryUidMinForDateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.OLM.LogEntry/UidExtractDate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "For internal use only.",
        "operationId": "OrionOLMLogEntryUidExtractDate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOLMLogEntryUidExtractDateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.OLM.ProcessingRule/EnableRule": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Enable rule",
        "operationId": "OrionOLMProcessingRuleEnableRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOLMProcessingRuleEnableRuleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.OLM.ProcessingRule/DisableRule": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Disable rule",
        "operationId": "OrionOLMProcessingRuleDisableRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOLMProcessingRuleDisableRuleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.OLM.ProcessingRule/ImportRules": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Import rules from provided json.",
        "operationId": "OrionOLMProcessingRuleImportRules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOLMProcessingRuleImportRulesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.LogMgmt.RuleProcessing.Models.ImportRuleSummary"
            }
          }
        }
      }
    },
    "/Invoke/Orion.OLM.ProcessingRule/ExportRules": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Export rules, either specified by name, rule ID or all if no identification is provided (separate multiple values by the separator, comma is used if not specified).",
        "operationId": "OrionOLMProcessingRuleExportRules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOLMProcessingRuleExportRulesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddAristaWMNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "This method adds Arista Wireless Manager node",
        "operationId": "OrionOrchestratorsInfoAddAristaWMNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddAristaWMNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddArubaCentralNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionOrchestratorsInfoAddArubaCentralNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddArubaCentralNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddExtremeCloudIQNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionOrchestratorsInfoAddExtremeCloudIQNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddExtremeCloudIQNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddJuniperMistNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionOrchestratorsInfoAddJuniperMistNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddJuniperMistNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddFortiLanCloudNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionOrchestratorsInfoAddFortiLanCloudNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddFortiLanCloudNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddMerakiNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionOrchestratorsInfoAddMerakiNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddMerakiNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddRuckusOneNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "This method adds Ruckus One node",
        "operationId": "OrionOrchestratorsInfoAddRuckusOneNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddRuckusOneNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddVeloCloudNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionOrchestratorsInfoAddVeloCloudNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddVeloCloudNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddViptelaNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionOrchestratorsInfoAddViptelaNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddViptelaNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddPrismaNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionOrchestratorsInfoAddPrismaNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddPrismaNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddArubaNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionOrchestratorsInfoAddArubaNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddArubaNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Orchestrators.Info/AddFortinetFortiManagerNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionOrchestratorsInfoAddFortinetFortiManagerNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionOrchestratorsInfoAddFortinetFortiManagerNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertActive/Acknowledge": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Acknowledge active alerts, based on array of alert active ids and desired notes.",
        "operationId": "OrionAlertActiveAcknowledge",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertActiveAcknowledgeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertActive/Unacknowledge": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Unacknowledge active alerts, based on array of alert active ids.",
        "operationId": "OrionAlertActiveUnacknowledge",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertActiveUnacknowledgeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertActive/ClearAlert": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Delete active alert from database. Manual alert reset",
        "operationId": "OrionAlertActiveClearAlert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertActiveClearAlertRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertActive/AppendNote": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Appends note to Alert object.",
        "operationId": "OrionAlertActiveAppendNote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertActiveAppendNoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertConfigurations/Import": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "This verb imports alert into system from alert xml",
        "operationId": "OrionAlertConfigurationsImport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertConfigurationsImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Alerting.AlertImportResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertConfigurations/Export": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "This verb exports alert definition",
        "operationId": "OrionAlertConfigurationsExport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertConfigurationsExportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertConfigurations/GetComplexPropertiesByAlertID": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "This verb get parsed alert's addition fields",
        "operationId": "OrionAlertConfigurationsGetComplexPropertiesByAlertID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertConfigurationsGetComplexPropertiesByAlertIDRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertConfigurationsCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionAlertConfigurationsCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertConfigurationsCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertConfigurationsCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionAlertConfigurationsCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertConfigurationsCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertConfigurationsCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionAlertConfigurationsCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertConfigurationsCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertConfigurationsCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionAlertConfigurationsCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertConfigurationsCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertConfigurationsCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionAlertConfigurationsCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertConfigurationsCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Actions/DeleteActionsByAssignments": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionActionsDeleteActionsByAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionActionsDeleteActionsByAssignmentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Actions/DeleteActionsByAssignmentsAndCategory": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionActionsDeleteActionsByAssignmentsAndCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionActionsDeleteActionsByAssignmentsAndCategoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Actions/SaveActionsForAssignments": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionActionsSaveActionsForAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionActionsSaveActionsForAssignmentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Actions/UpdateAction": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionActionsUpdateAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionActionsUpdateActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Actions/UpdateActionsProperties": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionActionsUpdateActionsProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionActionsUpdateActionsPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Actions/UpdateActionsDescriptions": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "This verb updates actions descriptions after updating of actions properties.",
        "operationId": "OrionActionsUpdateActionsDescriptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionActionsUpdateActionsDescriptionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Actions/UpdateActionsFrequencies": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "This verb updates actions frequencies after multi editing of actions",
        "operationId": "OrionActionsUpdateActionsFrequencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionActionsUpdateActionsFrequenciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Actions/TestAlertingAction": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionActionsTestAlertingAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionActionsTestAlertingActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Actions/TestReportingAction": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionActionsTestReportingAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionActionsTestReportingActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertSuppression/SuppressAlerts": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Do not trigger any alerts for entities defined in entityUris array during the suppressFrom-suppressUntil time period.",
        "operationId": "OrionAlertSuppressionSuppressAlerts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertSuppressionSuppressAlertsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertSuppression/ResumeAlerts": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Alerts for entities defined in entityUris array will be triggered as usual.",
        "operationId": "OrionAlertSuppressionResumeAlerts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertSuppressionResumeAlertsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.AlertSuppression/GetAlertSuppressionState": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Get Alert Suppression State for provided list of entities.",
        "operationId": "OrionAlertSuppressionGetAlertSuppressionState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAlertSuppressionGetAlertSuppressionStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.Alerts.EntityAlertSuppressionState"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.APIPoller.ApiPoller/AssignTemplate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Assign a new ApiPoller Template",
        "operationId": "OrionAPIPollerApiPollerAssignTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPIPollerApiPollerAssignTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APIPoller.ApiPoller/ExportTemplateFromApiPoller": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Export an ApiPoller Template",
        "operationId": "OrionAPIPollerApiPollerExportTemplateFromApiPoller",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPIPollerApiPollerExportTemplateFromApiPollerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APIPoller.ApiPoller/CreateApiPollerFromTemplate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Create new ApiPoller Template",
        "operationId": "OrionAPIPollerApiPollerCreateApiPollerFromTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPIPollerApiPollerCreateApiPollerFromTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APIPoller.Templates/ExportTemplate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Export an ApiPoller Template",
        "operationId": "OrionAPIPollerTemplatesExportTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPIPollerTemplatesExportTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APIPoller.Templates/ImportTemplate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Import a new ApiPoller Template",
        "operationId": "OrionAPIPollerTemplatesImportTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPIPollerTemplatesImportTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.APIPoller.Templates/DeleteTemplate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Delete ApiPoller Template",
        "operationId": "OrionAPIPollerTemplatesDeleteTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAPIPollerTemplatesDeleteTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Report/DuplicateReport": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportDuplicateReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportDuplicateReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Report/CreateReport": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportCreateReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportCreateReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Report/UpdateReport": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportUpdateReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportUpdateReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Report/DeleteReport": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportDeleteReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportDeleteReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ReportFavorites/DeleteReportFavoriteMark": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportFavoritesDeleteReportFavoriteMark",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportFavoritesDeleteReportFavoriteMarkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ReportFavorites/AddReportFavoriteMark": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportFavoritesAddReportFavoriteMark",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportFavoritesAddReportFavoriteMarkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ReportsCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportsCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportsCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ReportsCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportsCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportsCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ReportsCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportsCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportsCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ReportsCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportsCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportsCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.ReportsCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionReportsCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportsCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/CreateCorePluginConfiguration": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates a new configuration for a plugin.",
        "operationId": "OrionDiscoveryCreateCorePluginConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryCreateCorePluginConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/StartDiscovery": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionDiscoveryStartDiscovery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryStartDiscoveryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/StartDiscoveryProfile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Starts discovery for specified profile ID",
        "operationId": "OrionDiscoveryStartDiscoveryProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryStartDiscoveryProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/CancelDiscovery": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionDiscoveryCancelDiscovery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryCancelDiscoveryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/GetDiscoveryProgress": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionDiscoveryGetDiscoveryProgress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryGetDiscoveryProgressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/ImportDiscoveryResults": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Import discovery results for set of discovered nodes",
        "operationId": "OrionDiscoveryImportDiscoveryResults",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryImportDiscoveryResultsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/GetImportDiscoveryResultsProgress": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Get the progress of ImportDiscoveryResults",
        "operationId": "OrionDiscoveryGetImportDiscoveryResultsProgress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryGetImportDiscoveryResultsProgressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Discovery.DiscoveryImportProgressInfo"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/DeleteDiscoveryProfile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes discovery profile by its profileId.",
        "operationId": "OrionDiscoveryDeleteDiscoveryProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryDeleteDiscoveryProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/ResolveHostnameFromIp": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Get hostname from given IP address",
        "operationId": "OrionDiscoveryResolveHostnameFromIp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryResolveHostnameFromIpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/ResolveIpFromHostname": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Get IP Address from given hostname",
        "operationId": "OrionDiscoveryResolveIpFromHostname",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryResolveIpFromHostnameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Discovery/ValidateCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Check if provided credential is valid for given SNMP or WMI endpoint",
        "operationId": "OrionDiscoveryValidateCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDiscoveryValidateCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Accounts/CreateAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionAccountsCreateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAccountsCreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Accounts/CreateOrionAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates a new Account with provided Account ID and Password.",
        "operationId": "OrionAccountsCreateOrionAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAccountsCreateOrionAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Accounts/CreateSamlAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds SAML user account specified by its name into Orion.",
        "operationId": "OrionAccountsCreateSamlAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAccountsCreateSamlAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Accounts/CreateWindowsAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds Windows User accounts into Orion based on the provided account name search string.",
        "operationId": "OrionAccountsCreateWindowsAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAccountsCreateWindowsAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Accounts/UpdateAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates properties of the specified Account with provided values.",
        "operationId": "OrionAccountsUpdateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAccountsUpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Accounts/DeleteAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes specified account.",
        "operationId": "OrionAccountsDeleteAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAccountsDeleteAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Accounts/ChangePassword": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Changes password of the specified Account with provided string.",
        "operationId": "OrionAccountsChangePassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAccountsChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Accounts/ResetPassword": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Resets password to empty password.",
        "operationId": "OrionAccountsResetPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAccountsResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Accounts/CreateOneTimeLoginToken": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates a one time login token.",
        "operationId": "OrionAccountsCreateOneTimeLoginToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAccountsCreateOneTimeLoginTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Accounts/CreateVirtualAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates virtual user account.",
        "operationId": "OrionAccountsCreateVirtualAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionAccountsCreateVirtualAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Reporting/ExecuteSQL": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionReportingExecuteSQL",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionReportingExecuteSQLRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Views/CloneView": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates a clone of an existing view",
        "operationId": "OrionViewsCloneView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionViewsCloneViewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Views/AddViewToGroup": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds an existing view as a subview to another view and enables subviews on target if needed",
        "operationId": "OrionViewsAddViewToGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionViewsAddViewToGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Views/CloneViewContents": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates a copy of all resources including properties of source view to a destination view",
        "operationId": "OrionViewsCloneViewContents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionViewsCloneViewContentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Views/AddResourceToView": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds a resource to existing view by using resource configuration xml fragment",
        "operationId": "OrionViewsAddResourceToView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionViewsAddResourceToViewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Credential/CreateSNMPCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates SNMP v1 or v2c credentials",
        "operationId": "OrionCredentialCreateSNMPCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCredentialCreateSNMPCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Credential/CreateSNMPv3Credentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates SNMP v3 credentials",
        "operationId": "OrionCredentialCreateSNMPv3Credentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCredentialCreateSNMPv3CredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Credential/CreateUsernamePasswordCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates credentials with username and password, these are used for example by WMI polling.",
        "operationId": "OrionCredentialCreateUsernamePasswordCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCredentialCreateUsernamePasswordCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Credential/CreateUsernamePasswordWithContentCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates credentials with username, password and content, these are used for example by PaloAlto REST polling.",
        "operationId": "OrionCredentialCreateUsernamePasswordWithContentCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCredentialCreateUsernamePasswordWithContentCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Credential/UpdateSNMPCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates SNMP v1 or v2c credentials.",
        "operationId": "OrionCredentialUpdateSNMPCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCredentialUpdateSNMPCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Credential/UpdateSNMPv3Credentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates SNMPv3 credentials.",
        "operationId": "OrionCredentialUpdateSNMPv3Credentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCredentialUpdateSNMPv3CredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Credential/UpdateUsernamePasswordCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates credentials with username and password. These are used, for example, by WMI polling.",
        "operationId": "OrionCredentialUpdateUsernamePasswordCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCredentialUpdateUsernamePasswordCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Credential/UpdateUsernamePasswordWithContentCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates credentials with username, password and content. These are used for example by PaloAlto REST polling.",
        "operationId": "OrionCredentialUpdateUsernamePasswordWithContentCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCredentialUpdateUsernamePasswordWithContentCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Credential/UpdateCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates credential properties",
        "operationId": "OrionCredentialUpdateCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCredentialUpdateCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Credential/CreateCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates credential with provided list of properties",
        "operationId": "OrionCredentialCreateCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCredentialCreateCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Sites/ApplyServerIDToQuerySelectStatement": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Extends a specified query with a Site info the data originates from.",
        "operationId": "OrionSitesApplyServerIDToQuerySelectStatement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSitesApplyServerIDToQuerySelectStatementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Features/Refresh": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Internal verb which enforce system to recalculate orion features",
        "operationId": "OrionFeaturesRefresh",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionFeaturesRefreshRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Web.Menu/ClearCache": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Clears menu item cache.",
        "operationId": "OrionWebMenuClearCache",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWebMenuClearCacheRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Dependencies/RemoveDependencies": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Ignore dependencies. Such dependencies are ingored in Autodependency calculation.",
        "operationId": "OrionDependenciesRemoveDependencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDependenciesRemoveDependenciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.DeletedAutoDependencies/RemoveIgnoredAutoDependencies": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Removes ignored dependencies.",
        "operationId": "OrionDeletedAutoDependenciesRemoveIgnoredAutoDependencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionDeletedAutoDependenciesRemoveIgnoredAutoDependenciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Events/Acknowledge": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionEventsAcknowledge",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEventsAcknowledgeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Limitations/CreateLimitation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates Limitations and optionally assignes them to Accounts.",
        "operationId": "OrionLimitationsCreateLimitation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLimitationsCreateLimitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Limitations/UpdateLimitation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Updates Limitation to a new definition i.e. new set of items it shoud match.",
        "operationId": "OrionLimitationsUpdateLimitation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLimitationsUpdateLimitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Limitations/DeleteLimitation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deletes Limitation and removes it from an Account it was assigned to previously.",
        "operationId": "OrionLimitationsDeleteLimitation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionLimitationsDeleteLimitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.MapStudioFiles/InsertFile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionMapStudioFilesInsertFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapStudioFilesInsertFileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        }
      }
    },
    "/Invoke/Orion.MapStudioFiles/UpdateFile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionMapStudioFilesUpdateFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapStudioFilesUpdateFileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        }
      }
    },
    "/Invoke/Orion.MapStudioFiles/LockFile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionMapStudioFilesLockFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapStudioFilesLockFileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        }
      }
    },
    "/Invoke/Orion.MapStudioFiles/LockFileTable": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionMapStudioFilesLockFileTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapStudioFilesLockFileTableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Orion.MapStudioFiles/UnlockAllFiles": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionMapStudioFilesUnlockAllFiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapStudioFilesUnlockAllFilesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        }
      }
    },
    "/Invoke/Orion.MapStudioFiles/DeleteFile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionMapStudioFilesDeleteFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapStudioFilesDeleteFileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        }
      }
    },
    "/Invoke/Orion.MapStudioFiles/GetMapStyle": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Get map style of the map",
        "operationId": "OrionMapStudioFilesGetMapStyle",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionMapStudioFilesGetMapStyleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NetworkAtlas/GetNAVersion": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns version of the installed Network Atlas.",
        "operationId": "OrionNetworkAtlasGetNAVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNetworkAtlasGetNAVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/Unmanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Set the given node into maintenance mode so the node polling is disabled",
        "operationId": "OrionNodesUnmanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesUnmanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/Remanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Enables polling on node if it was unmanaged before",
        "operationId": "OrionNodesRemanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesRemanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/PollNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "It will poll node instance and update its information",
        "operationId": "OrionNodesPollNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesPollNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/RediscoverNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "It will rediscover node instance and update its information",
        "operationId": "OrionNodesRediscoverNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesRediscoverNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/GetCountOfElementsPerEngineForLicensing": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns count of used elements (per engine) for licensing",
        "operationId": "OrionNodesGetCountOfElementsPerEngineForLicensing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesGetCountOfElementsPerEngineForLicensingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Licensing.CountOfElementsResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/ScheduleListResources": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Schedule one time List Resources discovery for given NodeId",
        "operationId": "OrionNodesScheduleListResources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesScheduleListResourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/ScheduleListResourcesForAddress": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Schedule one time List Resources discovery for given ip address",
        "operationId": "OrionNodesScheduleListResourcesForAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesScheduleListResourcesForAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/GetScheduledListResourcesStatus": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Get current result of discovery job",
        "operationId": "OrionNodesGetScheduledListResourcesStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesGetScheduledListResourcesStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/GetScheduledListResourcesStatusByEngine": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Get current result of discovery job",
        "operationId": "OrionNodesGetScheduledListResourcesStatusByEngine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesGetScheduledListResourcesStatusByEngineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/GetListResourcesResult": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Get the result of List Resources discovery",
        "operationId": "OrionNodesGetListResourcesResult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesGetListResourcesResultRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SolarWinds.Orion.Core.Models.V1.DiscoveredObjects.DiscoveryResultExportItem"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/GetListResourcesResultByEngine": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Get the result of List Resources discovery",
        "operationId": "OrionNodesGetListResourcesResultByEngine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesGetListResourcesResultByEngineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SolarWinds.Orion.Core.Models.V1.DiscoveredObjects.DiscoveryResultExportItem"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/ImportSelectedListResourcesResult": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Import selected result of discovery",
        "operationId": "OrionNodesImportSelectedListResourcesResult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesImportSelectedListResourcesResultRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Int32~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Nodes/ImportListResourcesResult": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Import all results found during discovery",
        "operationId": "OrionNodesImportListResourcesResult",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesImportListResourcesResultRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NodesCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionNodesCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NodesCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionNodesCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NodesCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionNodesCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NodesCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionNodesCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NodesCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionNodesCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNodesCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Resources/CheckResourceMigration": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "This verb checks, whether it is possible to migrate classic resources (charts) to its modern version.",
        "operationId": "OrionResourcesCheckResourceMigration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionResourcesCheckResourceMigrationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Resources/MigrateClassicToModernResources": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "This verb migrates classic resources (charts) to its modern version.",
        "operationId": "OrionResourcesMigrateClassicToModernResources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionResourcesMigrateClassicToModernResourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Resources/MigrateModernToClassicResources": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "This verb reverts migration back to classic resources (charts).",
        "operationId": "OrionResourcesMigrateModernToClassicResources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionResourcesMigrateModernToClassicResourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Resources/GetModernResourceName": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns new apollo chart name for given classic chart name",
        "operationId": "OrionResourcesGetModernResourceName",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionResourcesGetModernResourceNameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Volumes/Unmanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Unmanages specified volume in the specified time range",
        "operationId": "OrionVolumesUnmanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVolumesUnmanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Volumes/Remanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Remanages specified volume",
        "operationId": "OrionVolumesRemanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVolumesRemanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VolumesCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionVolumesCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVolumesCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VolumesCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionVolumesCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVolumesCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VolumesCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionVolumesCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVolumesCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VolumesCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionVolumesCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVolumesCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VolumesCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionVolumesCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVolumesCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Environment/CanInstall": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionEnvironmentCanInstall",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEnvironmentCanInstallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Environment/AuthorizeWindowsAccountForDatabase": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds provided user to Orion database with db_owner permissions.",
        "operationId": "OrionEnvironmentAuthorizeWindowsAccountForDatabase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEnvironmentAuthorizeWindowsAccountForDatabaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Environment/GetConnectionString": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns connection string",
        "operationId": "OrionEnvironmentGetConnectionString",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEnvironmentGetConnectionStringRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Environment/GetSqlServerIpAddresses": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns array of IP addresses of current SQL server",
        "operationId": "OrionEnvironmentGetSqlServerIpAddresses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEnvironmentGetSqlServerIpAddressesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Environment/GetDatabaseAccessCredential": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns credential used to access Orion database when system is configured to use Windows authentication",
        "operationId": "OrionEnvironmentGetDatabaseAccessCredential",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEnvironmentGetDatabaseAccessCredentialRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.DatabaseAccessCredential"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Environment/GetOrionServerCertificate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns Orion certificate",
        "operationId": "OrionEnvironmentGetOrionServerCertificate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEnvironmentGetOrionServerCertificateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Environment/UninstallAll": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Uninstalls all SolarWinds products",
        "operationId": "OrionEnvironmentUninstallAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEnvironmentUninstallAllRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Environment/StartPreStaging": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Pre-download all bits required for upgrade",
        "operationId": "OrionEnvironmentStartPreStaging",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionEnvironmentStartPreStagingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Frequencies/SaveReportFrequencies": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionFrequenciesSaveReportFrequencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionFrequenciesSaveReportFrequenciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Frequencies/SaveTimePeriodFrequencies": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionFrequenciesSaveTimePeriodFrequencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionFrequenciesSaveTimePeriodFrequenciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.Frequencies/DeleteFrequencies": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionFrequenciesDeleteFrequencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionFrequenciesDeleteFrequenciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.TechnologyPollingAssignments/EnableAssignments": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionTechnologyPollingAssignmentsEnableAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionTechnologyPollingAssignmentsEnableAssignmentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.TechnologyPollingAssignments/DisableAssignments": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionTechnologyPollingAssignmentsDisableAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionTechnologyPollingAssignmentsDisableAssignmentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.TechnologyPollingAssignments/EnableAssignmentsOnNetObjects": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionTechnologyPollingAssignmentsEnableAssignmentsOnNetObjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionTechnologyPollingAssignmentsEnableAssignmentsOnNetObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.TechnologyPollingAssignments/DisableAssignmentsOnNetObjects": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionTechnologyPollingAssignmentsDisableAssignmentsOnNetObjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionTechnologyPollingAssignmentsDisableAssignmentsOnNetObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.NotificationItemGrouped/AcknowledgeAll": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Sets notification item acknowledgement timestamp and user for all items.",
        "operationId": "OrionNotificationItemGroupedAcknowledgeAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNotificationItemGroupedAcknowledgeAllRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NotificationItemGrouped/AcknowledgeById": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Sets notification item acknowledgement timestamp and user for specific item.",
        "operationId": "OrionNotificationItemGroupedAcknowledgeById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNotificationItemGroupedAcknowledgeByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NotificationItemGrouped/UnAcknowledgeById": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Resets notification item acknowledgement for specific item.",
        "operationId": "OrionNotificationItemGroupedUnAcknowledgeById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNotificationItemGroupedUnAcknowledgeByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NotificationItemGrouped/AcknowledgeByType": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Sets notification item acknowledgement timestamp and user for items of a specific type.",
        "operationId": "OrionNotificationItemGroupedAcknowledgeByType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNotificationItemGroupedAcknowledgeByTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.NotificationItemGrouped/UnAcknowledgeByType": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Resets notification item acknowledgement for items of a specific type.",
        "operationId": "OrionNotificationItemGroupedUnAcknowledgeByType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionNotificationItemGroupedUnAcknowledgeByTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PolicyEngine.Policy/ExportPolicy": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Export a policy with rules into YAML format.",
        "operationId": "OrionPolicyEnginePolicyExportPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPolicyEnginePolicyExportPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PolicyEngine.Policy/ImportPolicy": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Import a policy from YAML format to database.",
        "operationId": "OrionPolicyEnginePolicyImportPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPolicyEnginePolicyImportPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PolicyEngine.Policy/AssignToEntity": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Assign a policy to an entity.",
        "operationId": "OrionPolicyEnginePolicyAssignToEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPolicyEnginePolicyAssignToEntityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PolicyEngine.Policy/UnassignFromEntity": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Unassign a policy from an entity.",
        "operationId": "OrionPolicyEnginePolicyUnassignFromEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPolicyEnginePolicyUnassignFromEntityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PolicyEngine.Policy/PollNowAndEvaluate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Execute data source collection and evaluation of all rules in a policy.",
        "operationId": "OrionPolicyEnginePolicyPollNowAndEvaluate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPolicyEnginePolicyPollNowAndEvaluateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Remoting.RemoteExecutionPackage/Execute": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Executes package on given node.",
        "operationId": "OrionRemotingRemoteExecutionPackageExecute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionRemotingRemoteExecutionPackageExecuteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SCM.ServerConfiguration/PollNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "On target nodes triggers refreshing of watchers, polls the current results of file, registry and script elements and executes jobs for polling SWIS and database elements.",
        "operationId": "OrionSCMServerConfigurationPollNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSCMServerConfigurationPollNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SCM.ServerConfiguration/EnableFimDriverWatching": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "On target node enable polling through FIM driver if it was previously disabled by DisableFimDriverWatching verb.",
        "operationId": "OrionSCMServerConfigurationEnableFimDriverWatching",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSCMServerConfigurationEnableFimDriverWatchingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SCM.ServerConfiguration/DisableFimDriverWatching": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "On target node disable polling through FIM driver.",
        "operationId": "OrionSCMServerConfigurationDisableFimDriverWatching",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSCMServerConfigurationDisableFimDriverWatchingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SCM.ServerConfiguration/PollNowWithNotification": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Executes PollNow and triggers Orion.SCM.OneTimePollFinished indication once all results are collected",
        "operationId": "OrionSCMServerConfigurationPollNowWithNotification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSCMServerConfigurationPollNowWithNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SCM.Profiles/AssignToNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Assigns profile to node.",
        "operationId": "OrionSCMProfilesAssignToNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSCMProfilesAssignToNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SCM.Profiles/UnassignFromNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Unassigns profile from node.",
        "operationId": "OrionSCMProfilesUnassignFromNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSCMProfilesUnassignFromNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SCM.Profiles/ExportProfile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Exports profile to JSON",
        "operationId": "OrionSCMProfilesExportProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSCMProfilesExportProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SCM.Profiles/ImportProfile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Imports profile from JSON",
        "operationId": "OrionSCMProfilesImportProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSCMProfilesImportProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SCM.Profiles/ImportPolicyProfile": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Imports policy profile from YAML",
        "operationId": "OrionSCMProfilesImportPolicyProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSCMProfilesImportPolicyProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SCM.Baseline/SetBaseline": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Create or update baseline and snapshot all related data so that they are not touched by maintenance processes.",
        "operationId": "OrionSCMBaselineSetBaseline",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSCMBaselineSetBaselineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/GetImportSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsGetImportSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsGetImportSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.VulnerabilityImportSettings"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/SetImportSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsSetImportSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsSetImportSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.SetImportSettingsResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/ValidateSources": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsValidateSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsValidateSourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.SourcesValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/DeleteAll": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsDeleteAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsDeleteAllRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/GetVulnerabilitiesDatabaseInfo": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsGetVulnerabilitiesDatabaseInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsGetVulnerabilitiesDatabaseInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.VulnerabilitiesDatabaseInfo"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/RunImportNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsRunImportNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsRunImportNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/GetLastImport": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsGetLastImport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsGetLastImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.ImportRunInfo"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/RunMatchNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsRunMatchNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsRunMatchNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/GetMatchSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsGetMatchSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsGetMatchSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.VulnerabilityMatchSettingsModel"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/SetMatchSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsSetMatchSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsSetMatchSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.SetMatchSettingsResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Settings/DeleteMatchBySelection": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesSettingsDeleteMatchBySelection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesSettingsDeleteMatchBySelectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.NodeCve/SetStates": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesNodeCveSetStates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesNodeCveSetStatesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Nodes/Add": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesNodesAdd",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesNodesAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SecObs.Vulnerabilities.Nodes/Remove": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSecObsVulnerabilitiesNodesRemove",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSecObsVulnerabilitiesNodesRemoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEM.Events/GetEventDetails": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEMEventsGetEventDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEMEventsGetEventDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEM.Settings/GetWebApiSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEMSettingsGetWebApiSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEMSettingsGetWebApiSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Sem.Common.Models.WebApiSettings"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEM.Settings/SetWebApiSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEMSettingsSetWebApiSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEMSettingsSetWebApiSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEM.Settings/TestWebApiSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEMSettingsTestWebApiSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEMSettingsTestWebApiSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Transactions/Unmanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Verb to unmanage transaction",
        "operationId": "OrionSEUMTransactionsUnmanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMTransactionsUnmanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Transactions/Remanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Verb to remanage transaction",
        "operationId": "OrionSEUMTransactionsRemanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMTransactionsRemanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Transactions/Create": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Verb to create transaction",
        "operationId": "OrionSEUMTransactionsCreate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMTransactionsCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.TransactionCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEUMTransactionCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMTransactionCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.TransactionCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEUMTransactionCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMTransactionCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.TransactionCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEUMTransactionCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMTransactionCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.TransactionCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEUMTransactionCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMTransactionCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Settings/GetRecorderCompatibility": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Returns api version and installed recorder version.",
        "operationId": "OrionSEUMSettingsGetRecorderCompatibility",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMSettingsGetRecorderCompatibilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.RecorderCompatibility"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Settings/GetRecorderInstaller": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Gets installer",
        "operationId": "OrionSEUMSettingsGetRecorderInstaller",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMSettingsGetRecorderInstallerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.IO.MemoryStream"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Recordings/Load": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Deprecated. To load recording use Export Verb instead.",
        "operationId": "OrionSEUMRecordingsLoad",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingsLoadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.Recording"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Recordings/Exists": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Verb to check if recording exists.",
        "operationId": "OrionSEUMRecordingsExists",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingsExistsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Recordings/Save": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Verb to save recording.",
        "operationId": "OrionSEUMRecordingsSave",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingsSaveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Recordings/Import": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Verb to import recording from file.",
        "operationId": "OrionSEUMRecordingsImport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingsImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Recordings/Update": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Verb to update existing recording with recording from file.",
        "operationId": "OrionSEUMRecordingsUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingsUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.Recordings/Export": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Verb to export recording to file.",
        "operationId": "OrionSEUMRecordingsExport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingsExportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.RecordingFileContent"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.RecordingsSettings/CheckRecorderCompatibility": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Checks version compatibility",
        "operationId": "OrionSEUMRecordingsSettingsCheckRecorderCompatibility",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingsSettingsCheckRecorderCompatibilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SEUM.Verbs.v3.VersionCompatibility"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.RecordingCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEUMRecordingCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.RecordingCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEUMRecordingCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.RecordingCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEUMRecordingCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SEUM.RecordingCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSEUMRecordingCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSEUMRecordingCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/SOC.Settings/SetSetting": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Set key/value setting into this entity.",
        "operationId": "SOCSettingsSetSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SOCSettingsSetSettingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.DatabaseHelper/GetListOfDatabases": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMDatabaseHelperGetListOfDatabases",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMDatabaseHelperGetListOfDatabasesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.DatabaseHelper/GetAccountsList": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMDatabaseHelperGetAccountsList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMDatabaseHelperGetAccountsListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.DatabaseHelper/TestUserAndPassword": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMDatabaseHelperTestUserAndPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMDatabaseHelperTestUserAndPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.DatabaseHelper/Validate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMDatabaseHelperValidate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMDatabaseHelperValidateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.DatabaseHelper/GetLoginNameFromCurrentSqlSession": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMDatabaseHelperGetLoginNameFromCurrentSqlSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMDatabaseHelperGetLoginNameFromCurrentSqlSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.DatabaseHelper/UpdateUserAccount": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMDatabaseHelperUpdateUserAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMDatabaseHelperUpdateUserAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.TaskBroker/ExecuteWsusServerTask": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMTaskBrokerExecuteWsusServerTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMTaskBrokerExecuteWsusServerTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.PM.Common.Model.TaskResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.TaskBroker/ExecuteWsusServerClearTask": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMTaskBrokerExecuteWsusServerClearTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMTaskBrokerExecuteWsusServerClearTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.PM.Common.Model.TaskResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.TaskBroker/ExecuteWsusServerParallelTasks": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMTaskBrokerExecuteWsusServerParallelTasks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMTaskBrokerExecuteWsusServerParallelTasksRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.PM.Common.Model.TaskResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.TaskBroker/CheckEWDataGridAvailability": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMTaskBrokerCheckEWDataGridAvailability",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMTaskBrokerCheckEWDataGridAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.PM.Common.Model.EWDataGridEntity"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.TaskBroker/CheckTaskState": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMTaskBrokerCheckTaskState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMTaskBrokerCheckTaskStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.PM.Common.Model.TaskResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.Management/IsDataGridCredentialAvailable": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMManagementIsDataGridCredentialAvailable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMManagementIsDataGridCredentialAvailableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.Management/PasswordCanBeDecrypted": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMManagementPasswordCanBeDecrypted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMManagementPasswordCanBeDecryptedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.Management/TestSpmWebApiCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMManagementTestSpmWebApiCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMManagementTestSpmWebApiCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.Management/GetSpmWebApiCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMManagementGetSpmWebApiCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMManagementGetSpmWebApiCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.PM.Common.Model.SharedNetworkCredential"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.Management/SetSpmWebApiCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMManagementSetSpmWebApiCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMManagementSetSpmWebApiCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.Management/GetSpmWebApiHostSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMManagementGetSpmWebApiHostSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMManagementGetSpmWebApiHostSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.PM.Common.Model.SpmWebApiHostSettings"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.Management/GetCurrentDataGridDbSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMManagementGetCurrentDataGridDbSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMManagementGetCurrentDataGridDbSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.PM.Management/SetCurrentDataGridDbSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionPMManagementSetCurrentDataGridDbSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionPMManagementSetCurrentDataGridDbSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageArrays/GetLicensedArrays": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Will return list of Storage Array IDs which are licensed.",
        "operationId": "OrionSRMStorageArraysGetLicensedArrays",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageArraysGetLicensedArraysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageArrays/AddSmisCredentials": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds smis credentials. Returns credentials ID",
        "operationId": "OrionSRMStorageArraysAddSmisCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageArraysAddSmisCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageArrays/AddExternalProvider": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds external provider. Receives credential ID, returns provider ID.",
        "operationId": "OrionSRMStorageArraysAddExternalProvider",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageArraysAddExternalProviderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageArrays/AddAllArrays": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Adds all arrays within given provider. Returns true if success",
        "operationId": "OrionSRMStorageArraysAddAllArrays",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageArraysAddAllArraysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.PhysicalDisks/GetCountOfElementsPerEngineForLicensing": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMPhysicalDisksGetCountOfElementsPerEngineForLicensing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMPhysicalDisksGetCountOfElementsPerEngineForLicensingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Licensing.CountOfElementsResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.DeviceMigrations/TriggerMigration": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Will trigger a migration for a particular storage array to new monitoring",
        "operationId": "OrionSRMDeviceMigrationsTriggerMigration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMDeviceMigrationsTriggerMigrationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.SRM.Common.BL.MigrationResults.MigrationEntity"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.DeviceMigrations/RefreshDeviceMigrations": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Will trigger a refresh SRM Device migrations table with updated info",
        "operationId": "OrionSRMDeviceMigrationsRefreshDeviceMigrations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMDeviceMigrationsRefreshDeviceMigrationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.VServersCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMVServersCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMVServersCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.VServersCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMVServersCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMVServersCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.VServersCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMVServersCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMVServersCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.VServersCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMVServersCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMVServersCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.VServersCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMVServersCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMVServersCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.LUNCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMLUNCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMLUNCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.LUNCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMLUNCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMLUNCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.LUNCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMLUNCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMLUNCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.LUNCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMLUNCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMLUNCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.LUNCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMLUNCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMLUNCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.VolumeCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMVolumeCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMVolumeCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.VolumeCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMVolumeCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMVolumeCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.VolumeCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMVolumeCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMVolumeCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.VolumeCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMVolumeCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMVolumeCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.VolumeCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMVolumeCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMVolumeCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.FileShareCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMFileShareCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMFileShareCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.FileShareCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMFileShareCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMFileShareCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.FileShareCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMFileShareCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMFileShareCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.FileShareCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMFileShareCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMFileShareCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.FileShareCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMFileShareCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMFileShareCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageArrayCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageArrayCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageArrayCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageArrayCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageArrayCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageArrayCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageArrayCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageArrayCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageArrayCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageArrayCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageArrayCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageArrayCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageArrayCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageArrayCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageArrayCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.ProviderCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMProviderCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMProviderCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.ProviderCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMProviderCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMProviderCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.ProviderCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMProviderCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMProviderCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.ProviderCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMProviderCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMProviderCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.ProviderCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMProviderCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMProviderCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.PoolCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMPoolCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMPoolCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.PoolCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMPoolCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMPoolCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.PoolCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMPoolCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMPoolCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.PoolCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMPoolCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMPoolCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.PoolCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMPoolCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMPoolCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageControllerCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageControllerCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageControllerCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageControllerCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageControllerCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageControllerCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageControllerCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageControllerCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageControllerCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageControllerCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageControllerCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageControllerCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageControllerCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageControllerCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageControllerCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageControllerPortCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageControllerPortCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageControllerPortCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageControllerPortCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageControllerPortCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageControllerPortCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageControllerPortCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageControllerPortCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageControllerPortCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageControllerPortCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageControllerPortCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageControllerPortCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SRM.StorageControllerPortCustomProperties/ValidateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "ToDo",
        "operationId": "OrionSRMStorageControllerPortCustomPropertiesValidateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSRMStorageControllerPortCustomPropertiesValidateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.SSO/ValidateUserToken": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionSSOValidateUserToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionSSOValidateUserTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
              }
            }
          }
        }
      }
    },
    "/Invoke/System.QueryPlanCache/Clear": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "SystemQueryPlanCacheClear",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SystemQueryPlanCacheClearRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/System.ActiveQuery/CancelByClientSessionID": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "SystemActiveQueryCancelByClientSessionID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SystemActiveQueryCancelByClientSessionIDRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/UamsClient.InstallationInfo/CreateInstallationInfo": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Creates installation info with success installation result when UAMS client is installed manually.",
        "operationId": "UamsClientInstallationInfoCreateInstallationInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UamsClientInstallationInfoCreateInstallationInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/UamsClient.InstallationInfo/InstallUamsClient": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Executed installation of the UAMS client on the main poller.",
        "operationId": "UamsClientInstallationInfoInstallUamsClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UamsClientInstallationInfoInstallUamsClientRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/UamsClient.InstallationInfo/UninstallUamsClient": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Executed uninstallation of the UAMS client on the main poller.",
        "operationId": "UamsClientInstallationInfoUninstallUamsClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UamsClientInstallationInfoUninstallUamsClientRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/UamsClient.InstallationInfo/SetAccessToken": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Change access token.",
        "operationId": "UamsClientInstallationInfoSetAccessToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UamsClientInstallationInfoSetAccessTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/UamsClient.InstallationInfo/CheckSwokenValidity": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Check of SWOKEN validity.",
        "operationId": "UamsClientInstallationInfoCheckSwokenValidity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UamsClientInstallationInfoCheckSwokenValidityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Instances/Unmanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudInstancesUnmanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudInstancesUnmanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Instances/Remanage": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudInstancesRemanage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudInstancesRemanageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Instances/PollNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudInstancesPollNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudInstancesPollNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Instances/StartInstance": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudInstancesStartInstance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudInstancesStartInstanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Instances/StopInstance": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudInstancesStopInstance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudInstancesStopInstanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Instances/RebootInstance": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudInstancesRebootInstance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudInstancesRebootInstanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Instances/DeleteInstance": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudInstancesDeleteInstance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudInstancesDeleteInstanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Instances/DeleteInstanceWithNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudInstancesDeleteInstanceWithNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudInstancesDeleteInstanceWithNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Aws.Instances/ForceStopInstance": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudAwsInstancesForceStopInstance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudAwsInstancesForceStopInstanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Aws.Instances/TerminateInstance": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudAwsInstancesTerminateInstance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudAwsInstancesTerminateInstanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.Cloud.Aws.Instances/TerminateInstanceAndRemoveNode": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionCloudAwsInstancesTerminateInstanceAndRemoveNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionCloudAwsInstancesTerminateInstanceAndRemoveNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.Discovery/CreateVimPluginConfiguration": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Create VIM Plugin Configuration",
        "operationId": "OrionVIMDiscoveryCreateVimPluginConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMDiscoveryCreateVimPluginConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.Tags/SynchronizeToCustomProperties": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Synchronize tags to custom properties",
        "operationId": "OrionVIMTagsSynchronizeToCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMTagsSynchronizeToCustomPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.ClustersCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMClustersCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMClustersCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.ClustersCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMClustersCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMClustersCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.ClustersCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMClustersCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMClustersCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.ClustersCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMClustersCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMClustersCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.DataCentersCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMDataCentersCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMDataCentersCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.DataCentersCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMDataCentersCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMDataCentersCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.DataCentersCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMDataCentersCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMDataCentersCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.DataCentersCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMDataCentersCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMDataCentersCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.VirtualMachines/PerformBasicAction": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Perform Basic VM management actions such as PowerOff, PowerOn, Pause, Resume, Suspend, Reboot, DeleteVM, and UnregisterVM",
        "operationId": "OrionVIMVirtualMachinesPerformBasicAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMVirtualMachinesPerformBasicActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.VirtualMachines/TakeSnapshot": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Take snapshot of the given VM. snapshotName is optional",
        "operationId": "OrionVIMVirtualMachinesTakeSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMVirtualMachinesTakeSnapshotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.VirtualMachines/DeleteSnapshot": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Delete the snapshot of the given VM.",
        "operationId": "OrionVIMVirtualMachinesDeleteSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMVirtualMachinesDeleteSnapshotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.VirtualMachines/ChangeSettings": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Change VM Settings, including number of processors and RAM size(MB). A VM restart is required to ensure settings change to work.",
        "operationId": "OrionVIMVirtualMachinesChangeSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMVirtualMachinesChangeSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.VirtualMachines/Migrate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Migrate VM to a different host. storageDestination is optional. A flag 'restartRequired` can also be passed to force a VM poweroff/poweron.",
        "operationId": "OrionVIMVirtualMachinesMigrate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMVirtualMachinesMigrateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.VirtualMachines/Relocate": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "Relocate the VM to a different DataStore.",
        "operationId": "OrionVIMVirtualMachinesRelocate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMVirtualMachinesRelocateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.VirtualMachinesCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMVirtualMachinesCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMVirtualMachinesCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.VirtualMachinesCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMVirtualMachinesCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMVirtualMachinesCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.VirtualMachinesCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMVirtualMachinesCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMVirtualMachinesCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.VirtualMachinesCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMVirtualMachinesCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMVirtualMachinesCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.HostsCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMHostsCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMHostsCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.HostsCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMHostsCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMHostsCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.HostsCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMHostsCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMHostsCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.HostsCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMHostsCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMHostsCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.DatastoresCustomProperties/CreateCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMDatastoresCustomPropertiesCreateCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMDatastoresCustomPropertiesCreateCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.DatastoresCustomProperties/CreateCustomPropertyWithValues": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMDatastoresCustomPropertiesCreateCustomPropertyWithValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMDatastoresCustomPropertiesCreateCustomPropertyWithValuesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.DatastoresCustomProperties/ModifyCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMDatastoresCustomPropertiesModifyCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMDatastoresCustomPropertiesModifyCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VIM.DatastoresCustomProperties/DeleteCustomProperty": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVIMDatastoresCustomPropertiesDeleteCustomProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVIMDatastoresCustomPropertiesDeleteCustomPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VPN.L2LTunnel/SetFavorite": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVPNL2LTunnelSetFavorite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVPNL2LTunnelSetFavoriteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.NetMan.Firewalls.Common.Models.Actions.FavoriteActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.VPN.L2LTunnel/RemoveFavorite": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionVPNL2LTunnelRemoveFavorite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionVPNL2LTunnelRemoveFavoriteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SolarWinds.Orion.NetMan.Firewalls.Common.Models.Actions.FavoriteActionResult"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/InsertWirelessHeatMap": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapInsertWirelessHeatMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapInsertWirelessHeatMapRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/UpdateWirelessHeatMap": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapUpdateWirelessHeatMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapUpdateWirelessHeatMapRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/DeleteWirelessHeatMap": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapDeleteWirelessHeatMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapDeleteWirelessHeatMapRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/UpdateMapGenerationProgress": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapUpdateMapGenerationProgress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapUpdateMapGenerationProgressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/InsertMap": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapInsertMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapInsertMapRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/DeleteMap": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapDeleteMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapDeleteMapRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/SetMapError": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapSetMapError",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapSetMapErrorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/FireMapGenerationIndication": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapFireMapGenerationIndication",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapFireMapGenerationIndicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/CloneWirelessHeatMapFromNAMap": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapCloneWirelessHeatMapFromNAMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapCloneWirelessHeatMapFromNAMapRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/PollAPSignalStrengthNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapPollAPSignalStrengthNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapPollAPSignalStrengthNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/PollRPSignalStrengthNow": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapPollRPSignalStrengthNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapPollRPSignalStrengthNowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/StartClientSignalPoll": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapStartClientSignalPoll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapStartClientSignalPollRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.Int32_System.String_array~"
              }
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/GetProgress": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapGetProgress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapGetProgressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Data.DataTable"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.Map/DeleteReferencePoints": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapDeleteReferencePoints",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapDeleteReferencePointsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.MapPoint/InsertMapPoint": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapPointInsertMapPoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapPointInsertMapPointRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.MapPoint/DeleteMapPoints": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapPointDeleteMapPoints",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapPointDeleteMapPointsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.MapPoint/DeleteMapPoint": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapPointDeleteMapPoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapPointDeleteMapPointRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.MapPoint/SyncMapPoints": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapMapPointSyncMapPoints",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapMapPointSyncMapPointsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Invoke/Orion.WirelessHeatMap.ResourceLimitation/InsertResourceLimitation": {
      "post": {
        "tags": [
          "Verbs"
        ],
        "description": "",
        "operationId": "OrionWirelessHeatMapResourceLimitationInsertResourceLimitation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrionWirelessHeatMapResourceLimitationInsertResourceLimitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/System.Void"
            }
          }
        }
      }
    },
    "/Create/Orion.APM.NodeToNodeLink": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPMNodeToNodeLink",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APM.NodeToNodeLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APM.NodeToNodeLink instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APM.DependencyTcpStatistics": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPMDependencyTcpStatistics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APM.DependencyTcpStatistics"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APM.DependencyTcpStatistics instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APM.ApplicationTcpConnection": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPMApplicationTcpConnection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APM.ApplicationTcpConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APM.ApplicationTcpConnection instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AgentManagement.Agent": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAgentManagementAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AgentManagement.Agent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AgentManagement.Agent instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AgentManagement.AgentPlugin": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAgentManagementAgentPlugin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AgentManagement.AgentPlugin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AgentManagement.AgentPlugin instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AgentManagement.Proxy": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAgentManagementProxy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AgentManagement.Proxy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AgentManagement.Proxy instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.AlertStackBasicMetricMetadata": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMAlertStackBasicMetricMetadata",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.AlertStackBasicMetricMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.AlertStackBasicMetricMetadata instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.Issues": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMIssues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.Issues"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.Issues instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.IssueHistory": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMIssueHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.IssueHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.IssueHistory instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.Occurrences": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMOccurrences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.Occurrences"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.Occurrences instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.AnomalyHistory": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMAnomalyHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.AnomalyHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.AnomalyHistory instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.AnomalyBasedAlertSources": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMAnomalyBasedAlertSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.AnomalyBasedAlertSources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.AnomalyBasedAlertSources instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.SourceStatus": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMSourceStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.SourceStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.SourceStatus instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.BasicMetricMetadata": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMBasicMetricMetadata",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.BasicMetricMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.BasicMetricMetadata instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.AiOpsMetricStatus": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMAiOpsMetricStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.AiOpsMetricStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.AiOpsMetricStatus instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.AnomalyBasedAlertSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMAnomalyBasedAlertSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.AnomalyBasedAlertSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.AnomalyBasedAlertSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.UsageStatistics": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMUsageStatistics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.UsageStatistics"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.UsageStatistics instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.Orion_Nodes_Anomalies": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMOrion_Nodes_Anomalies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.Orion_Nodes_Anomalies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.Orion_Nodes_Anomalies instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.Orion_Volumes_Anomalies": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMOrion_Volumes_Anomalies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.Orion_Volumes_Anomalies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.Orion_Volumes_Anomalies instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.Orion_VIM_Clusters_Anomalies": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMOrion_VIM_Clusters_Anomalies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.Orion_VIM_Clusters_Anomalies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.Orion_VIM_Clusters_Anomalies instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.Orion_VIM_Hosts_Anomalies": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMOrion_VIM_Hosts_Anomalies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.Orion_VIM_Hosts_Anomalies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.Orion_VIM_Hosts_Anomalies instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AIIM.Orion_VIM_VirtualMachines_Anomalies": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAIIMOrion_VIM_VirtualMachines_Anomalies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AIIM.Orion_VIM_VirtualMachines_Anomalies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AIIM.Orion_VIM_VirtualMachines_Anomalies instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.APM.ComponentSetting": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionAPMComponentSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.APM.ComponentSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.APM.ComponentSetting instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.APM.ApplicationSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionAPMApplicationSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.APM.ApplicationSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.APM.ApplicationSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APM.ComponentSetting": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPMComponentSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APM.ComponentSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APM.ComponentSetting instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APM.ApplicationSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPMApplicationSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APM.ApplicationSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APM.ApplicationSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Netflow.CBQoSSource": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNetflowCBQoSSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Netflow.CBQoSSource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Netflow.CBQoSSource instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Netflow.CBQoSSource": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetflowCBQoSSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Netflow.CBQoSSource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Netflow.CBQoSSource instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Cirrus.IgnoredNodes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalCirrusIgnoredNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Cirrus.IgnoredNodes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Cirrus.IgnoredNodes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.NCM.Baselines": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalNCMBaselines",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.NCM.Baselines"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.NCM.Baselines instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.NCM.BaselineNodeMap": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalNCMBaselineNodeMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.NCM.BaselineNodeMap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.NCM.BaselineNodeMap instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.NCM.BaselineViolations": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalNCMBaselineViolations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.NCM.BaselineViolations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.NCM.BaselineViolations instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.NCM.FirmwareOperations": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalNCMFirmwareOperations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.NCM.FirmwareOperations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.NCM.FirmwareOperations instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.NCM.FirmwareOperationNodes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalNCMFirmwareOperationNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.NCM.FirmwareOperationNodes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.NCM.FirmwareOperationNodes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.NCM.FirmwareUpgradeImages": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalNCMFirmwareUpgradeImages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.NCM.FirmwareUpgradeImages"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.NCM.FirmwareUpgradeImages instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.NCM.FirmwareUpgradeMachineTypes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalNCMFirmwareUpgradeMachineTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.NCM.FirmwareUpgradeMachineTypes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.NCM.FirmwareUpgradeMachineTypes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.NCM.ConfigTypeVendors": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalNCMConfigTypeVendors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.NCM.ConfigTypeVendors"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.NCM.ConfigTypeVendors instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cirrus.IgnoredNodes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCirrusIgnoredNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cirrus.IgnoredNodes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cirrus.IgnoredNodes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/NCM.Baselines": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateNCMBaselines",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCM.Baselines"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created NCM.Baselines instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/NCM.BaselineNodeMap": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateNCMBaselineNodeMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCM.BaselineNodeMap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created NCM.BaselineNodeMap instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/NCM.BaselineViolations": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateNCMBaselineViolations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCM.BaselineViolations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created NCM.BaselineViolations instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/NCM.FirmwareOperations": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateNCMFirmwareOperations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCM.FirmwareOperations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created NCM.FirmwareOperations instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/NCM.FirmwareOperationNodes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateNCMFirmwareOperationNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCM.FirmwareOperationNodes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created NCM.FirmwareOperationNodes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/NCM.FirmwareUpgradeImages": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateNCMFirmwareUpgradeImages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCM.FirmwareUpgradeImages"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created NCM.FirmwareUpgradeImages instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/NCM.FirmwareUpgradeMachineTypes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateNCMFirmwareUpgradeMachineTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCM.FirmwareUpgradeMachineTypes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created NCM.FirmwareUpgradeMachineTypes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/NCM.ConfigTypeVendors": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateNCMConfigTypeVendors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NCM.ConfigTypeVendors"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created NCM.ConfigTypeVendors instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cli.DeviceTemplates": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCliDeviceTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cli.DeviceTemplates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cli.DeviceTemplates instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cli.DeviceTemplatesNodes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCliDeviceTemplatesNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cli.DeviceTemplatesNodes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cli.DeviceTemplatesNodes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cli.CliSessionSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCliCliSessionSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cli.CliSessionSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cli.CliSessionSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.Accounts": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.Accounts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.Accounts instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.Regions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.Regions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.Regions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.Aws.Regions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudAwsRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.Aws.Regions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.Aws.Regions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.Azure.Regions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudAzureRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.Azure.Regions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.Azure.Regions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.Aws.Accounts": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudAwsAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.Aws.Accounts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.Aws.Accounts instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.Azure.Accounts": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudAzureAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.Azure.Accounts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.Azure.Accounts instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.SelectedCloudRegions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudSelectedCloudRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.SelectedCloudRegions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.SelectedCloudRegions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.CloudJobSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudCloudJobSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.CloudJobSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.CloudJobSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.TagFilter": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudTagFilter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.TagFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.TagFilter instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.ResourseTags": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudResourseTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.ResourseTags"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.ResourseTags instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.Azure.ResourseTags": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudAzureResourseTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.Azure.ResourseTags"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.Azure.ResourseTags instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cloud.Aws.ResourseTags": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCloudAwsResourseTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cloud.Aws.ResourseTags"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cloud.Aws.ResourseTags instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cman.Container": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCmanContainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cman.Container"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cman.Container instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cman.ContainerAgent": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCmanContainerAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cman.ContainerAgent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cman.ContainerAgent instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Cman.ContainerImage": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCmanContainerImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Cman.ContainerImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Cman.ContainerImage instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.System.Policy": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexSystemPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.System.Policy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.System.Policy instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.CiscoAci.Apic": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionCiscoAciApic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.CiscoAci.Apic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.CiscoAci.Apic instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.CiscoAci.ApplicationProfile": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionCiscoAciApplicationProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.CiscoAci.ApplicationProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.CiscoAci.ApplicationProfile instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.CiscoAci.CiscoAciCredential": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionCiscoAciCiscoAciCredential",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.CiscoAci.CiscoAciCredential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.CiscoAci.CiscoAciCredential instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.CiscoAci.EndpointGroup": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionCiscoAciEndpointGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.CiscoAci.EndpointGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.CiscoAci.EndpointGroup instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.CiscoAci.Fabric": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionCiscoAciFabric",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.CiscoAci.Fabric"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.CiscoAci.Fabric instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.CiscoAci.PhysicalEntity": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionCiscoAciPhysicalEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.CiscoAci.PhysicalEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.CiscoAci.PhysicalEntity instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.CiscoAci.Tenant": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionCiscoAciTenant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.CiscoAci.Tenant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.CiscoAci.Tenant instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.NetMan.CloudMonitoring.AzureMonitoringCredential": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNetManCloudMonitoringAzureMonitoringCredential",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.NetMan.CloudMonitoring.AzureMonitoringCredential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.NetMan.CloudMonitoring.AzureMonitoringCredential instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.NetMan.CloudMonitoring.CloudAccount": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNetManCloudMonitoringCloudAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.NetMan.CloudMonitoring.CloudAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.NetMan.CloudMonitoring.CloudAccount instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.NetMan.CloudMonitoring.CloudMonitoringCentralizedSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNetManCloudMonitoringCloudMonitoringCentralizedSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.NetMan.CloudMonitoring.CloudMonitoringCentralizedSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.NetMan.CloudMonitoring.CloudMonitoringCentralizedSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.NetMan.CloudMonitoring.VirtualNetwork": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNetManCloudMonitoringVirtualNetwork",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.NetMan.CloudMonitoring.VirtualNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.NetMan.CloudMonitoring.VirtualNetwork instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.NetMan.CloudMonitoring.VirtualNetworkConnection": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNetManCloudMonitoringVirtualNetworkConnection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.NetMan.CloudMonitoring.VirtualNetworkConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.NetMan.CloudMonitoring.VirtualNetworkConnection instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.NetMan.CloudMonitoring.VirtualNetworkGateway": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNetManCloudMonitoringVirtualNetworkGateway",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.NetMan.CloudMonitoring.VirtualNetworkGateway"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.NetMan.CloudMonitoring.VirtualNetworkGateway instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.NetMan.Firewalls.Firewall": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNetManFirewallsFirewall",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.NetMan.Firewalls.Firewall"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.NetMan.Firewalls.Firewall instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.NetMan.Firewalls.FirewallCentralizedSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNetManFirewallsFirewallCentralizedSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.NetMan.Firewalls.FirewallCentralizedSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.NetMan.Firewalls.FirewallCentralizedSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.NetMan.Firewalls.RemoteAccess": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNetManFirewallsRemoteAccess",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.NetMan.Firewalls.RemoteAccess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.NetMan.Firewalls.RemoteAccess instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.NetMan.Firewalls.SiteToSiteTunnel": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNetManFirewallsSiteToSiteTunnel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.NetMan.Firewalls.SiteToSiteTunnel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.NetMan.Firewalls.SiteToSiteTunnel instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Interface": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionInterface",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Interface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Interface instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Cpu": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionCpu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Cpu"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Cpu instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Node": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Node"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Node instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.ScsiInformation": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionScsiInformation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.ScsiInformation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.ScsiInformation instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Volume": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionVolume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Volume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Volume instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Virtualization.Alarm": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionVirtualizationAlarm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Virtualization.Alarm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Virtualization.Alarm instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Virtualization.PhysicalDisk": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionVirtualizationPhysicalDisk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Virtualization.PhysicalDisk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Virtualization.PhysicalDisk instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Virtualization.StoragePool": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionVirtualizationStoragePool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Virtualization.StoragePool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Virtualization.StoragePool instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Virtualization.TriggeredAlarmState": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionVirtualizationTriggeredAlarmState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Virtualization.TriggeredAlarmState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Virtualization.TriggeredAlarmState instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Virtualization.VSan": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionVirtualizationVSan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Virtualization.VSan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Virtualization.VSan instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Virtualization.VSanDiskGroup": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionVirtualizationVSanDiskGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Virtualization.VSanDiskGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Virtualization.VSanDiskGroup instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Virtualization.VSanHealthGroup": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionVirtualizationVSanHealthGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Virtualization.VSanHealthGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Virtualization.VSanHealthGroup instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Virtualization.VSanObjectSpaceSummary": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionVirtualizationVSanObjectSpaceSummary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Virtualization.VSanObjectSpaceSummary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Virtualization.VSanObjectSpaceSummary instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.Virtualization.VSanResyncInfo": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionVirtualizationVSanResyncInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.Virtualization.VSanResyncInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.Virtualization.VSanResyncInfo instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Dashboards.Instances": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDashboardsInstances",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Dashboards.Instances"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Dashboards.Instances instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Dashboards.Widgets": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDashboardsWidgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Dashboards.Widgets"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Dashboards.Widgets instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Dashboards.DashboardGroup": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDashboardsDashboardGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Dashboards.DashboardGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Dashboards.DashboardGroup instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Dashboards.DashboardRoute": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDashboardsDashboardRoute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Dashboards.DashboardRoute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Dashboards.DashboardRoute instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPA.DatabaseInstanceData": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPADatabaseInstanceData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPA.DatabaseInstanceData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPA.DatabaseInstanceData instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPA.DatabaseInstanceApplicationRelationship": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPADatabaseInstanceApplicationRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPA.DatabaseInstanceApplicationRelationship"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPA.DatabaseInstanceApplicationRelationship instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPA.DatabaseInstanceApplication": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPADatabaseInstanceApplication",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPA.DatabaseInstanceApplication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPA.DatabaseInstanceApplication instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPA.DatabaseInstanceClientApplication": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPADatabaseInstanceClientApplication",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPA.DatabaseInstanceClientApplication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPA.DatabaseInstanceClientApplication instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPA.DatabaseInstanceApplicationNoRelationship": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPADatabaseInstanceApplicationNoRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPA.DatabaseInstanceApplicationNoRelationship"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPA.DatabaseInstanceApplicationNoRelationship instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPA.DatabaseInstanceLun": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPADatabaseInstanceLun",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPA.DatabaseInstanceLun"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPA.DatabaseInstanceLun instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPA.DpaServer": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPADpaServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPA.DpaServer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPA.DpaServer instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPI.Applications": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPIApplications",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPI.Applications"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPI.Applications instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPI.ApplicationAssignments": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPIApplicationAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPI.ApplicationAssignments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPI.ApplicationAssignments instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPI.ApplicationSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPIApplicationSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPI.ApplicationSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPI.ApplicationSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPI.Probes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPIProbes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPI.Probes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPI.Probes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPI.ProbeAssignments": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPIProbeAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPI.ProbeAssignments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPI.ProbeAssignments instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPI.ProbeSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPIProbeSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPI.ProbeSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPI.ProbeSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DPI.ProbeProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDPIProbeProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DPI.ProbeProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DPI.ProbeProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.EOC.Sites": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionEOCSites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.EOC.Sites"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.EOC.Sites instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.EOC.SiteAccounts": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionEOCSiteAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.EOC.SiteAccounts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.EOC.SiteAccounts instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.EOC.SiteAccess": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionEOCSiteAccess",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.EOC.SiteAccess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.EOC.SiteAccess instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.ESI.IncidentService": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionESIIncidentService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.ESI.IncidentService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.ESI.IncidentService instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/SWISf.RemoteSWIS": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateSWISfRemoteSWIS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SWISf.RemoteSWIS"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created SWISf.RemoteSWIS instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.HA.Pools": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionHAPools",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.HA.Pools"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.HA.Pools instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.HA.ResourcesInstances": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionHAResourcesInstances",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.HA.ResourcesInstances"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.HA.ResourcesInstances instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.HA.PoolMemberInterfacesInfo": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionHAPoolMemberInterfacesInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.HA.PoolMemberInterfacesInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.HA.PoolMemberInterfacesInfo instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.NPM.Interfaces": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNPMInterfaces",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.NPM.Interfaces"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.NPM.Interfaces instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NPM.Interfaces": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNPMInterfaces",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NPM.Interfaces"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NPM.Interfaces instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.GroupNodeAttr": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMGroupNodeAttr",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.GroupNodeAttr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.GroupNodeAttr instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.IPNodeAttr": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMIPNodeAttr",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.IPNodeAttr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.IPNodeAttr instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.IPAM.IPNode": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalIPAMIPNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.IPAM.IPNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.IPAM.IPNode instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.IPAM.Subnet": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalIPAMSubnet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.IPAM.Subnet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.IPAM.Subnet instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.IPAM.Setting": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalIPAMSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.IPAM.Setting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.IPAM.Setting instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.IPAM.IPRequests": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalIPAMIPRequests",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.IPAM.IPRequests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.IPAM.IPRequests instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.IPAM.IPRequestAddresses": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalIPAMIPRequestAddresses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.IPAM.IPRequestAddresses"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.IPAM.IPRequestAddresses instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.IPAM.GroupsCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalIPAMGroupsCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.IPAM.GroupsCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.IPAM.GroupsCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.IPAM.NodesCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalIPAMNodesCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.IPAM.NodesCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.IPAM.NodesCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.IPAM.RequesterDetailsFieldsMetadata": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalIPAMRequesterDetailsFieldsMetadata",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.IPAM.RequesterDetailsFieldsMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.IPAM.RequesterDetailsFieldsMetadata instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.IPAM.RequesterDetailsFieldsValues": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalIPAMRequesterDetailsFieldsValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.IPAM.RequesterDetailsFieldsValues"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.IPAM.RequesterDetailsFieldsValues instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.IPNode": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMIPNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.IPNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.IPNode instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.Subnet": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMSubnet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.Subnet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.Subnet instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.Setting": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.Setting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.Setting instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.IPRequests": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMIPRequests",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.IPRequests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.IPRequests instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.IPRequestAddresses": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMIPRequestAddresses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.IPRequestAddresses"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.IPRequestAddresses instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.GroupsCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMGroupsCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.GroupsCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.GroupsCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.NodesCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMNodesCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.NodesCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.NodesCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.RequesterDetailsFieldsMetadata": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMRequesterDetailsFieldsMetadata",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.RequesterDetailsFieldsMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.RequesterDetailsFieldsMetadata instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/IPAM.RequesterDetailsFieldsValues": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateIPAMRequesterDetailsFieldsValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAM.RequesterDetailsFieldsValues"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created IPAM.RequesterDetailsFieldsValues instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Licensing.LicenseFilters": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionLicensingLicenseFilters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Licensing.LicenseFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Licensing.LicenseFilters instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Maps.Projects": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionMapsProjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Maps.Projects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Maps.Projects instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Maps.ProjectHistory": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionMapsProjectHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Maps.ProjectHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Maps.ProjectHistory instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Maps.GraphHistory": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionMapsGraphHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Maps.GraphHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Maps.GraphHistory instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Maps.Edges": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionMapsEdges",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Maps.Edges"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Maps.Edges instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Maps.Assets": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionMapsAssets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Maps.Assets"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Maps.Assets instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Maps.AssetUsage": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionMapsAssetUsage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Maps.AssetUsage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Maps.AssetUsage instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Maps.Projects": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionMapsProjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Maps.Projects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Maps.Projects instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Maps.Edges": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionMapsEdges",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Maps.Edges"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Maps.Edges instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Maps.Assets": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionMapsAssets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Maps.Assets"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Maps.Assets instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Maps.AssetUsage": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionMapsAssetUsage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Maps.AssetUsage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Maps.AssetUsage instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Netflow.Diagnostics.Partitions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNetflowDiagnosticsPartitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Netflow.Diagnostics.Partitions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Netflow.Diagnostics.Partitions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Netflow.Diagnostics.Tables": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNetflowDiagnosticsTables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Netflow.Diagnostics.Tables"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Netflow.Diagnostics.Tables instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Netflow.Diagnostics.Database": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNetflowDiagnosticsDatabase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Netflow.Diagnostics.Database"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Netflow.Diagnostics.Database instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Netflow.Diagnostics.Partitions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetflowDiagnosticsPartitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Netflow.Diagnostics.Partitions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Netflow.Diagnostics.Partitions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Netflow.Diagnostics.Tables": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetflowDiagnosticsTables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Netflow.Diagnostics.Tables"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Netflow.Diagnostics.Tables instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Netflow.Diagnostics.Database": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetflowDiagnosticsDatabase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Netflow.Diagnostics.Database"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Netflow.Diagnostics.Database instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Netflow.IPAddressGroupsManagement": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNetflowIPAddressGroupsManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Netflow.IPAddressGroupsManagement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Netflow.IPAddressGroupsManagement instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Netflow.IPGroupExternalRelation": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNetflowIPGroupExternalRelation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Netflow.IPGroupExternalRelation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Netflow.IPGroupExternalRelation instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Netflow.NodeProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNetflowNodeProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Netflow.NodeProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Netflow.NodeProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Netflow.IPAddressGroupsManagement": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetflowIPAddressGroupsManagement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Netflow.IPAddressGroupsManagement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Netflow.IPAddressGroupsManagement instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Netflow.IPGroupExternalRelation": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetflowIPGroupExternalRelation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Netflow.IPGroupExternalRelation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Netflow.IPGroupExternalRelation instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Netflow.NodeProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetflowNodeProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Netflow.NodeProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Netflow.NodeProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NetPath.EndpointServicesBase": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetPathEndpointServicesBase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NetPath.EndpointServicesBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NetPath.EndpointServicesBase instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NetPath.ProbesBase": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetPathProbesBase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NetPath.ProbesBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NetPath.ProbesBase instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NetPath.EndpointServiceAssignments": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetPathEndpointServiceAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NetPath.EndpointServiceAssignments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NetPath.EndpointServiceAssignments instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NetPath.EndpointServiceProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetPathEndpointServiceProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NetPath.EndpointServiceProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NetPath.EndpointServiceProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NetPath.Thresholds": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetPathThresholds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NetPath.Thresholds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NetPath.Thresholds instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NetPath.Networks": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetPathNetworks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NetPath.Networks"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NetPath.Networks instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.NPM.CustomPollerAssignmentOnNode": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNPMCustomPollerAssignmentOnNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.NPM.CustomPollerAssignmentOnNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.NPM.CustomPollerAssignmentOnNode instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.NPM.CustomPollerAssignmentOnInterface": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNPMCustomPollerAssignmentOnInterface",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.NPM.CustomPollerAssignmentOnInterface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.NPM.CustomPollerAssignmentOnInterface instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NPM.CustomPollerAssignmentOnNode": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNPMCustomPollerAssignmentOnNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NPM.CustomPollerAssignmentOnNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NPM.CustomPollerAssignmentOnNode instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NPM.CustomPollerAssignmentOnInterface": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNPMCustomPollerAssignmentOnInterface",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NPM.CustomPollerAssignmentOnInterface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NPM.CustomPollerAssignmentOnInterface instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.OLM.MessageSources": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionOLMMessageSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.OLM.MessageSources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.OLM.MessageSources instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.OLM.LogProfile": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionOLMLogProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.OLM.LogProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.OLM.LogProfile instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.OLM.LogProfileAgentAssignment": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionOLMLogProfileAgentAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.OLM.LogProfileAgentAssignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.OLM.LogProfileAgentAssignment instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.OLM.HealthIssues": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionOLMHealthIssues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.OLM.HealthIssues"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.OLM.HealthIssues instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.OLM.MessageSources": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionOLMMessageSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.OLM.MessageSources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.OLM.MessageSources instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.OLM.LogProfile": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionOLMLogProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.OLM.LogProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.OLM.LogProfile instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.OLM.LogProfileAgentAssignment": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionOLMLogProfileAgentAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.OLM.LogProfileAgentAssignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.OLM.LogProfileAgentAssignment instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.OLM.HealthIssues": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionOLMHealthIssues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.OLM.HealthIssues"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.OLM.HealthIssues instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.AlertStatus": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionAlertStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.AlertStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.AlertStatus instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.AlertConfigurations": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionAlertConfigurations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.AlertConfigurations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.AlertConfigurations instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.AlertDefinitions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionAlertDefinitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.AlertDefinitions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.AlertDefinitions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Actions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionActions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Actions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Actions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.ActionsProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionActionsProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.ActionsProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.ActionsProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.ActionAssignmentProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionActionAssignmentProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.ActionAssignmentProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.ActionAssignmentProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.ActionsAssignments": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionActionsAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.ActionsAssignments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.ActionsAssignments instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.ActionSchedules": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionActionSchedules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.ActionSchedules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.ActionSchedules instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.AlertSchedules": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionAlertSchedules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.AlertSchedules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.AlertSchedules instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AlertStatus": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAlertStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AlertStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AlertStatus instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AlertConfigurations": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAlertConfigurations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AlertConfigurations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AlertConfigurations instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AlertDefinitions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAlertDefinitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AlertDefinitions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AlertDefinitions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Actions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionActions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Actions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Actions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.ActionsProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionActionsProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.ActionsProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.ActionsProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.ActionAssignmentProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionActionAssignmentProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.ActionAssignmentProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.ActionAssignmentProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.ActionsAssignments": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionActionsAssignments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.ActionsAssignments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.ActionsAssignments instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.ActionSchedules": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionActionSchedules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.ActionSchedules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.ActionSchedules instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AlertSchedules": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAlertSchedules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AlertSchedules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AlertSchedules instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APIPoller.ApiPoller": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPIPollerApiPoller",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APIPoller.ApiPoller"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APIPoller.ApiPoller instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APIPoller.PollingConfiguration": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPIPollerPollingConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APIPoller.PollingConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APIPoller.PollingConfiguration instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APIPoller.RequestDetails": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPIPollerRequestDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APIPoller.RequestDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APIPoller.RequestDetails instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APIPoller.RequestHeader": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPIPollerRequestHeader",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APIPoller.RequestHeader"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APIPoller.RequestHeader instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APIPoller.RequestVariable": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPIPollerRequestVariable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APIPoller.RequestVariable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APIPoller.RequestVariable instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APIPoller.ValueToMonitor": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPIPollerValueToMonitor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APIPoller.ValueToMonitor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APIPoller.ValueToMonitor instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APIPoller.StringToNumberTransformationRule": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPIPollerStringToNumberTransformationRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APIPoller.StringToNumberTransformationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APIPoller.StringToNumberTransformationRule instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.APIPoller.Templates": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAPIPollerTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.APIPoller.Templates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.APIPoller.Templates instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.DiscoveryLogs": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionDiscoveryLogs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.DiscoveryLogs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.DiscoveryLogs instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DiscoveryLogs": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDiscoveryLogs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DiscoveryLogs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DiscoveryLogs instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.PasswordHistory": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionPasswordHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.PasswordHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.PasswordHistory instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Dependencies": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionDependencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Dependencies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Dependencies instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.DeletedAutoDependencies": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionDeletedAutoDependencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.DeletedAutoDependencies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.DeletedAutoDependencies instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Engines": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionEngines",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Engines"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Engines instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.EngineProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionEngineProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.EngineProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.EngineProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Events": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Events"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Events instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.MapStudioFiles": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionMapStudioFiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.MapStudioFiles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.MapStudioFiles instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.NodeNotes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNodeNotes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.NodeNotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.NodeNotes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Nodes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Nodes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Nodes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Pollers": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionPollers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Pollers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Pollers instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Settings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Settings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Settings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.ResourceProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionResourceProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.ResourceProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.ResourceProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Resources": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionResources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Resources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Resources instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Views": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionViews",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Views"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Views instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Volumes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionVolumes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Volumes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Volumes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.WebUserSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWebUserSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.WebUserSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.WebUserSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.UserSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionUserSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.UserSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.UserSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Environment": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionEnvironment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Environment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Environment instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.NodeSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNodeSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.NodeSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.NodeSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Credential": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCredential",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Credential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Credential instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.CredentialRelation": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionCredentialRelation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.CredentialRelation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.CredentialRelation instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.WorldMap.Point": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionWorldMapPoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.WorldMap.Point"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.WorldMap.Point instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.WorldMap.PointLabel": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionWorldMapPointLabel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.WorldMap.PointLabel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.WorldMap.PointLabel instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.FavoriteProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionFavoriteProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.FavoriteProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.FavoriteProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SMTPServers": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSMTPServers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SMTPServers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SMTPServers instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.NetObjectDowntime": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionNetObjectDowntime",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.NetObjectDowntime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.NetObjectDowntime instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.FavoriteMacroVariables": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionFavoriteMacroVariables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.FavoriteMacroVariables"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.FavoriteMacroVariables instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.ForecastMetrics": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionForecastMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.ForecastMetrics"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.ForecastMetrics instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.ForecastCapacitySettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionForecastCapacitySettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.ForecastCapacitySettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.ForecastCapacitySettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.MaintenancePlan": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionMaintenancePlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.MaintenancePlan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.MaintenancePlan instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.MaintenancePlanAssignment": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionMaintenancePlanAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.MaintenancePlanAssignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.MaintenancePlanAssignment instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Web.FavoriteResource": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionWebFavoriteResource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Web.FavoriteResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Web.FavoriteResource instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Web.ViewGroup": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWebViewGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Web.ViewGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Web.ViewGroup instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Web.View": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWebView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Web.View"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Web.View instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Web.Resource": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWebResource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Web.Resource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Web.Resource instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Web.ResourceSetting": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWebResourceSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Web.ResourceSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Web.ResourceSetting instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Web.ResourceUserSetting": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWebResourceUserSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Web.ResourceUserSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Web.ResourceUserSetting instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.Web.UserWebView": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionWebUserWebView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.Web.UserWebView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.Web.UserWebView instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Sites": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Sites"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Sites instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.OrionServers": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionOrionServers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.OrionServers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.OrionServers instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.IdentityProviders": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionIdentityProviders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.IdentityProviders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.IdentityProviders instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Dependencies": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDependencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Dependencies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Dependencies instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.DeletedAutoDependencies": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionDeletedAutoDependencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.DeletedAutoDependencies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.DeletedAutoDependencies instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Events": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Events"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Events instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.MapStudioFiles": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionMapStudioFiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.MapStudioFiles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.MapStudioFiles instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NodeNotes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNodeNotes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NodeNotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NodeNotes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Nodes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Nodes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Nodes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Pollers": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionPollers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Pollers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Pollers instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.ResourceProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionResourceProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.ResourceProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.ResourceProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Resources": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionResources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Resources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Resources instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Volumes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionVolumes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Volumes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Volumes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Environment": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionEnvironment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Environment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Environment instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NodeSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNodeSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NodeSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NodeSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.WorldMap.Point": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWorldMapPoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.WorldMap.Point"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.WorldMap.Point instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.WorldMap.PointLabel": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWorldMapPointLabel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.WorldMap.PointLabel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.WorldMap.PointLabel instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SMTPServers": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSMTPServers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SMTPServers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SMTPServers instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.NetObjectDowntime": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionNetObjectDowntime",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.NetObjectDowntime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.NetObjectDowntime instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.ForecastMetrics": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionForecastMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.ForecastMetrics"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.ForecastMetrics instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.ForecastCapacitySettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionForecastCapacitySettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.ForecastCapacitySettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.ForecastCapacitySettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.MaintenancePlan": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionMaintenancePlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.MaintenancePlan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.MaintenancePlan instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.MaintenancePlanAssignment": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionMaintenancePlanAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.MaintenancePlanAssignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.MaintenancePlanAssignment instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Web.FavoriteResource": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWebFavoriteResource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Web.FavoriteResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Web.FavoriteResource instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Web.UserWebView": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWebUserWebView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Web.UserWebView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Web.UserWebView instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.PerfStack.Projects": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionPerfStackProjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.PerfStack.Projects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.PerfStack.Projects instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.PerfStack.StatisticsEntity": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionPerfStackStatisticsEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.PerfStack.StatisticsEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.PerfStack.StatisticsEntity instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.PolicyEngine.RuleWaiver": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionPolicyEngineRuleWaiver",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.PolicyEngine.RuleWaiver"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.PolicyEngine.RuleWaiver instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.PolicyEngine.AssignedRuleWaiver": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionPolicyEngineAssignedRuleWaiver",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.PolicyEngine.AssignedRuleWaiver"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.PolicyEngine.AssignedRuleWaiver instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.PolicyEngine.RuleWaiver": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionPolicyEngineRuleWaiver",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.PolicyEngine.RuleWaiver"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.PolicyEngine.RuleWaiver instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.PolicyEngine.AssignedRuleWaiver": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionPolicyEngineAssignedRuleWaiver",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.PolicyEngine.AssignedRuleWaiver"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.PolicyEngine.AssignedRuleWaiver instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Cortex.Orion.PowerControlUnit": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateCortexOrionPowerControlUnit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Cortex.Orion.PowerControlUnit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Cortex.Orion.PowerControlUnit instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Remoting.RemoteExecutionPackage": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionRemotingRemoteExecutionPackage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Remoting.RemoteExecutionPackage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Remoting.RemoteExecutionPackage instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SamAppOptics.ApmService.Configuration": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSamAppOpticsApmServiceConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SamAppOptics.ApmService.Configuration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SamAppOptics.ApmService.Configuration instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SamAppOptics.ApmService.ServiceHost": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSamAppOpticsApmServiceServiceHost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SamAppOptics.ApmService.ServiceHost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SamAppOptics.ApmService.ServiceHost instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SamAppOptics.ApmService.Configuration": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSamAppOpticsApmServiceConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SamAppOptics.ApmService.Configuration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SamAppOptics.ApmService.Configuration instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SamAppOptics.ApmService.ServiceHost": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSamAppOpticsApmServiceServiceHost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SamAppOptics.ApmService.ServiceHost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SamAppOptics.ApmService.ServiceHost instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SamAppOptics.Integration": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSamAppOpticsIntegration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SamAppOptics.Integration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SamAppOptics.Integration instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SamAppOptics.RegistrationCountry": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSamAppOpticsRegistrationCountry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SamAppOptics.RegistrationCountry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SamAppOptics.RegistrationCountry instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SamAppOptics.RegistrationState": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSamAppOpticsRegistrationState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SamAppOptics.RegistrationState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SamAppOptics.RegistrationState instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SamAppOptics.ApplicationPool": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSamAppOpticsApplicationPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SamAppOptics.ApplicationPool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SamAppOptics.ApplicationPool instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SamAppOptics.Integration": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSamAppOpticsIntegration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SamAppOptics.Integration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SamAppOptics.Integration instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SamAppOptics.RegistrationCountry": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSamAppOpticsRegistrationCountry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SamAppOptics.RegistrationCountry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SamAppOptics.RegistrationCountry instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SamAppOptics.RegistrationState": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSamAppOpticsRegistrationState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SamAppOptics.RegistrationState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SamAppOptics.RegistrationState instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SamAppOptics.ApplicationPool": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSamAppOpticsApplicationPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SamAppOptics.ApplicationPool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SamAppOptics.ApplicationPool instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SCM.Profiles": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSCMProfiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SCM.Profiles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SCM.Profiles instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SCM.NodesProfiles": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSCMNodesProfiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SCM.NodesProfiles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SCM.NodesProfiles instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SCM.ProfileElements": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSCMProfileElements",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SCM.ProfileElements"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SCM.ProfileElements instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SCM.AssignedElementSettingOverride": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSCMAssignedElementSettingOverride",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SCM.AssignedElementSettingOverride"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SCM.AssignedElementSettingOverride instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SCM.Results.NodesPollingErrors": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSCMResultsNodesPollingErrors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SCM.Results.NodesPollingErrors"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SCM.Results.NodesPollingErrors instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SCM.DismissedCandidates": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSCMDismissedCandidates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SCM.DismissedCandidates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SCM.DismissedCandidates instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SCM.FimDisabledNodes": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSCMFimDisabledNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SCM.FimDisabledNodes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SCM.FimDisabledNodes instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SCM.ProfileElementPolicyDataSources": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSCMProfileElementPolicyDataSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SCM.ProfileElementPolicyDataSources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SCM.ProfileElementPolicyDataSources instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SettingOverride": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSettingOverride",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SettingOverride"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SettingOverride instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.Agents": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMAgents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.Agents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.Agents instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.Transactions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMTransactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.Transactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.Transactions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.TransactionCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMTransactionCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.TransactionCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.TransactionCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.TransactionRunParameters": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMTransactionRunParameters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.TransactionRunParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.TransactionRunParameters instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.TransactionSteps": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMTransactionSteps",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.TransactionSteps"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.TransactionSteps instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.Settings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.Settings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.Settings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.Recordings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMRecordings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.Recordings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.Recordings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.RecordingsSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMRecordingsSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.RecordingsSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.RecordingsSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.RecordingCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMRecordingCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.RecordingCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.RecordingCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.RecordingAuthentications": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMRecordingAuthentications",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.RecordingAuthentications"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.RecordingAuthentications instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.RecordingCertificates": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMRecordingCertificates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.RecordingCertificates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.RecordingCertificates instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.SEUM.RecordingSteps": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionSEUMRecordingSteps",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.SEUM.RecordingSteps"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.SEUM.RecordingSteps instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.Agents": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMAgents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.Agents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.Agents instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.Transactions": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMTransactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.Transactions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.Transactions instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.TransactionCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMTransactionCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.TransactionCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.TransactionCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.TransactionRunParameters": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMTransactionRunParameters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.TransactionRunParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.TransactionRunParameters instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.TransactionSteps": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMTransactionSteps",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.TransactionSteps"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.TransactionSteps instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.Settings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.Settings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.Settings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.Recordings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMRecordings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.Recordings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.Recordings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.RecordingsSettings": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMRecordingsSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.RecordingsSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.RecordingsSettings instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.RecordingCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMRecordingCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.RecordingCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.RecordingCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.RecordingAuthentications": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMRecordingAuthentications",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.RecordingAuthentications"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.RecordingAuthentications instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.RecordingCertificates": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMRecordingCertificates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.RecordingCertificates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.RecordingCertificates instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SEUM.RecordingSteps": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSEUMRecordingSteps",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SEUM.RecordingSteps"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SEUM.RecordingSteps instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.AutoDependencyRoot": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionAutoDependencyRoot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.AutoDependencyRoot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.AutoDependencyRoot instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SSH.Session": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSSHSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SSH.Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SSH.Session instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SSH.Audit": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSSHAudit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SSH.Audit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SSH.Audit instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.SSH.Key": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionSSHKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.SSH.Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.SSH.Key instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/System.Subscription": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateSystemSubscription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/System.Subscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created System.Subscription instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/System.SubscriptionProperty": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateSystemSubscriptionProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/System.SubscriptionProperty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created System.SubscriptionProperty instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Toolset.SSHActiveData": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionToolsetSSHActiveData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Toolset.SSHActiveData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Toolset.SSHActiveData instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Toolset.ConnectionProfiles": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionToolsetConnectionProfiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Toolset.ConnectionProfiles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Toolset.ConnectionProfiles instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.Toolset.NodesProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionToolsetNodesProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.Toolset.NodesProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.Toolset.NodesProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.UDT.Port": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionUDTPort",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.UDT.Port"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.UDT.Port instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.UDT.Port": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionUDTPort",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.UDT.Port"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.UDT.Port instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.VIM.ClustersCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionVIMClustersCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.VIM.ClustersCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.VIM.ClustersCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.VIM.DataCentersCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionVIMDataCentersCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.VIM.DataCentersCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.VIM.DataCentersCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.VIM.VirtualMachinesCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionVIMVirtualMachinesCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.VIM.VirtualMachinesCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.VIM.VirtualMachinesCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.VIM.HostsCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionVIMHostsCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.VIM.HostsCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.VIM.HostsCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Local.Orion.VIM.DatastoresCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateLocalOrionVIMDatastoresCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Local.Orion.VIM.DatastoresCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Local.Orion.VIM.DatastoresCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.VIM.ClustersCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionVIMClustersCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.VIM.ClustersCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.VIM.ClustersCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.VIM.DataCentersCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionVIMDataCentersCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.VIM.DataCentersCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.VIM.DataCentersCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.VIM.VirtualMachinesCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionVIMVirtualMachinesCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.VIM.VirtualMachinesCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.VIM.VirtualMachinesCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.VIM.HostsCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionVIMHostsCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.VIM.HostsCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.VIM.HostsCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.VIM.DatastoresCustomProperties": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionVIMDatastoresCustomProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.VIM.DatastoresCustomProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.VIM.DatastoresCustomProperties instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Create/Orion.WirelessHeatMap.Map": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "operationId": "CreateOrionWirelessHeatMapMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Orion.WirelessHeatMap.Map"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Uri for the newly created Orion.WirelessHeatMap.Map instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "QueryRequest": {
      "required": [
        "query"
      ],
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        }
      }
    },
    "QueryResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "totalRows": {
          "type": "number"
        }
      }
    },
    "BulkUpdateRequest": {
      "required": [
        "uris",
        "properties"
      ],
      "type": "object",
      "properties": {
        "uris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object"
        }
      }
    },
    "BulkDeleteRequest": {
      "required": [
        "uris"
      ],
      "type": "object",
      "properties": {
        "uris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrionADMNodeInventoryPollNowRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "System.Void": {
      "type": "object"
    },
    "OrionADMNodeInventoryEnableRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionADMNodeInventoryDisableRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionADMNodeInventorySchedulePollNowRequest": {
      "required": [
        "jobTag",
        "nodeIds",
        "millisecondsTimeout"
      ],
      "type": "object",
      "properties": {
        "jobTag": {
          "format": "uuid",
          "type": "string"
        },
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "millisecondsTimeout": {
          "type": "number"
        }
      }
    },
    "OrionADMNodeInventoryScheduleEnableRequest": {
      "required": [
        "jobTag",
        "nodeIds",
        "millisecondsTimeout"
      ],
      "type": "object",
      "properties": {
        "jobTag": {
          "format": "uuid",
          "type": "string"
        },
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "millisecondsTimeout": {
          "type": "number"
        }
      }
    },
    "OrionADMNodeInventoryUninstallConnectionQualityAgentPluginRequest": {
      "type": "object"
    },
    "OrionAgentManagementAgentDeployRequest": {
      "required": [
        "pollingEngineId",
        "agentName",
        "hostname",
        "ipAddress",
        "machineUserName",
        "machinePassword"
      ],
      "type": "object",
      "properties": {
        "pollingEngineId": {
          "type": "number"
        },
        "agentName": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "machineUserName": {
          "type": "string"
        },
        "machinePassword": {
          "type": "string"
        },
        "additionalUsername": {
          "type": "string"
        },
        "additionalPassword": {
          "type": "string"
        },
        "passwordIsPrivateKey": {
          "type": "boolean"
        },
        "privateKeyPassword": {
          "type": "string"
        },
        "agentMode": {
          "type": "number"
        },
        "installPackageFallbackId": {
          "type": "string"
        }
      }
    },
    "OrionAgentManagementAgentDeployToNodeRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "machineUserName": {
          "type": "string"
        },
        "machinePassword": {
          "type": "string"
        },
        "additionalUsername": {
          "type": "string"
        },
        "additionalPassword": {
          "type": "string"
        },
        "passwordIsPrivateKey": {
          "type": "boolean"
        },
        "privateKeyPassword": {
          "type": "string"
        },
        "agentMode": {
          "type": "number"
        },
        "installPackageFallbackId": {
          "type": "string"
        }
      }
    },
    "OrionAgentManagementAgentDeployPluginRequest": {
      "required": [
        "agentId",
        "pluginId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        },
        "pluginId": {
          "type": "string"
        }
      }
    },
    "OrionAgentManagementAgentRedeployPluginRequest": {
      "required": [
        "agentId",
        "pluginId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        },
        "pluginId": {
          "type": "string"
        }
      }
    },
    "OrionAgentManagementAgentUninstallPluginRequest": {
      "required": [
        "agentId",
        "pluginId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        },
        "pluginId": {
          "type": "string"
        }
      }
    },
    "OrionAgentManagementAgentUninstallRequest": {
      "required": [
        "agentId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        }
      }
    },
    "OrionAgentManagementAgentDeleteRequest": {
      "required": [
        "agentId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        }
      }
    },
    "OrionAgentManagementAgentApproveRebootRequest": {
      "required": [
        "agentId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        }
      }
    },
    "OrionAgentManagementAgentApproveUpdateRequest": {
      "required": [
        "agentId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        }
      }
    },
    "OrionAgentManagementAgentTestWithEngineRequest": {
      "required": [
        "agentId",
        "pollerId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        },
        "pollerId": {
          "type": "number"
        }
      }
    },
    "OrionAgentManagementAgentAssignToEngineRequest": {
      "required": [
        "agentId",
        "pollerId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        },
        "pollerId": {
          "type": "number"
        }
      }
    },
    "OrionAgentManagementAgentValidateDeploymentCredentialsRequest": {
      "required": [
        "pollingEngineId",
        "hostname",
        "ipAddress",
        "machineUserName",
        "machinePassword"
      ],
      "type": "object",
      "properties": {
        "pollingEngineId": {
          "type": "number"
        },
        "hostname": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "machineUserName": {
          "type": "string"
        },
        "machinePassword": {
          "type": "string"
        },
        "additionalUsername": {
          "type": "string"
        },
        "additionalPassword": {
          "type": "string"
        },
        "passwordIsPrivateKey": {
          "type": "boolean"
        },
        "privateKeyPassword": {
          "type": "string"
        },
        "installPackageFallbackId": {
          "type": "string"
        }
      }
    },
    "System.Tuple~System.Boolean_System.String_System.Int32_System.Int32~": {
      "type": "object",
      "properties": {
        "Item1": {
          "type": "boolean"
        },
        "Item2": {
          "type": "string"
        },
        "Item3": {
          "type": "number"
        },
        "Item4": {
          "type": "number"
        }
      }
    },
    "OrionAgentManagementAgentRestartAgentRequest": {
      "required": [
        "agentId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        }
      }
    },
    "OrionAgentManagementAgentPromoteAgentToRemoteCollectorRequest": {
      "required": [
        "agentId"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.AgentManagement.Contract.Models.AgentRecord": {
      "type": "object",
      "properties": {
        "AgentId": {
          "type": "number"
        },
        "NodeId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Hostname": {
          "type": "string"
        },
        "DNSName": {
          "type": "string"
        },
        "IP": {
          "type": "string"
        },
        "OSVersion": {
          "type": "string"
        },
        "PollingEngineId": {
          "type": "number"
        },
        "PollingEngineName": {
          "type": "string"
        },
        "PollingEngineIP": {
          "type": "string"
        },
        "PollingEnginePort": {
          "type": "number"
        },
        "ConnectionStatus": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.ConnectionStatus"
        },
        "ConnectionStatusMessage": {
          "type": "string"
        },
        "ConnectionStatusTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "AgentStatus": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.AgentStatus"
        },
        "AgentStatusMessage": {
          "type": "string"
        },
        "AgentStatusData": {
          "type": "string"
        },
        "AgentStatusTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "LogLevel": {
          "type": "string"
        },
        "Mode": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.AgentMode"
        },
        "AgentGuid": {
          "format": "uuid",
          "type": "string"
        },
        "AgentVersion": {
          "$ref": "#/definitions/System.Version"
        },
        "CPUArch": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.Models.CpuType"
        },
        "OSArch": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.Models.CpuType"
        },
        "OSType": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.Models.OsType"
        },
        "OSDistro": {
          "type": "string"
        },
        "PkgOsDistro": {
          "type": "string"
        },
        "AutoUpdateEnabled": {
          "type": "boolean"
        },
        "PassiveAgentHostname": {
          "type": "string"
        },
        "PassiveAgentPort": {
          "type": "number"
        },
        "ProxyId": {
          "type": "number"
        },
        "RegisteredOn": {
          "format": "date-time",
          "type": "string"
        },
        "SID": {
          "type": "string"
        },
        "ResponseTime": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "Type": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.AgentType"
        },
        "Password": {
          "type": "string"
        },
        "RuntimeOSDistro": {
          "type": "string"
        },
        "PkgOsVersion": {
          "type": "string"
        },
        "RuntimeOSVersion": {
          "type": "string"
        },
        "NetFrameworkRelease": {
          "type": "string"
        },
        "JobTimeout": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "JobFrequency": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "OrionStatus": {
          "type": "number"
        },
        "AgentEndpointId": {
          "type": "string"
        }
      }
    },
    "SolarWinds.AgentManagement.Contract.ConnectionStatus": {
      "enum": [
        "Unknown",
        "Ok",
        "ServiceNotResponding",
        "DeploymentPending",
        "DeploymentInProgress",
        "DeploymentFailed",
        "InvalidResponse",
        "WaitingForConnection",
        "Connecting"
      ],
      "type": "string"
    },
    "SolarWinds.AgentManagement.Contract.AgentStatus": {
      "enum": [
        "Unknown",
        "Ok",
        "UpdateAvailable",
        "UpdateInProgress",
        "RebootRequired",
        "RebootInProgress",
        "RebootFailed",
        "PluginUpdatePending",
        "UninstallInProgress",
        "AgentUninstalled",
        "PluginErrorOccurred",
        "AgentRestartInProgress",
        "AgentRestartFailed"
      ],
      "type": "string"
    },
    "SolarWinds.AgentManagement.Contract.AgentMode": {
      "enum": [
        "Auto",
        "Active",
        "Passive"
      ],
      "type": "string"
    },
    "System.Version": {
      "type": "object",
      "properties": {
        "Major": {
          "type": "number"
        },
        "Minor": {
          "type": "number"
        },
        "Build": {
          "type": "number"
        },
        "Revision": {
          "type": "number"
        },
        "MajorRevision": {
          "type": "number"
        },
        "MinorRevision": {
          "type": "number"
        }
      }
    },
    "SolarWinds.AgentManagement.Contract.Models.CpuType": {
      "enum": [
        "Unknown",
        "Any",
        "x86",
        "x64",
        "ppc64",
        "ppc32",
        "armv6",
        "armv6l",
        "armv7l"
      ],
      "type": "string"
    },
    "SolarWinds.AgentManagement.Contract.Models.OsType": {
      "enum": [
        "Unknown",
        "Any",
        "Windows",
        "Linux",
        "AIX",
        "All"
      ],
      "type": "string"
    },
    "System.TimeSpan": {
      "type": "object",
      "properties": {
        "Ticks": {
          "type": "number"
        },
        "Days": {
          "type": "number"
        },
        "Hours": {
          "type": "number"
        },
        "Milliseconds": {
          "type": "number"
        },
        "Minutes": {
          "type": "number"
        },
        "Seconds": {
          "type": "number"
        },
        "TotalDays": {
          "type": "number"
        },
        "TotalHours": {
          "type": "number"
        },
        "TotalMilliseconds": {
          "type": "number"
        },
        "TotalMinutes": {
          "type": "number"
        },
        "TotalSeconds": {
          "type": "number"
        }
      }
    },
    "SolarWinds.AgentManagement.Contract.AgentType": {
      "enum": [
        "FullFeaturedAgent",
        "LinuxDPIProbe",
        "RemoteCollector"
      ],
      "type": "string"
    },
    "OrionAgentManagementAgentAddAgentRequest": {
      "required": [
        "agent"
      ],
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.Models.AgentRecord"
        }
      }
    },
    "OrionAgentManagementAgentUpdateAgentRequest": {
      "required": [
        "agent",
        "updateRemoteSettings"
      ],
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.Models.AgentRecord"
        },
        "updateRemoteSettings": {
          "type": "boolean"
        }
      }
    },
    "OrionAgentManagementAgentAddPassiveAgentRequest": {
      "required": [
        "agentName",
        "agentHostname",
        "agentIpAddress",
        "agentPort",
        "pollingEngineId",
        "sharedSecret",
        "proxyId"
      ],
      "type": "object",
      "properties": {
        "agentName": {
          "type": "string"
        },
        "agentHostname": {
          "type": "string"
        },
        "agentIpAddress": {
          "type": "string"
        },
        "agentPort": {
          "type": "number"
        },
        "pollingEngineId": {
          "type": "number"
        },
        "sharedSecret": {
          "type": "string"
        },
        "proxyId": {
          "type": "number"
        },
        "autoUpdateEnabled": {
          "type": "boolean"
        }
      }
    },
    "OrionAgentManagementAgentTestPassiveAgentConnectionRequest": {
      "required": [
        "agent"
      ],
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.Models.AgentRecord"
        }
      }
    },
    "SolarWinds.AgentManagement.Common.Models.AgentPingResult": {
      "type": "object",
      "properties": {
        "Success": {
          "type": "boolean"
        },
        "ResponseTime": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "Agent": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Contract.Models.AgentRecord"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "RebootPending": {
          "type": "boolean"
        },
        "NetFrameworkRelease": {
          "type": "string"
        },
        "PkgOsDistro": {
          "type": "string"
        },
        "PkgOsVersion": {
          "type": "string"
        }
      }
    },
    "OrionAgentManagementAgentGetLicensedAgentPluginsInAMSRepositoryRequest": {
      "required": [
        "pollingEngineId"
      ],
      "type": "object",
      "properties": {
        "pollingEngineId": {
          "type": "number"
        }
      }
    },
    "System.Collections.Generic.IEnumerable~System.String~": {
      "type": "object"
    },
    "OrionAgentManagementAgentCollectDiagnosticsRequest": {
      "required": [
        "agentId",
        "pathToStoreAgentDiagnostics",
        "diagnosticCollectionTimeoutInMinutes"
      ],
      "type": "object",
      "properties": {
        "agentId": {
          "type": "number"
        },
        "pathToStoreAgentDiagnostics": {
          "type": "string"
        },
        "diagnosticCollectionTimeoutInMinutes": {
          "type": "number"
        }
      }
    },
    "SolarWinds.AgentManagement.Common.Models.ProxySetting": {
      "type": "object",
      "properties": {
        "ProxyId": {
          "type": "number"
        },
        "ProxyUrl": {
          "type": "string"
        },
        "UseProxyAuthentication": {
          "type": "boolean"
        },
        "ProxyCredentialId": {
          "type": "number"
        }
      }
    },
    "OrionAgentManagementProxyAddProxyRequest": {
      "required": [
        "pollingEngineId",
        "proxy"
      ],
      "type": "object",
      "properties": {
        "pollingEngineId": {
          "type": "number"
        },
        "proxy": {
          "$ref": "#/definitions/SolarWinds.AgentManagement.Common.Models.ProxySetting"
        }
      }
    },
    "OrionAgentManagementProxyDeleteProxyRequest": {
      "required": [
        "pollingEngineId",
        "proxyId"
      ],
      "type": "object",
      "properties": {
        "pollingEngineId": {
          "type": "number"
        },
        "proxyId": {
          "type": "number"
        }
      }
    },
    "OrionAIIMAiOpsMetricStatusSaveAiOpsMetricStatusRequest": {
      "required": [
        "sourceUri",
        "metricName",
        "timestampUtc",
        "norLowerBounds",
        "norUpperBounds",
        "norValidFromUtc",
        "norValidUntilUtc"
      ],
      "type": "object",
      "properties": {
        "sourceUri": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "timestampUtc": {
          "format": "date-time",
          "type": "string"
        },
        "norLowerBounds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "norUpperBounds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "norValidFromUtc": {
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "norValidUntilUtc": {
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        }
      }
    },
    "OrionAPMActiveDirectoryApplicationAssignApplicationRequest": {
      "required": [
        "nodeId",
        "serializedSettings"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "serializedSettings": {
          "type": "string"
        }
      }
    },
    "OrionAPMActiveDirectoryApplicationDisableDomainComponentsRequest": {
      "required": [
        "applicationId"
      ],
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "number"
        }
      }
    },
    "OrionAPMActiveDirectoryApplicationDeleteDisabledComponentsDataRequest": {
      "required": [
        "applicationId"
      ],
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "number"
        }
      }
    },
    "OrionAPMExchangeApplicationScheduleConfigurationRequest": {
      "required": [
        "applicationId",
        "credentialsId"
      ],
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "number"
        },
        "credentialsId": {
          "type": "number"
        }
      }
    },
    "OrionAPMExchangeApplicationGetConfigurationResultRequest": {
      "required": [
        "executionKey"
      ],
      "type": "object",
      "properties": {
        "executionKey": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Data.Providers.APM.Verbs.ApplicationConfigurationResult": {
      "type": "object",
      "properties": {
        "IsFinished": {
          "type": "boolean"
        },
        "ExitCode": {
          "type": "number"
        },
        "ErrorDescription": {
          "type": "string"
        }
      }
    },
    "OrionAPMIISApplicationScheduleConfigurationRequest": {
      "required": [
        "applicationId",
        "credentialsId"
      ],
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "number"
        },
        "credentialsId": {
          "type": "number"
        }
      }
    },
    "OrionAPMIISApplicationGetConfigurationResultRequest": {
      "required": [
        "executionKey"
      ],
      "type": "object",
      "properties": {
        "executionKey": {
          "type": "string"
        }
      }
    },
    "OrionAPMIISSiteStartRequest": {
      "required": [
        "nodeId",
        "applicationId",
        "credentialId",
        "siteName",
        "applicationTypeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "applicationId": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "siteName": {
          "type": "string"
        },
        "applicationTypeId": {
          "type": "string"
        }
      }
    },
    "OrionAPMIISSiteStopRequest": {
      "required": [
        "nodeId",
        "applicationId",
        "credentialId",
        "siteName",
        "applicationTypeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "applicationId": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "siteName": {
          "type": "string"
        },
        "applicationTypeId": {
          "type": "string"
        }
      }
    },
    "OrionAPMIISSiteRestartRequest": {
      "required": [
        "nodeId",
        "applicationId",
        "credentialId",
        "siteName",
        "applicationTypeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "applicationId": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "siteName": {
          "type": "string"
        },
        "applicationTypeId": {
          "type": "string"
        }
      }
    },
    "OrionAPMIISApplicationPoolStartRequest": {
      "required": [
        "nodeId",
        "applicationId",
        "credentialId",
        "poolName",
        "applicationTypeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "applicationId": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "poolName": {
          "type": "string"
        },
        "applicationTypeId": {
          "type": "string"
        }
      }
    },
    "OrionAPMIISApplicationPoolStopRequest": {
      "required": [
        "nodeId",
        "applicationId",
        "credentialId",
        "poolName",
        "applicationTypeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "applicationId": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "poolName": {
          "type": "string"
        },
        "applicationTypeId": {
          "type": "string"
        }
      }
    },
    "OrionAPMIISApplicationPoolRestartRequest": {
      "required": [
        "nodeId",
        "applicationId",
        "credentialId",
        "poolName",
        "applicationTypeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "applicationId": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "poolName": {
          "type": "string"
        },
        "applicationTypeId": {
          "type": "string"
        }
      }
    },
    "OrionAPMApplicationUnmanageRequest": {
      "required": [
        "netObjetId",
        "unmanageTime",
        "remanageTime",
        "isRelative"
      ],
      "type": "object",
      "properties": {
        "netObjetId": {
          "type": "string"
        },
        "unmanageTime": {
          "format": "date-time",
          "type": "string"
        },
        "remanageTime": {
          "format": "date-time",
          "type": "string"
        },
        "isRelative": {
          "type": "boolean"
        }
      }
    },
    "OrionAPMApplicationRemanageRequest": {
      "required": [
        "netObjetId"
      ],
      "type": "object",
      "properties": {
        "netObjetId": {
          "type": "string"
        }
      }
    },
    "System.Collections.Generic.KeyValuePair~System.String_System.String~": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "OrionAPMApplicationCreateApplicationRequest": {
      "required": [
        "nodeId",
        "applicationTemplateId",
        "credentialSetId",
        "skipIfDuplicate"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "applicationTemplateId": {
          "type": "number"
        },
        "credentialSetId": {
          "type": "number"
        },
        "skipIfDuplicate": {
          "type": "boolean"
        },
        "applicationSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
          }
        }
      }
    },
    "OrionAPMApplicationDeleteApplicationRequest": {
      "required": [
        "applicationId"
      ],
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "number"
        }
      }
    },
    "OrionAPMApplicationPollNowRequest": {
      "required": [
        "applicationId"
      ],
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "number"
        }
      }
    },
    "System.Collections.Generic.KeyValuePair~System.String_System.Boolean~": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "boolean"
        }
      }
    },
    "OrionAPMApplicationCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "propertyName",
        "description",
        "valueType",
        "size",
        "validRange",
        "parser",
        "header",
        "alignment",
        "format",
        "units",
        "usageFlags",
        "mandatory",
        "defaultValue"
      ],
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "valueType": {
          "type": "string"
        },
        "size": {
          "type": "number"
        },
        "validRange": {
          "type": "string"
        },
        "parser": {
          "type": "string"
        },
        "header": {
          "type": "string"
        },
        "alignment": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "units": {
          "type": "string"
        },
        "usageFlags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "mandatory": {
          "type": "boolean"
        },
        "defaultValue": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        }
      }
    },
    "OrionAPMApplicationCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "propertyName",
        "description",
        "valueType",
        "size",
        "validRange",
        "parser",
        "header",
        "alignment",
        "format",
        "units",
        "values",
        "usageFlags",
        "mandatory",
        "defaultValue"
      ],
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "valueType": {
          "type": "string"
        },
        "size": {
          "type": "number"
        },
        "validRange": {
          "type": "string"
        },
        "parser": {
          "type": "string"
        },
        "header": {
          "type": "string"
        },
        "alignment": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "units": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "usageFlags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "mandatory": {
          "type": "boolean"
        },
        "defaultValue": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        }
      }
    },
    "OrionAPMApplicationCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "propertyName",
        "description",
        "size",
        "values",
        "usageFlags",
        "mandatory",
        "defaultValue"
      ],
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "size": {
          "type": "number"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "usageFlags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "mandatory": {
          "type": "boolean"
        },
        "defaultValue": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        }
      }
    },
    "OrionAPMApplicationCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "propertyName"
      ],
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Data.Providers.APM.Verbs.ApplicationTemplateSetting": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Frequency": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "Timeout": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "DebugLoggingEnabled": {
          "type": "boolean"
        },
        "NumberOfLogFilesToKeep": {
          "type": "number"
        },
        "Use64Bit": {
          "type": "boolean"
        }
      }
    },
    "OrionAPMApplicationTemplateUpdateApplicationTemplateSettingsRequest": {
      "required": [
        "applicationTemplateId",
        "settings"
      ],
      "type": "object",
      "properties": {
        "applicationTemplateId": {
          "type": "number"
        },
        "settings": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.APM.Verbs.ApplicationTemplateSetting"
        }
      }
    },
    "OrionAPMApplicationTemplateDeleteTemplateRequest": {
      "required": [
        "applicationTemplateId"
      ],
      "type": "object",
      "properties": {
        "applicationTemplateId": {
          "type": "number"
        }
      }
    },
    "OrionAPMApplicationTemplateExportTemplateRequest": {
      "required": [
        "templateId"
      ],
      "type": "object",
      "properties": {
        "templateId": {
          "description": "ID of template to export.",
          "type": "number"
        }
      }
    },
    "OrionAPMApplicationTemplateImportTemplateRequest": {
      "required": [
        "templateData"
      ],
      "type": "object",
      "properties": {
        "templateData": {
          "description": "Template definition as string",
          "type": "string"
        }
      }
    },
    "OrionAPMComponentCalculateBaselineThresholdsRequest": {
      "required": [
        "componentId",
        "thresholdName"
      ],
      "type": "object",
      "properties": {
        "componentId": {
          "description": "Component id",
          "type": "number"
        },
        "thresholdName": {
          "description": "Threshold name, for dynamic components it can be taken from APM.DynamicEvidenceColumnSchema.Name, for non dynamic component it can be taken from Orion.APM.Threshold.ThresholdName ",
          "type": "string"
        }
      }
    },
    "SolarWinds.APM.Common.Models.Threshold": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "WarnLevel": {
          "type": "number"
        },
        "CriticalLevel": {
          "type": "number"
        },
        "IsWarnLevelSet": {
          "type": "boolean"
        },
        "IsCriticalLevelSet": {
          "type": "boolean"
        },
        "IsForTemplate": {
          "type": "boolean"
        },
        "IsForParentComponent": {
          "type": "boolean"
        },
        "ThresholdOperator": {
          "$ref": "#/definitions/SolarWinds.APM.Common.Models.ThresholdOperator"
        },
        "Empty": {
          "$ref": "#/definitions/SolarWinds.APM.Common.Models.Threshold"
        },
        "ComputeBaseline": {
          "type": "boolean"
        },
        "UseBaseline": {
          "type": "boolean"
        },
        "WarningFormula": {
          "type": "string"
        },
        "CriticalFormula": {
          "type": "string"
        },
        "BaselineFrom": {
          "format": "date-time",
          "type": "string"
        },
        "BaselineTo": {
          "format": "date-time",
          "type": "string"
        },
        "BaselineApplied": {
          "format": "date-time",
          "type": "string"
        },
        "BaselineApplyError": {
          "type": "string"
        },
        "BaselineFromTicks": {
          "type": "number"
        },
        "BaselineToTicks": {
          "type": "number"
        },
        "BaselineAppliedTicks": {
          "type": "number"
        },
        "BaselineAvailableIn": {
          "type": "number"
        },
        "StatsFromTicks": {
          "type": "number"
        },
        "StatsToTicks": {
          "type": "number"
        },
        "StatsMean": {
          "type": "number"
        },
        "StatsStdDev": {
          "type": "number"
        },
        "StatsMin": {
          "type": "number"
        },
        "StatsMax": {
          "type": "number"
        },
        "WarningPolls": {
          "type": "number"
        },
        "WarningPollsInterval": {
          "type": "number"
        },
        "IsWarningFiredAfterSinglePoll": {
          "type": "boolean"
        },
        "IsWarningFiredAfterXPolls": {
          "type": "boolean"
        },
        "IsWarningFiredAfterXofYPolls": {
          "type": "boolean"
        },
        "CriticalPolls": {
          "type": "number"
        },
        "CriticalPollsInterval": {
          "type": "number"
        },
        "IsCriticalFiredAfterSinglePoll": {
          "type": "boolean"
        },
        "IsCriticalFiredAfterXPolls": {
          "type": "boolean"
        },
        "IsCriticalFiredAfterXofYPolls": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.APM.Common.Models.ThresholdOperator": {
      "enum": [
        "Greater",
        "GreaterOrEqual",
        "Equal",
        "LessOrEqual",
        "Less",
        "NotEqual"
      ],
      "type": "string"
    },
    "OrionAPMLicenseInfoGetLicenseLimitRequest": {
      "type": "object"
    },
    "OrionAPMLicenseInfoGetLicensedEntitiesCountRequest": {
      "required": [
        "engineName",
        "entityPrefix"
      ],
      "type": "object",
      "properties": {
        "engineName": {
          "type": "string"
        },
        "entityPrefix": {
          "type": "string"
        }
      }
    },
    "OrionAPMLicenseInfoGetLicensedEntityCountFromAllEnginesRequest": {
      "required": [
        "entityPrefix"
      ],
      "type": "object",
      "properties": {
        "entityPrefix": {
          "type": "string"
        }
      }
    },
    "OrionAPMLicenseInfoRefreshLicenseCacheRequest": {
      "type": "object"
    },
    "OrionAPMServerManagementStartServiceRequest": {
      "required": [
        "nodeId",
        "credentialId",
        "serviceName"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "serviceName": {
          "type": "string"
        }
      }
    },
    "OrionAPMServerManagementStopServiceRequest": {
      "required": [
        "nodeId",
        "credentialId",
        "serviceName"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "serviceName": {
          "type": "string"
        }
      }
    },
    "OrionAPMServerManagementRestartServiceRequest": {
      "required": [
        "nodeId",
        "credentialId",
        "serviceName"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "serviceName": {
          "type": "string"
        }
      }
    },
    "OrionAPMServerManagementRebootNodeRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        }
      }
    },
    "OrionStacksRelationTraverseRequest": {
      "required": [
        "keys"
      ],
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeRelations": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.RelianceData": {
      "type": "object",
      "properties": {
        "Nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.NodeInfo"
          }
        },
        "Reliances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.RelianceInfo"
          }
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.NodeInfo": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "Uri": {
          "type": "string"
        },
        "EntityType": {
          "type": "string"
        },
        "Relation": {
          "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.RelianceInfo"
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.RelianceInfo": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "Neighbors": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.UiRequest": {
      "type": "object",
      "properties": {
        "SpotlightEnabled": {
          "type": "boolean"
        },
        "ViewLimitationId": {
          "type": "number"
        },
        "Categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.UiQueryCategory"
          }
        },
        "Selections": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.UiQueryItem"
          }
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.UiQueryCategory": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "IssueLimit": {
          "type": "number"
        },
        "NonIssueLimit": {
          "type": "number"
        },
        "UiOrder": {
          "type": "number"
        },
        "CategoryDisplayToken": {
          "type": "string"
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.UiQueryItem": {
      "type": "object",
      "properties": {
        "Entity": {
          "type": "string"
        },
        "CategoryId": {
          "type": "string"
        },
        "MembershipJoins": {
          "type": "string"
        },
        "MembershipQuery": {
          "type": "string"
        },
        "ForceNoMatches": {
          "type": "boolean"
        },
        "PropertyQueries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.UiQueryFilterItem"
          }
        },
        "EntityRequirements": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~System.String~"
        },
        "QueryMode": {
          "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.UiQueryItemMode"
        },
        "AnyPropertyQueries": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.UiQueryFilterItem": {
      "type": "object",
      "properties": {
        "CorrelationId": {
          "type": "string"
        },
        "Join": {
          "type": "string"
        },
        "Query": {
          "type": "string"
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.UiQueryItemMode": {
      "enum": [
        "ForceAll",
        "Query",
        "ForceNone"
      ],
      "type": "string"
    },
    "OrionStacksRelationProcessUiRequest": {
      "required": [
        "config"
      ],
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.UiRequest"
        },
        "includeTracing": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.UiResponse": {
      "type": "object",
      "properties": {
        "Categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.UiCategory"
          }
        },
        "Traces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.AppStack.Contract.Tracing.TraceEntry"
          }
        },
        "SwisErrorMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.InformationService.Contract2.ErrorMessage"
          }
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.UiCategory": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Icons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.UiIcon"
          }
        },
        "Counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.UiCount"
          }
        },
        "SelectionCounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.AppStack.Contract.Models.UiCount"
          }
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.UiIcon": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "ChildStatus": {
          "type": "number"
        },
        "UiOrder": {
          "type": "number"
        },
        "Severity": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "IsSelected": {
          "type": "boolean"
        },
        "IsSelectionRelation": {
          "type": "boolean"
        },
        "IsFilterMatch": {
          "type": "boolean"
        },
        "IsForcedMembership": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.AppStack.Contract.Models.UiCount": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "N": {
          "type": "number"
        }
      }
    },
    "SolarWinds.AppStack.Contract.Tracing.TraceEntry": {
      "type": "object",
      "properties": {
        "Timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "DurationMs": {
          "type": "number"
        },
        "Message": {
          "type": "string"
        },
        "Details": {
          "type": "string"
        },
        "TraceLevel": {
          "type": "number"
        }
      }
    },
    "SolarWinds.InformationService.Contract2.ErrorMessage": {
      "type": "object",
      "properties": {
        "ErrorType": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "OrionARMSettingsGetWebApiSettingsRequest": {
      "type": "object"
    },
    "SolarWinds.Arm.Common.Models.WebApiSettings": {
      "type": "object",
      "properties": {
        "BaseUrl": {
          "type": "string"
        },
        "AcceptSelfSigned": {
          "type": "boolean"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "OrionARMSettingsSetWebApiSettingsRequest": {
      "required": [
        "baseUrl",
        "acceptSelfSigned",
        "username",
        "encryptedPassword"
      ],
      "type": "object",
      "properties": {
        "baseUrl": {
          "type": "string"
        },
        "acceptSelfSigned": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "encryptedPassword": {
          "type": "string"
        }
      }
    },
    "OrionARMSettingsTestWebApiSettingsRequest": {
      "required": [
        "baseUrl",
        "acceptSelfSigned",
        "username",
        "encryptedPassword"
      ],
      "type": "object",
      "properties": {
        "baseUrl": {
          "type": "string"
        },
        "acceptSelfSigned": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "encryptedPassword": {
          "type": "string"
        }
      }
    },
    "OrionASANodeExecuteCliCommandRequest": {
      "required": [
        "hostname",
        "username",
        "password",
        "command"
      ],
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Hostname or ip address of the target device",
          "type": "string"
        },
        "username": {
          "description": "Username to login to the device",
          "type": "string"
        },
        "password": {
          "description": "Password used to login to the device",
          "type": "string"
        },
        "command": {
          "description": "Actual command to be executed",
          "type": "string"
        },
        "enablePassword": {
          "description": "(optional) Enable password to access privileged mode",
          "type": "string"
        }
      }
    },
    "OrionASAInterfacesSetFavoriteRequest": {
      "required": [
        "entityId"
      ],
      "type": "object",
      "properties": {
        "entityId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Orion.NetMan.Firewalls.Common.Models.Actions.FavoriteActionResult": {
      "type": "object",
      "properties": {
        "ErrorCode": {
          "$ref": "#/definitions/SolarWinds.Orion.NetMan.Firewalls.Common.Models.Actions.FavoriteActionErrorCodes"
        },
        "MaxFavoritesCount": {
          "type": "number"
        },
        "IsSuccess": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.Orion.NetMan.Firewalls.Common.Models.Actions.FavoriteActionErrorCodes": {
      "enum": [
        "None",
        "EntityNotFound",
        "MaxCountExceeded",
        "AccessToVerbDenied"
      ],
      "type": "string"
    },
    "OrionASAInterfacesRemoveFavoriteRequest": {
      "required": [
        "entityId"
      ],
      "type": "object",
      "properties": {
        "entityId": {
          "type": "number"
        }
      }
    },
    "OrionAssetInventoryPollingPollNowRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionAssetInventoryPollingEnablePollingForNodesRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionAssetInventoryPollingDisablePollingForNodesRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "CirrusNCM_NCMJobsGetJobRequest": {
      "required": [
        "jobId"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.NCMJob": {
      "type": "object",
      "properties": {
        "JobID": {
          "type": "number"
        },
        "JobName": {
          "type": "string"
        },
        "JobType": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eJobType"
        },
        "JobDefinition": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMJobDefinition"
        },
        "JobSchedule": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMJobSchedule"
        },
        "Enabled": {
          "type": "boolean"
        },
        "JobStatus": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eJobStatus"
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string"
        },
        "Author": {
          "type": "string"
        },
        "IsHidden": {
          "type": "boolean"
        },
        "IsPrePolulated": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.eJobType": {
      "enum": [
        "CommandScript",
        "ExecuteProgram",
        "Upload",
        "Report",
        "Reboot",
        "ExportConfigs",
        "DatabaseMaintenance",
        "Inventory",
        "ConfigChangeReport",
        "PolicyReport",
        "PurgeConfigs",
        "DownloadConfigs",
        "RealTimeNotification",
        "OrionImport",
        "BaselineEntireNetwork",
        "ConfigChangeTemplate",
        "Error"
      ],
      "type": "string"
    },
    "SolarWinds.NCM.Contracts.InformationService.NCMJobDefinition": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "OwnerSID": {
          "type": "string"
        },
        "LastModification": {
          "format": "date-time",
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "JobType": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eJobType"
        },
        "Nodes": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.SelectedNodes"
        },
        "Parameters": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.JobParameters"
        },
        "Notifications": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.JobNotifications"
        },
        "NcmRunOnce": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.SelectedNodes": {
      "type": "object",
      "properties": {
        "SelectedCriteriaType": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eCriteriaType"
        },
        "WebNodesSelectionCriterias": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.WebSelectionCriteria"
          }
        },
        "NetworkNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NetworkNode"
          }
        },
        "QueryString": {
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.eCriteriaType": {
      "enum": [
        "AllNodes",
        "SelectedNodes",
        "WebCriteria",
        "DesktopCriteria"
      ],
      "type": "string"
    },
    "SolarWinds.NCM.Contracts.InformationService.WebSelectionCriteria": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "LogicalCondition": {
          "type": "string"
        },
        "SelectedColumn": {
          "type": "string"
        },
        "MatchType": {
          "type": "string"
        },
        "SelectedValue": {
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.NetworkNode": {
      "type": "object",
      "properties": {
        "NodeCaption": {
          "type": "string"
        },
        "NodeID": {
          "format": "uuid",
          "type": "string"
        },
        "Script": {
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.JobParameters": {
      "type": "object",
      "properties": {
        "Script": {
          "type": "string"
        },
        "ScriptFilterPattern": {
          "type": "string"
        },
        "ExecuteFilterResults": {
          "type": "boolean"
        },
        "ExecuteShowCommands": {
          "type": "boolean"
        },
        "WriteToNVRAM": {
          "type": "boolean"
        },
        "Reboot": {
          "type": "boolean"
        },
        "ConfigText": {
          "type": "string"
        },
        "ChangeReportType": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Jobs.ConfigChangeReportType"
        },
        "ChangeReportDetails": {
          "type": "boolean"
        },
        "ChangeReportTargetDate": {
          "format": "date-time",
          "type": "string"
        },
        "ChangeReportPastXXDays": {
          "type": "number"
        },
        "ChangeReportStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "ChangeReportEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "CompareLastDownloaded": {
          "type": "number"
        },
        "LastConfigType": {
          "type": "string"
        },
        "OnConfigType": {
          "type": "string"
        },
        "GenerateOnConfigType": {
          "type": "boolean"
        },
        "OnlySendDevicesThatHadChanges": {
          "type": "boolean"
        },
        "Report": {
          "type": "string"
        },
        "ReportTitle": {
          "type": "string"
        },
        "LimitNumberOfRecords": {
          "type": "boolean"
        },
        "NumberOfRecords": {
          "type": "number"
        },
        "Path": {
          "type": "string"
        },
        "AllConfigs": {
          "type": "boolean"
        },
        "ConfigTemplate": {
          "type": "string"
        },
        "ConfigTypes": {
          "type": "string"
        },
        "OnlySaveChangedConfigs": {
          "type": "boolean"
        },
        "NotifyChangedLast": {
          "type": "boolean"
        },
        "NotifyChangedBaseline": {
          "type": "boolean"
        },
        "NotifyChangedStartup": {
          "type": "boolean"
        },
        "NotifySeparateTextEmail": {
          "type": "boolean"
        },
        "NotifySeparateHtmlEmail": {
          "type": "boolean"
        },
        "CacheDiffResults": {
          "type": "boolean"
        },
        "ObjectID": {
          "type": "string"
        },
        "GroupingPolicyReports": {
          "type": "boolean"
        },
        "NotifyOnlyOnPolicyViolations": {
          "type": "boolean"
        },
        "InventorySettings": {
          "type": "string"
        },
        "PurgeConfigByDate": {
          "type": "boolean"
        },
        "PurgeConfigIncludeTime": {
          "type": "boolean"
        },
        "PurgeConfigBaseline": {
          "type": "boolean"
        },
        "PurgeConfigDate": {
          "type": "string"
        },
        "PurgeConfigCount": {
          "type": "number"
        },
        "PurgeConfigByTimeRange": {
          "type": "boolean"
        },
        "PurgeConfigTimeRange": {
          "type": "string"
        },
        "PurgeConfigArchive": {
          "type": "boolean"
        },
        "PurgeConfigArchiveTimeRange": {
          "type": "string"
        },
        "PurgeConfigCache": {
          "type": "boolean"
        },
        "PurgeConfigCacheTimeRange": {
          "type": "string"
        },
        "PurgeApprovalRequests": {
          "type": "boolean"
        },
        "PurgeApprovalRequestsTimeRange": {
          "type": "string"
        },
        "PurgeTransferRequests": {
          "type": "boolean"
        },
        "PurgeTransferRequestsTimeRange": {
          "type": "string"
        },
        "PurgeJobLog": {
          "type": "boolean"
        },
        "PurgeJobLogType": {
          "type": "string"
        },
        "PurgeJobLogTypeValue": {
          "type": "string"
        },
        "BaselineNetworkType": {
          "type": "string"
        },
        "BaselineNetworkTargetDate": {
          "format": "date-time",
          "type": "string"
        },
        "FilePathList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.FilePath"
          }
        },
        "PurgeOneTimeInventoryJobs": {
          "type": "boolean"
        },
        "PurgeOneTimeInventoryJobsTimeRange": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "PurgeAudit": {
          "type": "boolean"
        },
        "PurgeAuditToFile": {
          "type": "boolean"
        },
        "PurgeAuditTimeRange": {
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.Jobs.ConfigChangeReportType": {
      "enum": [
        "Running",
        "Startup",
        "Baseline",
        "Last",
        "TargetDate",
        "PastXXDays",
        "DateRange"
      ],
      "type": "string"
    },
    "SolarWinds.NCM.Contracts.InformationService.FilePath": {
      "type": "object",
      "properties": {
        "EngineID": {
          "type": "number"
        },
        "File_Path": {
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.JobNotifications": {
      "type": "object",
      "properties": {
        "EmailOnlyOnError": {
          "type": "boolean"
        },
        "EmailResults": {
          "type": "boolean"
        },
        "EmailCC": {
          "type": "string"
        },
        "EmailRecipient": {
          "type": "string"
        },
        "EmailBCC": {
          "type": "string"
        },
        "EmailSubject": {
          "type": "string"
        },
        "EmailFrom": {
          "type": "string"
        },
        "EmailReplyAddress": {
          "type": "string"
        },
        "EmailAttachment": {
          "type": "boolean"
        },
        "AttachmentFileName": {
          "type": "string"
        },
        "LogSteps": {
          "type": "boolean"
        },
        "SMTPServer": {
          "type": "string"
        },
        "SMTPPort": {
          "type": "number"
        },
        "SMTPUseAuthentication": {
          "type": "boolean"
        },
        "SMTPAuthUserName": {
          "type": "string"
        },
        "SMTPAuthPassword": {
          "type": "string"
        },
        "SMTPUseSSL": {
          "type": "boolean"
        },
        "SMTPSSLPortNumber": {
          "type": "number"
        },
        "SaveToFileName": {
          "type": "string"
        },
        "SaveResultsToFile": {
          "type": "boolean"
        },
        "SaveToFileOnError": {
          "type": "boolean"
        },
        "ShouldSaveResults": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.NCMJobSchedule": {
      "type": "object",
      "properties": {
        "TriggerType": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMJobSchedule-eTriggerType"
        },
        "StartTime": {
          "format": "date-time",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "Day": {
          "type": "number"
        },
        "DaysOfTheWeek": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMJobSchedule-eTriggerDays"
          }
        },
        "Months": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMJobSchedule-eTriggerMonths"
          }
        },
        "Weeks": {
          "type": "number"
        },
        "AdvancedCRONExpression": {
          "type": "string"
        },
        "StartingOn": {
          "format": "date-time",
          "type": "string"
        },
        "EndingOn": {
          "format": "date-time",
          "type": "string"
        },
        "ExecuteImmediately": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.NCMJobSchedule-eTriggerType": {
      "enum": [
        "Unknown",
        "Daily",
        "Weekly",
        "Monthly",
        "Once",
        "Advanced"
      ],
      "type": "string"
    },
    "SolarWinds.NCM.Contracts.InformationService.NCMJobSchedule-eTriggerDays": {
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "type": "string"
    },
    "SolarWinds.NCM.Contracts.InformationService.NCMJobSchedule-eTriggerMonths": {
      "enum": [
        "Unknown",
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      "type": "string"
    },
    "SolarWinds.NCM.Contracts.InformationService.eJobStatus": {
      "enum": [
        "Unknown",
        "Running",
        "Disabled",
        "Scheduled",
        "NotSceduled",
        "Waiting",
        "Starting",
        "Complete"
      ],
      "type": "string"
    },
    "CirrusNCM_NCMJobsUpdateJobRequest": {
      "required": [
        "job"
      ],
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMJob"
        }
      }
    },
    "CirrusNCM_NCMJobsAddJobRequest": {
      "required": [
        "job"
      ],
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMJob"
        }
      }
    },
    "CirrusNCM_NCMJobsDeleteJobsRequest": {
      "required": [
        "jobIds"
      ],
      "type": "object",
      "properties": {
        "jobIds": {
          "description": "Job definition IDs.",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "SolarWinds.NCM.Contracts.Jobs.DeleteNcmJobsResult": {
      "type": "object",
      "properties": {
        "AffectedNcmJobs": {
          "type": "number"
        },
        "AffectedJobEngineNcmJobs": {
          "type": "number"
        }
      }
    },
    "CirrusNCM_NCMJobsEnableOrDisableJobsRequest": {
      "required": [
        "jobIds",
        "enableOrDisable"
      ],
      "type": "object",
      "properties": {
        "jobIds": {
          "description": "Job definition IDs.",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "enableOrDisable": {
          "description": "True - enables, False - disables",
          "type": "boolean"
        }
      }
    },
    "CirrusNCM_NCMJobsClearJobLogRequest": {
      "required": [
        "jobId"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Job definition ID.",
          "type": "number"
        }
      }
    },
    "CirrusNCM_NCMJobsGetJobStatusRequest": {
      "required": [
        "jobId"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Job definition ID.",
          "type": "number"
        }
      }
    },
    "CirrusNCM_NCMJobsGetJobLogRequest": {
      "required": [
        "jobId",
        "checkSize"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Job definition ID.",
          "type": "number"
        },
        "checkSize": {
          "description": "If True then size will be checked before returning results.",
          "type": "boolean"
        }
      }
    },
    "CirrusNCM_NCMJobsValidateJobsAccessRequest": {
      "type": "object"
    },
    "SolarWinds.NCM.Contracts.InformationService.ValidationResults": {
      "type": "object",
      "properties": {
        "IsValid": {
          "type": "boolean"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "CirrusRTNExecuteRtnRequest": {
      "required": [
        "ipAddress",
        "commandLine"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "IP address of the device.",
          "type": "string"
        },
        "commandLine": {
          "description": "Command line.",
          "type": "string"
        }
      }
    },
    "CirrusRTNRunRtnRequest": {
      "required": [
        "args"
      ],
      "type": "object",
      "properties": {
        "args": {
          "description": "Command line arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.NCMApprovalTicket": {
      "type": "object",
      "properties": {
        "RequestID": {
          "format": "uuid",
          "type": "string"
        },
        "RequestType": {
          "type": "string"
        },
        "RequestStatus": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eApprovalStatus"
        },
        "SubmittedBy": {
          "type": "string"
        },
        "ApprovedBy": {
          "type": "string"
        },
        "ConfigType": {
          "type": "string"
        },
        "Reboot": {
          "type": "boolean"
        },
        "Script": {
          "type": "string"
        },
        "NetworkNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NetworkNode"
          }
        },
        "Comments": {
          "type": "string"
        },
        "RunAt": {
          "format": "date-time",
          "type": "string"
        },
        "NCMJobID": {
          "type": "number"
        },
        "RequestTime": {
          "format": "date-time",
          "type": "string"
        },
        "StatusChangeTime": {
          "format": "date-time",
          "type": "string"
        },
        "ExecutionType": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eExecutionType"
        },
        "RequestorEmail": {
          "type": "string"
        },
        "UseScriptPerNode": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.eApprovalStatus": {
      "enum": [
        "PendingApproval",
        "Declined",
        "WaitingForExecution",
        "Scheduled",
        "Complete",
        "Executing",
        "NeedConfirmation"
      ],
      "type": "string"
    },
    "SolarWinds.NCM.Contracts.InformationService.eExecutionType": {
      "enum": [
        "Immediate",
        "ReturnToRequestor",
        "SpecifiedTime"
      ],
      "type": "string"
    },
    "CirrusApproveQueueAddRequestRequest": {
      "required": [
        "ticket"
      ],
      "type": "object",
      "properties": {
        "ticket": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMApprovalTicket"
        }
      }
    },
    "CirrusApproveQueueUpdateRequestRequest": {
      "required": [
        "ticket"
      ],
      "type": "object",
      "properties": {
        "ticket": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMApprovalTicket"
        }
      }
    },
    "CirrusApproveQueueApproveRequestRequest": {
      "required": [
        "ticket"
      ],
      "type": "object",
      "properties": {
        "ticket": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMApprovalTicket"
        }
      }
    },
    "CirrusApproveQueueDeclineRequestRequest": {
      "required": [
        "ticket"
      ],
      "type": "object",
      "properties": {
        "ticket": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMApprovalTicket"
        }
      }
    },
    "CirrusApproveQueueGetTicketStatusRequest": {
      "required": [
        "ticketId"
      ],
      "type": "object",
      "properties": {
        "ticketId": {
          "format": "uuid",
          "description": "The ticket ID.",
          "type": "string"
        }
      }
    },
    "CirrusApproveQueueGetRequestRequest": {
      "required": [
        "requestId"
      ],
      "type": "object",
      "properties": {
        "requestId": {
          "format": "uuid",
          "description": "The ticket ID.",
          "type": "string"
        }
      }
    },
    "CirrusApproveQueueDeleteRequestRequest": {
      "required": [
        "ticketId"
      ],
      "type": "object",
      "properties": {
        "ticketId": {
          "format": "uuid",
          "description": "The ticket ID.",
          "type": "string"
        }
      }
    },
    "CirrusApproveQueueGetApprovalUsersRequest": {
      "type": "object"
    },
    "SolarWinds.NCM.Contracts.InformationService.NCMApprovalUser": {
      "type": "object",
      "properties": {
        "GroupID": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eApprovalGroup"
        },
        "GroupName": {
          "type": "string"
        },
        "UserId": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.eApprovalGroup": {
      "enum": [
        "Group1",
        "Group2"
      ],
      "type": "string"
    },
    "CirrusApproveQueueUpdateApprovalUsersRequest": {
      "required": [
        "users"
      ],
      "type": "object",
      "properties": {
        "users": {
          "description": "The data about reviewers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMApprovalUser"
          }
        }
      }
    },
    "CirrusApproveQueueGetUserApproveRoleRequest": {
      "required": [
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "The user ID or name.",
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.eUserApproveRole": {
      "enum": [
        "None",
        "Requestor",
        "SingleApprover",
        "ApproverGroup1",
        "ApproverGroup2",
        "RequestorAndApproverGroup1",
        "RequestorAndApproverGroup2"
      ],
      "type": "string"
    },
    "CirrusApproveQueueGetApprovalModeRequest": {
      "type": "object"
    },
    "SolarWinds.NCM.Contracts.InformationService.eApprovalMode": {
      "enum": [
        "ApprovalDisabled",
        "OneLevel",
        "TwoLevelWebUploader",
        "TwoLevelAll"
      ],
      "type": "string"
    },
    "CirrusApproveQueueSetApprovalModeRequest": {
      "required": [
        "mode"
      ],
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eApprovalMode"
        }
      }
    },
    "NCMSecurityPolicyGetSecurityPolicyAppIdsRequest": {
      "required": [
        "nodeId",
        "policyName"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "ID of the node.",
          "type": "number"
        },
        "policyName": {
          "description": "Policy name.",
          "type": "string"
        }
      }
    },
    "NCMVulnerabilitiesAnnouncementsStartVulnerabilityMatchingRequest": {
      "type": "object"
    },
    "NCMVulnerabilitiesAnnouncementsIsVulnerabilityMatchingActiveRequest": {
      "type": "object"
    },
    "NCMVulnerabilitiesAnnouncementsInitVulnerabilityScheduleRequest": {
      "type": "object"
    },
    "NCMVulnerabilitiesAnnouncementsGetSettingsRequest": {
      "type": "object"
    },
    "SolarWinds.SecObs.Common.Models.Vulnerability.VulnerabilityMatchSettingsModel": {
      "type": "object",
      "properties": {
        "EnableScheduler": {
          "type": "boolean"
        },
        "SchedulerDailyTimeOffset": {
          "$ref": "#/definitions/System.TimeSpan"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.ConfigSnippet": {
      "type": "object",
      "properties": {
        "LastModified": {
          "format": "date-time",
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "type": "number"
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Script": {
          "type": "string"
        },
        "PreserveWhiteSpace": {
          "type": "boolean"
        }
      }
    },
    "CirrusConfigSnippetsAddSnippetRequest": {
      "required": [
        "snippet"
      ],
      "type": "object",
      "properties": {
        "snippet": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ConfigSnippet"
        }
      }
    },
    "CirrusConfigSnippetsGetSnippetRequest": {
      "required": [
        "snippetId"
      ],
      "type": "object",
      "properties": {
        "snippetId": {
          "description": "Snippet ID.",
          "type": "number"
        }
      }
    },
    "CirrusConfigSnippetsUpdateSnippetRequest": {
      "required": [
        "snippet"
      ],
      "type": "object",
      "properties": {
        "snippet": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ConfigSnippet"
        }
      }
    },
    "CirrusConfigSnippetsDeleteSnippetsRequest": {
      "required": [
        "snippetIds"
      ],
      "type": "object",
      "properties": {
        "snippetIds": {
          "description": "Array of the snippet IDs.",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "CirrusConfigSnippetsImportSnippetsRequest": {
      "required": [
        "snippets"
      ],
      "type": "object",
      "properties": {
        "snippets": {
          "description": "List of config snippets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ConfigSnippet"
          }
        }
      }
    },
    "CirrusConfigSnippetsCopySnippetsRequest": {
      "required": [
        "snippetIds"
      ],
      "type": "object",
      "properties": {
        "snippetIds": {
          "description": "Array of the snippet IDs.",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "CirrusConfigSnippetsGetTagsListRequest": {
      "type": "object"
    },
    "CirrusConfigSnippetsGetTagsListForSnippetsRequest": {
      "required": [
        "snippetIds"
      ],
      "type": "object",
      "properties": {
        "snippetIds": {
          "description": "Array of snippet IDs.",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "CirrusConfigSnippetsAddTagsRequest": {
      "required": [
        "snippetIds",
        "tags"
      ],
      "type": "object",
      "properties": {
        "snippetIds": {
          "description": "Array of the snippet IDs.",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "tags": {
          "description": "List of tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CirrusConfigSnippetsDeleteTagsRequest": {
      "required": [
        "snippetIds",
        "tags"
      ],
      "type": "object",
      "properties": {
        "snippetIds": {
          "description": "Array of the snippet IDs.",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "tags": {
          "description": "List of the tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CirrusConfigSnippetsSaveSnippetAsCopyRequest": {
      "required": [
        "snippet"
      ],
      "type": "object",
      "properties": {
        "snippet": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ConfigSnippet"
        }
      }
    },
    "CirrusConfigArchiveDiffRequest": {
      "required": [
        "configId1",
        "configId2"
      ],
      "type": "object",
      "properties": {
        "configId1": {
          "format": "uuid",
          "description": "First config ID.",
          "type": "string"
        },
        "configId2": {
          "format": "uuid",
          "description": "Second config ID.",
          "type": "string"
        }
      }
    },
    "System.Data.DataTable": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "SolarWinds.Orion.DiffEngine.Contract.Models.TextDiffEngineSettings": {
      "type": "object",
      "properties": {
        "OnlyChangedLines": {
          "type": "boolean"
        },
        "SizeOfContext": {
          "type": "number"
        },
        "StartIndex": {
          "type": "number"
        },
        "Size": {
          "type": "number"
        },
        "NoCache": {
          "type": "boolean"
        },
        "IgnoreLinesPattern": {
          "$ref": "#/definitions/SolarWinds.Orion.DiffEngine.Contract.Models.IgnoreLinesPattern"
        },
        "NumberOfChangesToShow": {
          "type": "number"
        },
        "MaxMemoryAllocationInMegabytes": {
          "type": "number"
        },
        "IgnoreWhiteSpace": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.Orion.DiffEngine.Contract.Models.IgnoreLinesPattern": {
      "type": "object",
      "properties": {
        "Regexs": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~System.String~"
        },
        "Blocks": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~SolarWinds.Orion.DiffEngine.Contract.Models.IgnoredTextBlock~"
        },
        "RegexTimeout": {
          "$ref": "#/definitions/System.TimeSpan"
        }
      }
    },
    "System.Collections.Generic.IEnumerable~SolarWinds.Orion.DiffEngine.Contract.Models.IgnoredTextBlock~": {
      "type": "object"
    },
    "CirrusConfigArchiveCompareConfigsRequest": {
      "required": [
        "configId1",
        "configId2",
        "settings"
      ],
      "type": "object",
      "properties": {
        "configId1": {
          "format": "uuid",
          "description": "First config ID.",
          "type": "string"
        },
        "configId2": {
          "format": "uuid",
          "description": "Second config ID.",
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/SolarWinds.Orion.DiffEngine.Contract.Models.TextDiffEngineSettings"
        }
      }
    },
    "SolarWinds.Orion.DiffEngine.Contract.Models.TextDocumentDiff": {
      "type": "object",
      "properties": {
        "Hunks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.DiffEngine.Contract.Models.Hunk"
          }
        },
        "NumberOfLines": {
          "type": "number"
        },
        "RemainingChangesCount": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Orion.DiffEngine.Contract.Models.Hunk": {
      "type": "object",
      "properties": {
        "Lines": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~SolarWinds.Orion.DiffEngine.Contract.Models.LinesDiff~"
        },
        "StartIndex": {
          "type": "number"
        },
        "Size": {
          "type": "number"
        }
      }
    },
    "System.Collections.Generic.IEnumerable~SolarWinds.Orion.DiffEngine.Contract.Models.LinesDiff~": {
      "type": "object"
    },
    "SolarWinds.NCM.Contracts.Security.NcmRole": {
      "enum": [
        "None",
        "WebViewer",
        "WebDownloader",
        "WebUploader",
        "Engineer",
        "Administrator"
      ],
      "type": "string"
    },
    "CirrusConfigArchiveGetPermissionsByRoleRequest": {
      "required": [
        "role"
      ],
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Security.NcmRole"
        }
      }
    },
    "CirrusConfigArchiveDeleteConfigsRequest": {
      "required": [
        "ConfigIds",
        "UserName"
      ],
      "type": "object",
      "properties": {
        "ConfigIds": {
          "description": "List of config IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "UserName": {
          "description": "Who requested the verb.",
          "type": "string"
        }
      }
    },
    "CirrusConfigArchiveGetConfigTypesRequest": {
      "type": "object"
    },
    "CirrusConfigArchiveCancelTransfersRequest": {
      "required": [
        "TransferTickets"
      ],
      "type": "object",
      "properties": {
        "TransferTickets": {
          "description": "Array of the transfer IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "CirrusConfigArchiveExecuteScriptRequest": {
      "required": [
        "nodeId",
        "script"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Array of NCM node IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "script": {
          "description": "Script to execute.",
          "type": "string"
        },
        "Reboot": {
          "description": "Should a device be rebooted after script execution(true/false).",
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.NCMNodeScript": {
      "type": "object",
      "properties": {
        "NodeId": {
          "format": "uuid",
          "type": "string"
        },
        "Script": {
          "type": "string"
        }
      }
    },
    "CirrusConfigArchiveExecuteScriptPerNodeRequest": {
      "required": [
        "nodesScript"
      ],
      "type": "object",
      "properties": {
        "nodesScript": {
          "description": "Array of scripts and nodes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMNodeScript"
          }
        },
        "reboot": {
          "description": "Should a device be rebooted after script execution(true/false).",
          "type": "boolean"
        }
      }
    },
    "CirrusConfigArchiveReExecuteRequest": {
      "required": [
        "tickets"
      ],
      "type": "object",
      "properties": {
        "tickets": {
          "description": "Array of ticket ID.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "CirrusConfigArchiveUploadConfigRequest": {
      "required": [
        "nodeId",
        "configType",
        "ConfigText",
        "RebootDevice"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "NCM node ID.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "configType": {
          "description": "Config type.",
          "type": "string"
        },
        "ConfigText": {
          "description": "Config.",
          "type": "string"
        },
        "RebootDevice": {
          "description": "Device should be rebooted after upload(true/false).",
          "type": "boolean"
        }
      }
    },
    "CirrusConfigArchiveUploadConfigPerNodeRequest": {
      "required": [
        "nodesScript",
        "configType"
      ],
      "type": "object",
      "properties": {
        "nodesScript": {
          "description": "Array of script and node.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMNodeScript"
          }
        },
        "configType": {
          "description": "Config type.",
          "type": "string"
        },
        "reboot": {
          "description": "Device should be rebooted after upload(true/false).",
          "type": "boolean"
        }
      }
    },
    "CirrusConfigArchiveDownloadConfigRequest": {
      "required": [
        "nodeId",
        "configType"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Array of NCM node IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "configType": {
          "description": "Config type.",
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.NCMNode": {
      "type": "object",
      "properties": {
        "NodeID": {
          "format": "uuid",
          "type": "string"
        },
        "CoreNodeID": {
          "type": "number"
        },
        "NodeGroup": {
          "type": "string"
        },
        "NodeComments": {
          "type": "string"
        },
        "UseUserDeviceCredentials": {
          "type": "boolean"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "EnableLevel": {
          "type": "string"
        },
        "EnablePassword": {
          "type": "string"
        },
        "ExecProtocol": {
          "type": "string"
        },
        "CommandProtocol": {
          "type": "string"
        },
        "TransferProtocol": {
          "type": "string"
        },
        "EncryptionAlgorithm": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.SSHEncryption"
        },
        "LoginStatus": {
          "type": "string"
        },
        "UseHTTPS": {
          "type": "boolean"
        },
        "LastInventory": {
          "format": "date-time",
          "type": "string"
        },
        "TelnetPort": {
          "type": "string"
        },
        "SSHPort": {
          "type": "string"
        },
        "AllowIntermediary": {
          "type": "boolean"
        },
        "UseKeybInteractiveAuth": {
          "type": "boolean"
        },
        "ConnectionProfile": {
          "type": "number"
        },
        "EndOfSupport": {
          "format": "date-time",
          "type": "string"
        },
        "EndOfSales": {
          "format": "date-time",
          "type": "string"
        },
        "EndOfSoftware": {
          "format": "date-time",
          "type": "string"
        },
        "EosEntryID": {
          "format": "uuid",
          "type": "string"
        },
        "EosType": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eEoSType"
        },
        "EosMatchDate": {
          "format": "date-time",
          "type": "string"
        },
        "EosVersion": {
          "type": "number"
        },
        "EosLink": {
          "type": "string"
        },
        "EosComments": {
          "type": "string"
        },
        "PartNumber": {
          "type": "string"
        },
        "ReplacementPartNumber": {
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.SSHEncryption": {
      "enum": [
        "encAny",
        "encDES",
        "enc3DES",
        "encAES",
        "encBLOWFISH",
        "encAES128",
        "encAES192",
        "encAES256",
        "ChaCha20Poly1305"
      ],
      "type": "string"
    },
    "SolarWinds.NCM.Contracts.InformationService.eEoSType": {
      "enum": [
        "NotAssigned",
        "User",
        "Manual",
        "Auto",
        "Awaiting",
        "Ignored"
      ],
      "type": "string"
    },
    "CirrusConfigArchiveExecuteScriptOnNodesRequest": {
      "required": [
        "nodes",
        "deviceTemplateXML",
        "script"
      ],
      "type": "object",
      "properties": {
        "nodes": {
          "description": "The list of nodes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMNode"
          }
        },
        "deviceTemplateXML": {
          "description": "Device template.",
          "type": "string"
        },
        "script": {
          "description": "Script to execute.",
          "type": "string"
        }
      }
    },
    "CirrusConfigArchiveDownloadConfigOnNodesRequest": {
      "required": [
        "nodes",
        "deviceTemplateXML",
        "configType"
      ],
      "type": "object",
      "properties": {
        "nodes": {
          "description": "The list of nodes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMNode"
          }
        },
        "deviceTemplateXML": {
          "description": "Device template.",
          "type": "string"
        },
        "configType": {
          "description": "Config type.",
          "type": "string"
        }
      }
    },
    "CirrusConfigArchiveConfigSearchRequest": {
      "required": [
        "searchString",
        "configType",
        "coreNodeIdList",
        "matchWholeWord"
      ],
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "configType": {
          "type": "string"
        },
        "coreNodeIdList": {
          "type": "string"
        },
        "matchWholeWord": {
          "type": "boolean"
        },
        "searchOnlyMostRecent": {
          "type": "boolean"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.ConfigSearchTerm": {
      "type": "object",
      "properties": {
        "UseMostRecentConfigOption": {
          "type": "boolean"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "ConfigType": {
          "type": "string"
        },
        "CoreNodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "OriginalSearchString": {
          "type": "string"
        },
        "MatchWholeWord": {
          "type": "boolean"
        }
      }
    },
    "CirrusConfigArchiveConfigSearch2Request": {
      "required": [
        "searchTerm"
      ],
      "type": "object",
      "properties": {
        "searchTerm": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ConfigSearchTerm"
        }
      }
    },
    "CirrusConfigArchiveRunIndexOptimizationRequest": {
      "type": "object"
    },
    "CirrusConfigArchiveUpdateConfigRequest": {
      "required": [
        "configID",
        "title",
        "comments",
        "configText",
        "updateConfigText",
        "UserName"
      ],
      "type": "object",
      "properties": {
        "configID": {
          "format": "uuid",
          "description": "Config ID.",
          "type": "string"
        },
        "title": {
          "description": "Config title.",
          "type": "string"
        },
        "comments": {
          "description": "Config comments.",
          "type": "string"
        },
        "configText": {
          "description": "Config.",
          "type": "string"
        },
        "updateConfigText": {
          "description": "Config text should be updated(true/false).",
          "type": "boolean"
        },
        "UserName": {
          "description": "Who requested the verb.",
          "type": "string"
        }
      }
    },
    "CirrusConfigArchiveCloneConfigRequest": {
      "required": [
        "parentConfigID",
        "title",
        "comments",
        "configText"
      ],
      "type": "object",
      "properties": {
        "parentConfigID": {
          "format": "uuid",
          "description": "Parent Config ID",
          "type": "string"
        },
        "title": {
          "description": "Config title",
          "type": "string"
        },
        "comments": {
          "description": "Config comments.",
          "type": "string"
        },
        "configText": {
          "description": "Config",
          "type": "string"
        }
      }
    },
    "CirrusConfigArchiveImportConfigRequest": {
      "required": [
        "nodeId",
        "title",
        "comments",
        "configText"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "format": "uuid",
          "description": "NCM node ID.",
          "type": "string"
        },
        "title": {
          "description": "The title of a config.",
          "type": "string"
        },
        "comments": {
          "description": "The comments of a config.",
          "type": "string"
        },
        "configText": {
          "description": "Config as text.",
          "type": "string"
        }
      }
    },
    "CirrusConfigArchiveImportBinaryConfigRequest": {
      "required": [
        "nodeId",
        "title",
        "comments",
        "binaryConfig"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "format": "uuid",
          "description": "NCM node ID.",
          "type": "string"
        },
        "title": {
          "description": "The title of a config.",
          "type": "string"
        },
        "comments": {
          "description": "The comments of a config.",
          "type": "string"
        },
        "binaryConfig": {
          "description": "Config as binary.",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "CirrusConfigArchiveSetClearBaselineRequest": {
      "required": [
        "ConfigIds"
      ],
      "type": "object",
      "properties": {
        "ConfigIds": {
          "description": "List of config IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "CirrusConfigArchiveValidateBinaryConfigStorageRequest": {
      "required": [
        "path",
        "networkShareUserName",
        "networkSharePassword"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "Path to the storage.",
          "type": "string"
        },
        "networkShareUserName": {
          "description": "Username to the network.",
          "type": "string"
        },
        "networkSharePassword": {
          "description": "Password to the network.",
          "type": "string"
        }
      }
    },
    "CirrusConfigArchiveGetInterfaceConfigSnippetsRequest": {
      "required": [
        "coreNodeId"
      ],
      "type": "object",
      "properties": {
        "coreNodeId": {
          "description": "The ID of the core node.",
          "type": "number"
        }
      }
    },
    "CirrusSnippetArchiveAddSnippetRequest": {
      "required": [
        "title",
        "config",
        "comments"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "Config title. Full type: System.String.",
          "type": "string"
        },
        "config": {
          "description": "Config. Full type: System.String.",
          "type": "string"
        },
        "comments": {
          "description": "Comments. Full type: System.String.",
          "type": "string"
        }
      }
    },
    "CirrusSnippetArchiveDeleteSnippetRequest": {
      "required": [
        "snippetId"
      ],
      "type": "object",
      "properties": {
        "snippetId": {
          "format": "uuid",
          "description": "Snippet id. Full type: System.Guid.",
          "type": "string"
        }
      }
    },
    "CirrusSnippetArchiveUpdateSnippetRequest": {
      "required": [
        "snippetId",
        "title",
        "config",
        "comments"
      ],
      "type": "object",
      "properties": {
        "snippetId": {
          "format": "uuid",
          "description": "Snippet id. Full type: System.Guid.",
          "type": "string"
        },
        "title": {
          "description": "Config title. Full type: System.String.",
          "type": "string"
        },
        "config": {
          "description": "Config. Full type: System.String.",
          "type": "string"
        },
        "comments": {
          "description": "Comments. Full type: System.String.",
          "type": "string"
        }
      }
    },
    "CirrusNodesAddNodeRequest": {
      "required": [
        "node"
      ],
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMNode"
        }
      }
    },
    "CirrusNodesAddNodesRequest": {
      "required": [
        "coreNodeIds"
      ],
      "type": "object",
      "properties": {
        "coreNodeIds": {
          "description": "A collection (List<int>) of Orion NodeIDs to add to NCM.",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "CirrusNodesAddNodeToNCMRequest": {
      "required": [
        "coreNodeId"
      ],
      "type": "object",
      "properties": {
        "coreNodeId": {
          "description": "The Orion NodeID (int) for the node to add.",
          "type": "number"
        }
      }
    },
    "CirrusNodesRemoveNodeRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "format": "uuid",
          "description": "The NCM NodeID (Guid) for the node to remove.",
          "type": "string"
        }
      }
    },
    "CirrusNodesRemoveNodesRequest": {
      "required": [
        "ncmNodeIds"
      ],
      "type": "object",
      "properties": {
        "ncmNodeIds": {
          "description": "A collection (List<Guid>) of NCM NodeIDs to remove.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "CirrusNodesUpdateNodeRequest": {
      "required": [
        "node"
      ],
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMNode"
        }
      }
    },
    "CirrusNodesGetNodeRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "format": "uuid",
          "description": "The NCM NodeID (Guid) for the node to read.",
          "type": "string"
        }
      }
    },
    "CirrusNodesCheckAPLicenceRequest": {
      "type": "object"
    },
    "CirrusNodesDeleteOverLicenseNodesRequest": {
      "type": "object"
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.DeviceTemplate": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Author": {
          "type": "string"
        },
        "SystemOID": {
          "type": "string"
        },
        "SystemDescriptionRegex": {
          "type": "string"
        },
        "TemplateXml": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "UseForAutoDetect": {
          "type": "boolean"
        },
        "AutoDetectType": {
          "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.eAutoDetectType"
        },
        "IsDefault": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.eAutoDetectType": {
      "enum": [
        "BySystemOid",
        "BySystemDescription"
      ],
      "type": "string"
    },
    "CirrusNodesValidateLoginRequest": {
      "required": [
        "engineId",
        "node",
        "ipAddress",
        "deviceTemplate"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "description": "The Orion poller ID.",
          "type": "number"
        },
        "node": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.NCMNode"
        },
        "ipAddress": {
          "description": "IP address of the device.",
          "type": "string"
        },
        "deviceTemplate": {
          "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.DeviceTemplate"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.LoginValidationResults": {
      "type": "object",
      "properties": {
        "ValidationResult": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eLoginResults"
        },
        "DeviceOutput": {
          "type": "string"
        },
        "LoginMessage": {
          "type": "string"
        },
        "ConnectionProfileId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.eLoginResults": {
      "enum": [
        "Success",
        "Fail"
      ],
      "type": "string"
    },
    "CirrusNodesGetConnectionProfileRequest": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Connection profile ID.",
          "type": "number"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.ConnectionProfile": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "ConnectionData": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Transfer.TransferConnectionData"
        },
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "EnableLevel": {
          "type": "string"
        },
        "EnablePassword": {
          "type": "string"
        },
        "ExecuteScriptProtocol": {
          "type": "string"
        },
        "RequestConfigProtocol": {
          "type": "string"
        },
        "TransferConfigProtocol": {
          "type": "string"
        },
        "TelnetPort": {
          "type": "number"
        },
        "SSHPort": {
          "type": "number"
        },
        "UseForAutoDetect": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.Transfer.TransferConnectionData": {
      "type": "object",
      "properties": {
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "EnableLevel": {
          "type": "string"
        },
        "EnablePassword": {
          "type": "string"
        },
        "TelnetPort": {
          "type": "number"
        },
        "SshPort": {
          "type": "number"
        }
      }
    },
    "CirrusNodesAddConnectionProfileRequest": {
      "required": [
        "profile"
      ],
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ConnectionProfile"
        }
      }
    },
    "CirrusNodesUpdateConnectionProfileRequest": {
      "required": [
        "profile"
      ],
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.ConnectionProfile"
        }
      }
    },
    "CirrusNodesDeleteConnectionProfileRequest": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Connection profile ID.",
          "type": "number"
        }
      }
    },
    "CirrusNodesGetAllConnectionProfilesRequest": {
      "type": "object"
    },
    "CirrusNodesAssignEOSEntryRequest": {
      "required": [
        "nodeIds",
        "endOfSupport",
        "endOfSales",
        "endOfSoftware",
        "entryId",
        "type",
        "version",
        "link",
        "comments",
        "replacementPartNumber"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "description": "List of NCM node IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "endOfSupport": {
          "format": "date-time",
          "description": "End of support date.",
          "type": "string"
        },
        "endOfSales": {
          "format": "date-time",
          "description": "End of sales date.",
          "type": "string"
        },
        "endOfSoftware": {
          "format": "date-time",
          "description": "End of software date.",
          "type": "string"
        },
        "entryId": {
          "format": "uuid",
          "description": "EOS entry ID.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eEoSType"
        },
        "version": {
          "description": "EOS version.",
          "type": "number"
        },
        "link": {
          "description": "EOS link.",
          "type": "string"
        },
        "comments": {
          "description": "EOS comments.",
          "type": "string"
        },
        "replacementPartNumber": {
          "description": "EOS replacement part number.",
          "type": "string"
        }
      }
    },
    "CirrusNodesDeleteEOSDataRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "description": "List of NCM node IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "CirrusNodesChangeEOSTypeRequest": {
      "required": [
        "nodeIds",
        "type"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "description": "List of NCM node IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eEoSType"
        }
      }
    },
    "CirrusNodesGetPageableEosDataTableRequest": {
      "required": [
        "nodeIds",
        "startRowNumber",
        "pageSize"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "description": "List of NCM node IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "startRowNumber": {
          "description": "Starting row number.",
          "type": "number"
        },
        "pageSize": {
          "description": "Page size.",
          "type": "number"
        }
      }
    },
    "CirrusNodesGetPageableEosRowCountRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "description": "List of NCM node IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "SolarWinds.SecObs.Common.Models.Vulnerability.NodeCveState": {
      "enum": [
        "PotentialVulnerability",
        "ConfirmedVulnerability",
        "Remediated",
        "NotApplicable",
        "RemediationPlanned",
        "Waiver"
      ],
      "type": "string"
    },
    "CirrusNodesChangeVulnerabilityStateForNodesRequest": {
      "required": [
        "nodeIds",
        "entryId",
        "state",
        "comment"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "description": "List of Orion node IDs.",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "entryId": {
          "description": "Vulnerabilty entry ID.",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.NodeCveState"
        },
        "comment": {
          "description": "Comments about the change.",
          "type": "string"
        }
      }
    },
    "CirrusNodesChangeVulnerabilityStateForAllNodesRequest": {
      "required": [
        "entryId",
        "state",
        "comment"
      ],
      "type": "object",
      "properties": {
        "entryId": {
          "description": "Vulnerabilty entry ID.",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.NodeCveState"
        },
        "comment": {
          "description": "Comments about the change.",
          "type": "string"
        }
      }
    },
    "CirrusNodesDeleteAllVulnerabilityDataRequest": {
      "type": "object"
    },
    "CirrusNodesParseMacrosRequest": {
      "required": [
        "nodeId",
        "macro"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "format": "uuid",
          "description": "Optional NCM node ID.",
          "type": "string"
        },
        "macro": {
          "description": "Macro to process.",
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.ConfigComparison.ComparisonType": {
      "enum": [
        "RunningToStartup",
        "RunningToLastBaseline",
        "MostRecentToLastOfAnyType",
        "MostRecentToLastOfTheSameType"
      ],
      "type": "string"
    },
    "CirrusNodesExecuteConfigChangeReportActionRequest": {
      "required": [
        "nodeId",
        "comparisonType"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "format": "uuid",
          "description": "NCM node ID.",
          "type": "string"
        },
        "comparisonType": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.ConfigComparison.ComparisonType"
        }
      }
    },
    "SolarWinds.NCM.Contracts.Compliance.PolicyRule": {
      "type": "object",
      "properties": {
        "MultiLineRulePatterns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.MultiLineRulePattern"
          }
        },
        "RuleId": {
          "format": "uuid",
          "type": "string"
        },
        "RuleName": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "Grouping": {
          "type": "string"
        },
        "RemediateScript": {
          "type": "string"
        },
        "ConfigBlockStart": {
          "type": "string"
        },
        "ConfigBlockEnd": {
          "type": "string"
        },
        "ConfigBlockPatternType": {
          "type": "string"
        },
        "ConfigBlockMustExist": {
          "type": "boolean"
        },
        "PatternType": {
          "type": "string"
        },
        "PatternMustExist": {
          "type": "boolean"
        },
        "AdvancedMode": {
          "type": "boolean"
        },
        "ErrorLevel": {
          "type": "number"
        },
        "SimplePatternText": {
          "type": "string"
        },
        "ExecuteScriptAutomatically": {
          "type": "boolean"
        },
        "Owner": {
          "type": "string"
        },
        "RemediateScriptType": {
          "type": "string"
        },
        "IsConfigBlockPatternRegEx": {
          "type": "boolean"
        },
        "ExecuteRemediationScriptPerBlock": {
          "type": "boolean"
        },
        "ExecuteScriptInConfigMode": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.Compliance.MultiLineRulePattern": {
      "type": "object",
      "properties": {
        "EndBracket": {
          "type": "string"
        },
        "PatternType": {
          "type": "string"
        },
        "Condition": {
          "type": "string"
        },
        "Pattern": {
          "type": "string"
        },
        "Criteria": {
          "type": "boolean"
        },
        "BeginBracket": {
          "type": "string"
        },
        "RuleId": {
          "format": "uuid",
          "type": "string"
        },
        "PatternId": {
          "format": "uuid",
          "type": "string"
        },
        "IsRegEx": {
          "type": "boolean"
        },
        "FoundMatch": {
          "type": "boolean"
        }
      }
    },
    "CirrusPolicyReportsTestRuleRequest": {
      "required": [
        "policyRule",
        "config"
      ],
      "type": "object",
      "properties": {
        "policyRule": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.PolicyRule"
        },
        "config": {
          "description": "Device configuration to test on. Please note - Macros parsing in test policies is unavailable for pasted configs.",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsTestRuleOnBackedUpConfigRequest": {
      "required": [
        "policyRule",
        "configId"
      ],
      "type": "object",
      "properties": {
        "policyRule": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.PolicyRule"
        },
        "configId": {
          "format": "uuid",
          "description": "Device configuration ID to test on.",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsGetPolicyReportRequest": {
      "required": [
        "reportId",
        "exportFlag"
      ],
      "type": "object",
      "properties": {
        "reportId": {
          "format": "uuid",
          "description": "The policy report ID.",
          "type": "string"
        },
        "exportFlag": {
          "description": "If 'true' then additional data about policies and rules will be downloaded.",
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.Compliance.PolicyReport": {
      "type": "object",
      "properties": {
        "ID": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "ShowSummaryFlag": {
          "type": "boolean"
        },
        "ShowRulesWithoutViolationFlag": {
          "type": "boolean"
        },
        "AssignedPoliciesList": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "AssignedPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.Policy"
          }
        },
        "ReportStatus": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.ReportStatus"
        }
      }
    },
    "SolarWinds.NCM.Contracts.Compliance.Policy": {
      "type": "object",
      "properties": {
        "NodeSelectionCriterias": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.SelectionCriterias"
        },
        "NodeSelectionString": {
          "type": "string"
        },
        "PolicyId": {
          "format": "uuid",
          "type": "string"
        },
        "ConfigTypes": {
          "type": "string"
        },
        "AssignedRulesList": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "AssignedPolicyRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.PolicyRule"
          }
        },
        "Grouping": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "PolicyName": {
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.SelectionCriterias": {
      "type": "object",
      "properties": {
        "WebSelectionCriterias": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.WebSelectionCriteria"
          }
        },
        "AssignedNodesList": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "AssignedNodesDesktopSQL": {
          "type": "string"
        },
        "SelectionCriteriaType": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eCriteriaType"
        }
      }
    },
    "SolarWinds.NCM.Contracts.Compliance.ReportStatus": {
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string"
    },
    "CirrusPolicyReportsUpdatePolicyReportRequest": {
      "required": [
        "report"
      ],
      "type": "object",
      "properties": {
        "report": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.PolicyReport"
        }
      }
    },
    "CirrusPolicyReportsAddPolicyReportRequest": {
      "required": [
        "report",
        "importFlag"
      ],
      "type": "object",
      "properties": {
        "report": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.PolicyReport"
        },
        "importFlag": {
          "description": "If 'true' then additional data about policies and rules will be saved.",
          "type": "boolean"
        }
      }
    },
    "CirrusPolicyReportsDeletePolicyReportsRequest": {
      "required": [
        "policyReportIds",
        "deleteChildren"
      ],
      "type": "object",
      "properties": {
        "policyReportIds": {
          "description": "Policy report IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "deleteChildren": {
          "description": "If 'true' then assigned policies and rules will be deleted.",
          "type": "boolean"
        }
      }
    },
    "CirrusPolicyReportsGetPolicyRequest": {
      "required": [
        "policyId",
        "exportFlag"
      ],
      "type": "object",
      "properties": {
        "policyId": {
          "format": "uuid",
          "description": "The policy ID.",
          "type": "string"
        },
        "exportFlag": {
          "description": "If 'true' then additional data about rules will be downloaded.",
          "type": "boolean"
        }
      }
    },
    "CirrusPolicyReportsUpdatePolicyRequest": {
      "required": [
        "policy"
      ],
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.Policy"
        }
      }
    },
    "CirrusPolicyReportsAddPolicyRequest": {
      "required": [
        "policy",
        "importFlag"
      ],
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.Policy"
        },
        "importFlag": {
          "description": "If 'true' then additional data about rules will be saved.",
          "type": "boolean"
        }
      }
    },
    "CirrusPolicyReportsDeletePoliciesRequest": {
      "required": [
        "policyIds",
        "deleteChildren"
      ],
      "type": "object",
      "properties": {
        "policyIds": {
          "description": "Policy IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "deleteChildren": {
          "description": "If 'true' then assigned rules will be deleted.",
          "type": "boolean"
        }
      }
    },
    "CirrusPolicyReportsGetPolicyRuleRequest": {
      "required": [
        "ruleId"
      ],
      "type": "object",
      "properties": {
        "ruleId": {
          "format": "uuid",
          "description": "The rule ID.",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsUpdatePolicyRuleRequest": {
      "required": [
        "rule"
      ],
      "type": "object",
      "properties": {
        "rule": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.PolicyRule"
        }
      }
    },
    "CirrusPolicyReportsAddPolicyRuleRequest": {
      "required": [
        "rule"
      ],
      "type": "object",
      "properties": {
        "rule": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.PolicyRule"
        }
      }
    },
    "CirrusPolicyReportsDeletePolicyRulesRequest": {
      "required": [
        "ruleIds"
      ],
      "type": "object",
      "properties": {
        "ruleIds": {
          "description": "Rule IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "CirrusPolicyReportsStartCachingRequest": {
      "type": "object",
      "properties": {
        "selectedReportsIds": {
          "description": "Optional policy report IDs. If empty array or null provided then it processes every report.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "CirrusPolicyReportsUpdateReportStatusRequest": {
      "required": [
        "status",
        "selectedReportsIds"
      ],
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Compliance.ReportStatus"
        },
        "selectedReportsIds": {
          "description": "Rule IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "CirrusPolicyReportsGetPagablePoliciesListRequest": {
      "required": [
        "pageSize",
        "startRowNumber",
        "sortColumn",
        "sortDirection",
        "groupByColumn",
        "groupByValue",
        "searchValue"
      ],
      "type": "object",
      "properties": {
        "pageSize": {
          "description": "Page size.",
          "type": "number"
        },
        "startRowNumber": {
          "description": "Starting row number.",
          "type": "number"
        },
        "sortColumn": {
          "description": "Column name to sort on.",
          "type": "string"
        },
        "sortDirection": {
          "description": "Sort direction. Values: * ASC; * DESC",
          "type": "string"
        },
        "groupByColumn": {
          "description": "Used for filtering. General formula: {groupByColumn}='{groupByValue}'.",
          "type": "string"
        },
        "groupByValue": {
          "description": "Value or macro used to filtering. Macro values: * ${IS_EMPTY} - Then {groupByColumn}=''; * ${IS_NULL} - Then {groupByColumn} IS NULL",
          "type": "string"
        },
        "searchValue": {
          "description": "Value used for searching in policy names or folders.",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsGetPoliciesRowCountRequest": {
      "required": [
        "groupByColumn",
        "groupByValue",
        "searchValue"
      ],
      "type": "object",
      "properties": {
        "groupByColumn": {
          "description": "Used for filtering. General formula: {groupByColumn}='{groupByValue}'.",
          "type": "string"
        },
        "groupByValue": {
          "description": "Value or macro used to filtering. Macro values: * ${IS_EMPTY} - Then {groupByColumn}=''; * ${IS_NULL} - Then {groupByColumn} IS NULL",
          "type": "string"
        },
        "searchValue": {
          "description": "Value used for searching in policy names or folders.",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsGetPagablePolicyRulesListRequest": {
      "required": [
        "pageSize",
        "startRowNumber",
        "sortColumn",
        "sortDirection",
        "groupByColumn",
        "groupByValue",
        "searchValue"
      ],
      "type": "object",
      "properties": {
        "pageSize": {
          "description": "Page size.",
          "type": "number"
        },
        "startRowNumber": {
          "description": "Starting row number.",
          "type": "number"
        },
        "sortColumn": {
          "description": "Column name to sort on.",
          "type": "string"
        },
        "sortDirection": {
          "description": "Sort direction. Values: * ASC; * DESC",
          "type": "string"
        },
        "groupByColumn": {
          "description": "Used for filtering. General formula: {groupByColumn}='{groupByValue}'.",
          "type": "string"
        },
        "groupByValue": {
          "description": "Value or macro used to filtering. Macro values: * ${IS_EMPTY} - Then {groupByColumn}=''; * ${IS_NULL} - Then {groupByColumn} IS NULL",
          "type": "string"
        },
        "searchValue": {
          "description": "Value used for searching in rule names or folders.",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsGetPolicyRulesRowCountRequest": {
      "required": [
        "groupByColumn",
        "groupByValue",
        "searchValue"
      ],
      "type": "object",
      "properties": {
        "groupByColumn": {
          "description": "Used for filtering. General formula: {groupByColumn}='{groupByValue}'.",
          "type": "string"
        },
        "groupByValue": {
          "description": "Value or macro used to filtering. Macro values: * ${IS_EMPTY} - Then {groupByColumn}=''; * ${IS_NULL} - Then {groupByColumn} IS NULL",
          "type": "string"
        },
        "searchValue": {
          "description": "Value used for searching in rule names or folders.",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsGetComplianceDataTableRequest": {
      "required": [
        "reportId",
        "includePolicies"
      ],
      "type": "object",
      "properties": {
        "reportId": {
          "format": "uuid",
          "description": "The report ID.",
          "type": "string"
        },
        "includePolicies": {
          "description": "Indicates if data about policies should be included.",
          "type": "boolean"
        }
      }
    },
    "CirrusPolicyReportsGetComplianceColumnsInJSONRequest": {
      "required": [
        "reportId"
      ],
      "type": "object",
      "properties": {
        "reportId": {
          "format": "uuid",
          "description": "The report ID.",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsGetPoliciesRowNumberRequest": {
      "required": [
        "policyId",
        "orderByColumn",
        "orderByDirection"
      ],
      "type": "object",
      "properties": {
        "policyId": {
          "format": "uuid",
          "description": "The policy ID.",
          "type": "string"
        },
        "orderByColumn": {
          "description": "Column name to sort on.",
          "type": "string"
        },
        "orderByDirection": {
          "description": "Sort direction. Values: * ASC; * DESC",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsGetPolicyRulesRowNumberRequest": {
      "required": [
        "ruleId",
        "orderByColumn",
        "orderByDirection"
      ],
      "type": "object",
      "properties": {
        "ruleId": {
          "format": "uuid",
          "description": "The policy rule ID.",
          "type": "string"
        },
        "orderByColumn": {
          "description": "Column name to sort on.",
          "type": "string"
        },
        "orderByDirection": {
          "description": "Sort direction. Values: * ASC; * DESC",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsGetPolicyReportsRowNumberRequest": {
      "required": [
        "reportId",
        "orderByColumn",
        "orderByDirection"
      ],
      "type": "object",
      "properties": {
        "reportId": {
          "format": "uuid",
          "description": "The policy report ID.",
          "type": "string"
        },
        "orderByColumn": {
          "description": "Column name to sort on.",
          "type": "string"
        },
        "orderByDirection": {
          "description": "Sort direction. Values: * ASC; * DESC",
          "type": "string"
        }
      }
    },
    "CirrusPolicyReportsGenerateRemediationScriptForNodesRequest": {
      "required": [
        "nodeIds",
        "reportId",
        "policyId",
        "ruleId",
        "script"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "description": "NCM node IDs.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "reportId": {
          "format": "uuid",
          "description": "Compliance policy report ID.",
          "type": "string"
        },
        "policyId": {
          "format": "uuid",
          "description": "Compliance policy ID.",
          "type": "string"
        },
        "ruleId": {
          "format": "uuid",
          "description": "Compliance policy rule ID.",
          "type": "string"
        },
        "script": {
          "description": "Script template.",
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.Settings": {
      "enum": [
        "HideCommunityStrings",
        "HideUsernames",
        "ConnectivityLevel",
        "IncludeInInventory",
        "ConcurrentNodes",
        "ExtendedVLANsInventory",
        "DisableInventoryLookup",
        "SMTPServer",
        "SMTPPort",
        "SMTPSSLPort",
        "SMTPUseAuth",
        "SMTPAuthPassword",
        "SMTPAuthUserName",
        "SMTPUseSSL",
        "SMTPTimeout",
        "ConfigTypes",
        "ConcurrentDownloads",
        "SNMPConfigTransferTimeout",
        "MinimumConfigLength",
        "ComparisonOutputWidth",
        "FullSideBySideComparison",
        "NumberOfLinesComparison",
        "NumberOfLines",
        "EnableConfigMirror",
        "KeepMultipleRevisions",
        "ConfigArchiveDirectory",
        "ConfigMirrorTemplate",
        "DefaultEmailFromName",
        "DefaultEmailReplyAddress",
        "DefaultEmailSubject",
        "DefaultEmailTo",
        "DefaultEmailCC",
        "DefaultEmailBCC",
        "ICMPTimeout",
        "ICMPData",
        "SNMPTimeout",
        "SNMPRetries",
        "TFTPAutoRetriveIP",
        "TFTPServerAddress",
        "TFTPRootDir",
        "UseThirdPartyTftpServer",
        "SCPAutoRetriveIP",
        "UseThirdPartySCPServer",
        "SCPServerAddress",
        "SCPRootDir",
        "SCPUserName",
        "SCPPassword",
        "GlobalUsername",
        "GlobalPassword",
        "GlobalEnableLevel",
        "GlobalEnablePassword",
        "GlobalTelnetPort",
        "GlobalSSHPort",
        "GlobalExecProtocol",
        "GlobalConfigRequestProtocol",
        "GlobalConfigTransferProtocol",
        "SortOnAllColumns",
        "SortOnSingleColumn",
        "EnableCache",
        "CachingTime",
        "RTNEnabled",
        "RTNUseUserDevice",
        "RTNIncludeNotification",
        "RTNLimitDownloadOperations",
        "RTNUserName",
        "RTNPassword",
        "RTNUserLevelName",
        "RTNUserLevelPassword",
        "RTNUserLevelEnableLevel",
        "RTNUserLevelEnablePassword",
        "RTNConfigType",
        "RTNLastConfig",
        "RTNBaselineConfig",
        "DisableRTNEmail",
        "RTNInHTMLFormat",
        "RTNWithDiffs",
        "RTNEmailFromName",
        "RTNEmailReplyAddress",
        "RTNEmailSubject",
        "RTNEmailTo",
        "RTNEmailCC",
        "RTNEmailBCC",
        "FTSIndexStatus",
        "FTSConfigScanPeriod",
        "FTSIndexingDelay",
        "FTSIsEnabled",
        "FTSIndexCatalogPath",
        "JobNotification",
        "IsFallBackEnabled",
        "NCMEosSchedulingEnabled",
        "NCMEosStartTime",
        "ComplianceMgmtOnlyForAdmins",
        "NodesSyncID",
        "NodesSyncID71",
        "NetworkShareUserName",
        "NetworkShareUserPassword",
        "NetworkShareUseImpersonation",
        "NetworkShareUseImpersonationPerEngine",
        "VulnAlertScoreThreshold",
        "BypassApprovalForAutoRemediationScript",
        "PolicyViolationLevel1",
        "PolicyViolationLevel2",
        "PolicyViolationLevel3",
        "NCMJobHangTimeout",
        "NCMJobSchedulingTimeout",
        "NCMJobRunJobTimeout",
        "FirmwareStorageLocation",
        "FirmwareNetworkShareUserName",
        "FirmwareNetworkShareUserPassword",
        "MaxNumberOfFirmwareOperations",
        "BinaryConfigStorageFolder",
        "BinaryConfigStorageUserName",
        "BinaryConfigStoragePassword",
        "SkipAddingNodes",
        "AclDataCollectorCompleted",
        "AclNexusDataCollectorCompleted",
        "DeviceTemplatesMigrationCompleted",
        "IsLegacyBaselineMigrated",
        "IsBinaryConfigHashUpdated",
        "PaloAltoXmlTemplateMigrationTimeStamp",
        "PaloAltoXmlTemplateMigrationProcessed",
        "PaloAltoDataCollectorCompleted",
        "EnableNewNcmConfigSummary",
        "ConfigChangeApprovalEnabled",
        "ApprovalMode",
        "DbMaintJobOneTimeInventoryJobsMigrated",
        "DbMaintJobAuditMigrated"
      ],
      "type": "string"
    },
    "CirrusSettingsGetSettingRequest": {
      "required": [
        "settingName",
        "defaultValue",
        "engineId"
      ],
      "type": "object",
      "properties": {
        "settingName": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.Settings"
        },
        "defaultValue": {
          "description": "Default value to search in case settingName is not being found.",
          "type": "string"
        },
        "engineId": {
          "description": "ID of the machine where the node is assigned for polling.",
          "type": "number"
        }
      }
    },
    "CirrusSettingsSaveSettingRequest": {
      "required": [
        "settingName",
        "settingValue",
        "engineId"
      ],
      "type": "object",
      "properties": {
        "settingName": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.Settings"
        },
        "settingValue": {
          "description": "Setting value.",
          "type": "string"
        },
        "engineId": {
          "description": "ID of the machine where the node is assigned for polling.",
          "type": "number"
        }
      }
    },
    "CirrusSettingsCryptUsernamesRequest": {
      "type": "object"
    },
    "CirrusSettingsCryptPasswordsRequest": {
      "type": "object"
    },
    "CirrusSettingsSaveRegExPatternRequest": {
      "required": [
        "regExId",
        "title",
        "enabled",
        "regExPattern",
        "comment",
        "isBlock",
        "blockEndRegEx"
      ],
      "type": "object",
      "properties": {
        "regExId": {
          "format": "uuid",
          "description": "RegEx id.",
          "type": "string"
        },
        "title": {
          "description": "RegEx title.",
          "type": "string"
        },
        "enabled": {
          "description": "Is RegEx enabled(true/false).",
          "type": "boolean"
        },
        "regExPattern": {
          "description": "RegEx pattern(or start of the block if isBlock is enabled).",
          "type": "string"
        },
        "comment": {
          "description": "RegEx comment.",
          "type": "string"
        },
        "isBlock": {
          "description": "Matching using blocks enabled(skips the block while comparing).",
          "type": "boolean"
        },
        "blockEndRegEx": {
          "description": "The end of the block.",
          "type": "string"
        }
      }
    },
    "CirrusSettingsEnableOrDisableRegExPatternsRequest": {
      "required": [
        "regExIDs",
        "enableOrDisable"
      ],
      "type": "object",
      "properties": {
        "regExIDs": {
          "description": "List of ReGex ids. Full type: System.Guid[].",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "enableOrDisable": {
          "description": "True - enables ReGex, False - disables ReGex. Full type: System.Boolean.",
          "type": "boolean"
        }
      }
    },
    "CirrusSettingsDeleteRegExPatternsRequest": {
      "required": [
        "regExIDs"
      ],
      "type": "object",
      "properties": {
        "regExIDs": {
          "description": "List of ReGex ids. Full type: System.Guid[].",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "CirrusSettingsGetRegExByIdRequest": {
      "required": [
        "regexId"
      ],
      "type": "object",
      "properties": {
        "regexId": {
          "format": "uuid",
          "description": "Id of a RegEx.",
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.ConfigComparison.RegEx": {
      "type": "object",
      "properties": {
        "RegExId": {
          "format": "uuid",
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "RegExText": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "IsBlock": {
          "type": "boolean"
        },
        "BlockEndRegEx": {
          "type": "string"
        }
      }
    },
    "CirrusSettingsGetRegExesRequest": {
      "type": "object"
    },
    "CirrusSettingsValidateADUserRequest": {
      "required": [
        "user",
        "password"
      ],
      "type": "object",
      "properties": {
        "user": {
          "description": "Username.",
          "type": "string"
        },
        "password": {
          "description": "Password.",
          "type": "string"
        }
      }
    },
    "CirrusSettingsValidatePathWithoutImpersonationRequest": {
      "required": [
        "path"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "Path.",
          "type": "string"
        }
      }
    },
    "CirrusSettingsGetDefaultPathRequest": {
      "type": "object"
    },
    "CirrusSettingsGetCoreInstallPathRequest": {
      "type": "object"
    },
    "CirrusSettingsGetAppDataPathRequest": {
      "type": "object"
    },
    "CirrusSettingsSetCustomMacrosRequest": {
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Macro name.",
          "type": "string"
        },
        "value": {
          "description": "Macro value.",
          "type": "string"
        }
      }
    },
    "CirrusSettingsDeleteCustomMacrosRequest": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Macro name",
          "type": "string"
        }
      }
    },
    "CirrusSettingsSetGlobalMacroForAllNodesRequest": {
      "required": [
        "field",
        "value"
      ],
      "type": "object",
      "properties": {
        "field": {
          "description": "Field name.",
          "type": "string"
        },
        "value": {
          "description": "Field value.",
          "type": "string"
        }
      }
    },
    "CirrusSettingsSaveUserLevelLoginCredsRequest": {
      "required": [
        "accountId",
        "userName",
        "password",
        "enableLevel",
        "enablePassword"
      ],
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Account id.",
          "type": "string"
        },
        "userName": {
          "description": "Username.",
          "type": "string"
        },
        "password": {
          "description": "Password.",
          "type": "string"
        },
        "enableLevel": {
          "description": "Enable level.",
          "type": "string"
        },
        "enablePassword": {
          "description": "Enable password.",
          "type": "string"
        }
      }
    },
    "CirrusSettingsDecryptDataRequest": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "data": {
          "description": "Data to decrypt. Full type: System.String.",
          "type": "string"
        }
      }
    },
    "CirrusSettingsNetworkingSelfTestRequest": {
      "type": "object"
    },
    "SolarWinds.NCM.Contracts.Diagnostics.ConnectionTestHostResults": {
      "type": "object",
      "properties": {
        "Host": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Diagnostics.TestHost"
        },
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.Diagnostics.ConnectionTestResults"
          }
        }
      }
    },
    "SolarWinds.NCM.Contracts.Diagnostics.TestHost": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Ip": {
          "type": "string"
        },
        "Id": {
          "type": "number"
        }
      }
    },
    "SolarWinds.NCM.Contracts.Diagnostics.ConnectionTestResults": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.Diagnostics.ConnectionTestResult"
          }
        }
      }
    },
    "SolarWinds.NCM.Contracts.Diagnostics.ConnectionTestResult": {
      "type": "object",
      "properties": {
        "TargetHost": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.Diagnostics.TestHost"
        },
        "IsSuccess": {
          "type": "boolean"
        },
        "Error": {
          "type": "string"
        }
      }
    },
    "NCMEosBeginRefreshAllRequest": {
      "type": "object"
    },
    "NCMEosRefreshNowRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "description": "Array of NCM NodeIDs (Guid) of nodes on which to start refreshing data",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "NCMEosIsRefreshingAllRequest": {
      "type": "object"
    },
    "NCMEosInitScheduleRequest": {
      "type": "object"
    },
    "NCMFirmwareStorageValidateFirmwareStorageRequest": {
      "required": [
        "path",
        "networkShareUserName",
        "networkSharePassword"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "Path to firmware images storage. ",
          "type": "string"
        },
        "networkShareUserName": {
          "description": "Username to network share needed to access provided path",
          "type": "string"
        },
        "networkSharePassword": {
          "description": "Password to network share needed to access provided path",
          "type": "string"
        }
      }
    },
    "NCMFirmwareStorageDeleteFirmwareImagesRequest": {
      "required": [
        "imageIds"
      ],
      "type": "object",
      "properties": {
        "imageIds": {
          "description": "IDs of images to delete",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "NCMFirmwareStorageUpdateFirmwareImageRequest": {
      "required": [
        "imageId",
        "description",
        "machineTypes"
      ],
      "type": "object",
      "properties": {
        "imageId": {
          "description": "ID of image to update",
          "type": "number"
        },
        "description": {
          "description": "image description",
          "type": "string"
        },
        "machineTypes": {
          "description": "List of machine types attached to this image",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NCMFirmwareDefinitionsGetFirmwareDefinitionRequest": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of firmware definition to get data from.",
          "type": "number"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.FirmwareDefinition": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "LastModified": {
          "format": "date-time",
          "type": "string"
        },
        "Author": {
          "type": "string"
        },
        "Canned": {
          "type": "boolean"
        },
        "FirmwareImageID": {
          "type": "number"
        },
        "FirmwareImages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.FirmwareImage"
          }
        },
        "UpgradeFirmwareImageCommand": {
          "type": "string"
        },
        "TransferProtocol": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eCommandProtocol"
        },
        "SaveConfigToNVRAM": {
          "type": "boolean"
        },
        "BackupRunningAndStartupConfigsBeforeUpgrade": {
          "type": "boolean"
        },
        "BackupRunningAndStartupConfigsAfterUpgrade": {
          "type": "boolean"
        },
        "UpdateBootVariable": {
          "type": "boolean"
        },
        "Reboot": {
          "type": "boolean"
        },
        "RebootRequired": {
          "type": "boolean"
        },
        "NodeUpCheckDelayAfterReboot": {
          "type": "number"
        },
        "Unmanage": {
          "type": "boolean"
        },
        "VerifyUploadedImageIntegrity": {
          "type": "boolean"
        },
        "VerifyBackedUpImageIntegrity": {
          "type": "boolean"
        },
        "VerifyUpgrade": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.FirmwareImage": {
      "type": "object",
      "properties": {
        "ImageType": {
          "type": "string"
        },
        "ImageId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.eCommandProtocol": {
      "enum": [
        "CommandProtocol_Telnet",
        "CommandProtocol_SSH1",
        "CommandProtocol_SNMP",
        "CommandProtocol_SSH2",
        "CommandProtocol_SSHAuto",
        "CommandProtocol_TFTP",
        "CommandProtocol_SCP"
      ],
      "type": "string"
    },
    "NCMFirmwareDefinitionsAddFirmwareDefinitionRequest": {
      "required": [
        "firmwareDefinition"
      ],
      "type": "object",
      "properties": {
        "firmwareDefinition": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.FirmwareDefinition"
        }
      }
    },
    "NCMFirmwareDefinitionsUpdateFirmwareDefinitionRequest": {
      "required": [
        "firmwareDefinition"
      ],
      "type": "object",
      "properties": {
        "firmwareDefinition": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.FirmwareDefinition"
        }
      }
    },
    "NCMFirmwareDefinitionsDeleteFirmwareDefinitionsRequest": {
      "required": [
        "ids"
      ],
      "type": "object",
      "properties": {
        "ids": {
          "description": "Array of ids of firmware definitions to delete.",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "NCMFirmwareOperationsPrepareFirmwareUpgradeRequest": {
      "required": [
        "coreNodeIds",
        "firmwareDefinitionId",
        "firmwareOperationName",
        "imagesToApply"
      ],
      "type": "object",
      "properties": {
        "coreNodeIds": {
          "description": "The Orion NodeIDs (int) of a nodes to perform upgrade on.",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "firmwareDefinitionId": {
          "description": "ID of firmware definition",
          "type": "number"
        },
        "firmwareOperationName": {
          "description": "Name of firmware operation",
          "type": "string"
        },
        "imagesToApply": {
          "description": "Firmware images to apply.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.FirmwareImage"
          }
        }
      }
    },
    "NCMFirmwareOperationsPrepareRollBackRequest": {
      "required": [
        "operationId"
      ],
      "type": "object",
      "properties": {
        "operationId": {
          "description": "ID of operation to prepare rollback for.",
          "type": "number"
        }
      }
    },
    "NCMFirmwareOperationsPrepareReExecuteFailedRequest": {
      "required": [
        "operationId"
      ],
      "type": "object",
      "properties": {
        "operationId": {
          "description": "ID of operation to prepare reexecute for.",
          "type": "number"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.UpgradeNodeOptions": {
      "type": "object",
      "properties": {
        "CoreNodeId": {
          "type": "number"
        },
        "FirmwareOperationID": {
          "type": "number"
        },
        "UserID": {
          "type": "string"
        },
        "Definition": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.FirmwareDefinition"
        },
        "BackupExistingImagePaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DeleteExistingImagePaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "UploadImagePath": {
          "type": "string"
        },
        "BackupExisingFirmwareImage": {
          "type": "boolean"
        },
        "DeleteExisingFirmwareImage": {
          "type": "boolean"
        },
        "UpdateConfigRegister": {
          "type": "boolean"
        },
        "ExpandUpgradeOptions": {
          "type": "boolean"
        },
        "State": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.eNodeUpgradeOperStatus"
        },
        "Order": {
          "type": "number"
        },
        "Confirmed": {
          "type": "boolean"
        },
        "BackupImages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Int32~"
          }
        },
        "RunningConfigIDBeforeUpgrade": {
          "format": "uuid",
          "type": "string"
        },
        "StartupConfigIDBeforeUpgrade": {
          "format": "uuid",
          "type": "string"
        },
        "RunningConfigIDAfterUpgrade": {
          "format": "uuid",
          "type": "string"
        },
        "StartupConfigIDAfterUpgrade": {
          "format": "uuid",
          "type": "string"
        },
        "IsRollBack": {
          "type": "boolean"
        },
        "IsReExecute": {
          "type": "boolean"
        },
        "RestoreConfigs": {
          "type": "boolean"
        },
        "StorageDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.FlashDevice"
          }
        },
        "IsError": {
          "type": "boolean"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "IsComplete": {
          "type": "boolean"
        },
        "BootPathList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IsLegacyUpgrade": {
          "type": "boolean"
        },
        "TicketID": {
          "format": "uuid",
          "type": "string"
        },
        "IsValidateLogin": {
          "type": "boolean"
        },
        "Caption": {
          "type": "string"
        },
        "IPAddress": {
          "type": "string"
        },
        "MachineType": {
          "type": "string"
        },
        "RebootStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "Script": {
          "type": "string"
        },
        "EngineInfo": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.PollingEngineInfo"
        },
        "SyncTransferEvent": {
          "$ref": "#/definitions/System.Threading.ManualResetEvent"
        },
        "ServerSubFolder": {
          "type": "string"
        },
        "UnableToDetectFreeSpace": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.eNodeUpgradeOperStatus": {
      "enum": [
        "Unknown",
        "CollectCurrentImageData",
        "CollectConfigRegisterData",
        "CollectFreeSpaceData",
        "CollectOtherData",
        "CompleteDataCollect",
        "StartUpgrade",
        "SaveConfigToNvRamBeforeUpgrade",
        "BackupRunningConfigBeforeUpgrade",
        "BackupStartupConfigBeforeUpgrade",
        "RestoreRunningConfigBeforeUpgrade",
        "RestoreStartupConfigBeforeUpgrade",
        "BackupExisitngFirmwareImage",
        "VerifyExistingFirmwareImage",
        "DeleteExisitngFirmwareImage",
        "UploadNewImage",
        "VerifyNewImage",
        "UpdateConfigRegister",
        "UpdateBootVariable",
        "Reboot",
        "RestoreRunningConfigAfterUpgrade",
        "RestoreStartupConfigAfterUpgrade",
        "BackupRunningConfigAfterUpgrade",
        "BackupStartupConfigAfterUpgrade",
        "CompareConfigsAfterUpgrade",
        "UpgradeComplete",
        "CollectBootPathListData",
        "VerifyUpgrade"
      ],
      "type": "string"
    },
    "System.Collections.Generic.KeyValuePair~System.String_System.Int32~": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "number"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.FlashDevice": {
      "type": "object",
      "properties": {
        "Index": {
          "type": "string"
        },
        "DeviceName": {
          "type": "string"
        },
        "FreeSpaceInBytes": {
          "type": "number"
        },
        "DeviceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.FlashFile"
          }
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.FlashFile": {
      "type": "object",
      "properties": {
        "Index": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "SizeInBytes": {
          "type": "number"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.PollingEngineInfo": {
      "type": "object",
      "properties": {
        "PollingEngineName": {
          "type": "string"
        },
        "PollingEngineId": {
          "type": "number"
        }
      }
    },
    "System.Threading.ManualResetEvent": {
      "type": "object",
      "properties": {
        "Handle": {
          "$ref": "#/definitions/System.IntPtr"
        },
        "SafeWaitHandle": {
          "$ref": "#/definitions/Microsoft.Win32.SafeHandles.SafeWaitHandle"
        }
      }
    },
    "System.IntPtr": {
      "type": "object",
      "properties": {
        "Size": {
          "type": "number"
        }
      }
    },
    "Microsoft.Win32.SafeHandles.SafeWaitHandle": {
      "type": "object",
      "properties": {
        "IsInvalid": {
          "type": "boolean"
        },
        "IsClosed": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.NCM.Contracts.InformationService.EmailSettings": {
      "type": "object",
      "properties": {
        "EmailResults": {
          "type": "boolean"
        },
        "EmailRecipient": {
          "type": "string"
        },
        "EmailCC": {
          "type": "string"
        },
        "EmailBCC": {
          "type": "string"
        },
        "EmailSubject": {
          "type": "string"
        },
        "EmailFrom": {
          "type": "string"
        },
        "EmailReplyAddress": {
          "type": "string"
        },
        "MessageBody": {
          "type": "string"
        },
        "IsHtmlMessage": {
          "type": "boolean"
        },
        "AttachmentFileName": {
          "type": "string"
        }
      }
    },
    "NCMFirmwareOperationsStartUpgradeRequest": {
      "required": [
        "operationId",
        "nodeOptions",
        "runAt",
        "emailSettings"
      ],
      "type": "object",
      "properties": {
        "operationId": {
          "description": "ID of operation to start.",
          "type": "number"
        },
        "nodeOptions": {
          "description": "Node options data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.UpgradeNodeOptions"
          }
        },
        "runAt": {
          "format": "date-time",
          "description": "DateTime when to start upgrade. If null is provided - upgrade is queued immediately",
          "type": "string"
        },
        "emailSettings": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.EmailSettings"
        }
      }
    },
    "NCMFirmwareOperationsCancelUpgradeRequest": {
      "required": [
        "operationIds"
      ],
      "type": "object",
      "properties": {
        "operationIds": {
          "description": "IDs of operations to cancel.",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "NCMFirmwareOperationsGenerateScriptPreviewRequest": {
      "required": [
        "nodeOptions"
      ],
      "type": "object",
      "properties": {
        "nodeOptions": {
          "$ref": "#/definitions/SolarWinds.NCM.Contracts.InformationService.UpgradeNodeOptions"
        }
      }
    },
    "NCMFirmwareOperationsDeleteFirmwareOperationsRequest": {
      "required": [
        "operationIds"
      ],
      "type": "object",
      "properties": {
        "operationIds": {
          "description": "IDs of operations to delete",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "NCMSwisEntityTemplatePingRequest": {
      "type": "object"
    },
    "NCMConfigTypesCreateCustomRequest": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Config type name.",
          "type": "string"
        }
      }
    },
    "SolarWinds.NCM.Contracts.ConfigTypes.ConfigType": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "IsCustom": {
          "type": "boolean"
        }
      }
    },
    "NCMConfigTypesDeleteCustomRequest": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the config type.",
          "type": "number"
        }
      }
    },
    "NCMConfigTypesUpdateCustomNameRequest": {
      "required": [
        "id",
        "newName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the config type.",
          "type": "number"
        },
        "newName": {
          "description": "New name for the config type.",
          "type": "string"
        }
      }
    },
    "CliCliSessionSettingsGetCurrentCliConnectionParametersRequest": {
      "type": "object"
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.CliConnectionData": {
      "type": "object",
      "properties": {
        "Authentication": {
          "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.CliAuthentications"
        },
        "LoginCredentials": {
          "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.CliCredentials"
        },
        "EncryptionMethod": {
          "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.CliEncryption"
        },
        "Protocol": {
          "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.CliProtocol"
        },
        "ProxyType": {
          "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.CliProxyTypes"
        },
        "Fips": {
          "type": "boolean"
        },
        "KeyForwarding": {
          "type": "boolean"
        },
        "ShowStdErrorMessages": {
          "type": "boolean"
        },
        "StripAnsi": {
          "type": "boolean"
        },
        "ForwardPort": {
          "type": "number"
        },
        "Port": {
          "type": "number"
        },
        "ProxyPort": {
          "type": "number"
        },
        "Timeout": {
          "type": "number"
        },
        "EncryptionList": {
          "type": "string"
        },
        "ExitSignal": {
          "type": "string"
        },
        "ForwardHost": {
          "type": "string"
        },
        "HMacList": {
          "type": "string"
        },
        "Hostname": {
          "type": "string"
        },
        "KeyExchangeList": {
          "type": "string"
        },
        "KeySignatureList": {
          "type": "string"
        },
        "ProxyHostname": {
          "type": "string"
        },
        "ProxyLogin": {
          "type": "string"
        },
        "TerminalType": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.CliAuthentications": {
      "enum": [
        "None",
        "Password",
        "PublicKey",
        "Both",
        "KeyboardInteractive"
      ],
      "type": "string"
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.CliCredentials": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.CliEncryption": {
      "enum": [
        "encAny",
        "encDES",
        "enc3DES",
        "encAES",
        "encBLOWFISH",
        "encAES128",
        "encAES192",
        "encAES256",
        "ChaCha20Poly1305"
      ],
      "type": "string"
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.CliProtocol": {
      "enum": [
        "Raw",
        "Telnet",
        "Ssh1",
        "Ssh2",
        "SshAuto",
        "Rlogin"
      ],
      "type": "string"
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.CliProxyTypes": {
      "enum": [
        "ProxyNone",
        "ProxySocks4",
        "ProxySocks5",
        "ProxyWEBStandard",
        "ProxyRelay",
        "ProxySocks4a",
        "ProxyWEBNtlmAuth"
      ],
      "type": "string"
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.CliTestConnectionData": {
      "type": "object",
      "properties": {
        "EngineId": {
          "type": "number"
        },
        "IsWeOnlyDo": {
          "type": "boolean"
        },
        "CliConnectionData": {
          "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.CliConnectionData"
        }
      }
    },
    "CliCliSessionSettingsGetCliConnectionTestResultRequest": {
      "required": [
        "cliTestConnectionData"
      ],
      "type": "object",
      "properties": {
        "cliTestConnectionData": {
          "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.CliTestConnectionData"
        }
      }
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.CliTestResult": {
      "type": "object",
      "properties": {
        "TestId": {
          "format": "uuid",
          "type": "string"
        },
        "Engine": {
          "$ref": "#/definitions/SolarWinds.Orion.Cli.Contracts.DataModel.TestEngineInfo"
        },
        "RemoteHost": {
          "type": "string"
        },
        "TestLog": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TestProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
          }
        },
        "IsError": {
          "type": "boolean"
        },
        "ErrorMessage": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Cli.Contracts.DataModel.TestEngineInfo": {
      "type": "object",
      "properties": {
        "EngineId": {
          "type": "number"
        },
        "EngineName": {
          "type": "string"
        },
        "EngineIpAddress": {
          "$ref": "#/definitions/System.Net.IPAddress"
        }
      }
    },
    "System.Net.IPAddress": {
      "type": "object",
      "properties": {
        "Address": {
          "type": "number"
        },
        "AddressFamily": {
          "$ref": "#/definitions/System.Net.Sockets.AddressFamily"
        },
        "ScopeId": {
          "type": "number"
        },
        "IsIPv6Multicast": {
          "type": "boolean"
        },
        "IsIPv6LinkLocal": {
          "type": "boolean"
        },
        "IsIPv6SiteLocal": {
          "type": "boolean"
        },
        "IsIPv6Teredo": {
          "type": "boolean"
        },
        "IsIPv4MappedToIPv6": {
          "type": "boolean"
        }
      }
    },
    "System.Net.Sockets.AddressFamily": {
      "enum": [
        "Unspecified",
        "Unix",
        "InterNetwork",
        "ImpLink",
        "Pup",
        "Chaos",
        "Ipx",
        "NS",
        "Iso",
        "Osi",
        "Ecma",
        "DataKit",
        "Ccitt",
        "Sna",
        "DecNet",
        "DataLink",
        "Lat",
        "HyperChannel",
        "AppleTalk",
        "NetBios",
        "VoiceView",
        "FireFox",
        "Banyan",
        "Atm",
        "InterNetworkV6",
        "Cluster",
        "Ieee12844",
        "Irda",
        "NetworkDesigners",
        "Max",
        "Unknown"
      ],
      "type": "string"
    },
    "SolarWinds.CloudMonitoring.Contract.Credentials.AwsCredentials": {
      "type": "object",
      "properties": {
        "AccessKeyId": {
          "type": "string"
        },
        "SecretAccessKey": {
          "type": "string"
        },
        "SecretAccessKeyChanged": {
          "type": "boolean"
        },
        "CredentialsId": {
          "type": "number"
        },
        "ID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Owner": {
          "type": "string"
        },
        "IsBroken": {
          "type": "boolean"
        }
      }
    },
    "OrionCloudAwsRegionsGetAwsRegionsRequest": {
      "required": [
        "credentials"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/SolarWinds.CloudMonitoring.Contract.Credentials.AwsCredentials"
        }
      }
    },
    "SolarWinds.CloudMonitoring.Common.Models.RegionsResult": {
      "type": "object",
      "properties": {
        "Regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.CloudMonitoring.Shared.Regions.Region"
          }
        },
        "Success": {
          "type": "boolean"
        },
        "ErrorMessage": {
          "type": "string"
        }
      }
    },
    "SolarWinds.CloudMonitoring.Shared.Regions.Region": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "SystemName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "AlternativeServiceUrl": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "CloudProvider": {
          "$ref": "#/definitions/SolarWinds.CloudMonitoring.Shared.Enums.CloudProvider"
        }
      }
    },
    "SolarWinds.CloudMonitoring.Shared.Enums.CloudProvider": {
      "enum": [
        "Aws",
        "Azure"
      ],
      "type": "string"
    },
    "SolarWinds.CloudMonitoring.Contract.Credentials.AzureCredentials": {
      "type": "object",
      "properties": {
        "SubscriptionId": {
          "type": "string"
        },
        "TenantId": {
          "type": "string"
        },
        "ClientId": {
          "type": "string"
        },
        "ApplicationSecretKey": {
          "type": "string"
        },
        "ApplicationSecretKeyChanged": {
          "type": "boolean"
        },
        "CredentialsId": {
          "type": "number"
        },
        "ID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Owner": {
          "type": "string"
        },
        "IsBroken": {
          "type": "boolean"
        }
      }
    },
    "OrionCloudAzureRegionsGetAzureRegionsRequest": {
      "required": [
        "credentials"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/SolarWinds.CloudMonitoring.Contract.Credentials.AzureCredentials"
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Containers.DataProvider.MemberDefinitionInfo": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Definition": {
          "type": "string"
        }
      }
    },
    "OrionContainerCreateContainerRequest": {
      "required": [
        "name",
        "owner",
        "frequency",
        "statusCalculator",
        "description",
        "pollingEnabled",
        "memberDefinitions"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "frequency": {
          "type": "number"
        },
        "statusCalculator": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "pollingEnabled": {
          "type": "boolean"
        },
        "memberDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Containers.DataProvider.MemberDefinitionInfo"
          }
        }
      }
    },
    "OrionContainerCreateContainerWithParentRequest": {
      "required": [
        "parentId",
        "name",
        "owner",
        "frequency",
        "statusCalculator",
        "description",
        "pollingEnabled",
        "memberDefinitions"
      ],
      "type": "object",
      "properties": {
        "parentId": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "frequency": {
          "type": "number"
        },
        "statusCalculator": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "pollingEnabled": {
          "type": "boolean"
        },
        "memberDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Containers.DataProvider.MemberDefinitionInfo"
          }
        }
      }
    },
    "OrionContainerUpdateContainerRequest": {
      "required": [
        "containerId",
        "name",
        "owner",
        "frequency",
        "statusCalculator",
        "description",
        "pollingEnabled"
      ],
      "type": "object",
      "properties": {
        "containerId": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "frequency": {
          "type": "number"
        },
        "statusCalculator": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "pollingEnabled": {
          "type": "boolean"
        }
      }
    },
    "OrionContainerDeleteContainerRequest": {
      "required": [
        "containerId"
      ],
      "type": "object",
      "properties": {
        "containerId": {
          "type": "number"
        }
      }
    },
    "OrionContainerAddDefinitionRequest": {
      "required": [
        "containerId",
        "memberDefinition"
      ],
      "type": "object",
      "properties": {
        "containerId": {
          "type": "number"
        },
        "memberDefinition": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Containers.DataProvider.MemberDefinitionInfo"
        }
      }
    },
    "OrionContainerAddDefinitionsRequest": {
      "required": [
        "containerId",
        "memberDefinitions"
      ],
      "type": "object",
      "properties": {
        "containerId": {
          "type": "number"
        },
        "memberDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Containers.DataProvider.MemberDefinitionInfo"
          }
        }
      }
    },
    "OrionContainerUpdateDefinitionRequest": {
      "required": [
        "definitionId",
        "memberDefinition"
      ],
      "type": "object",
      "properties": {
        "definitionId": {
          "type": "number"
        },
        "memberDefinition": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Containers.DataProvider.MemberDefinitionInfo"
        }
      }
    },
    "OrionContainerSetDefinitionsRequest": {
      "required": [
        "containerId",
        "memberDefinitions"
      ],
      "type": "object",
      "properties": {
        "containerId": {
          "type": "number"
        },
        "memberDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Containers.DataProvider.MemberDefinitionInfo"
          }
        }
      }
    },
    "OrionContainerDeleteDefinitionRequest": {
      "required": [
        "definitionId"
      ],
      "type": "object",
      "properties": {
        "definitionId": {
          "type": "number"
        }
      }
    },
    "OrionContainerDeleteDefinitionsRequest": {
      "required": [
        "containerId",
        "definitionIds"
      ],
      "type": "object",
      "properties": {
        "containerId": {
          "type": "number"
        },
        "definitionIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionContainerGetDefinitionFilterQueryRequest": {
      "required": [
        "queryDefinition"
      ],
      "type": "object",
      "properties": {
        "queryDefinition": {
          "type": "string"
        }
      }
    },
    "OrionGroupCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionGroupCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionGroupCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionGroupCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionGroupCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationResult": {
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationStatus"
        },
        "ErrorMessage": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Core.Common.Models.CustomPropertyValidationStatus": {
      "enum": [
        "Valid",
        "IsSystem",
        "IsReserved",
        "Exists",
        "Error"
      ],
      "type": "string"
    },
    "OrionContainerMemberDefinitionGetMembersRequest": {
      "required": [
        "definition"
      ],
      "type": "object",
      "properties": {
        "definition": {
          "type": "string"
        }
      }
    },
    "OrionContainerMemberDefinitionGetFirstNMembersRequest": {
      "required": [
        "definition",
        "topCountForEachDefinition"
      ],
      "type": "object",
      "properties": {
        "definition": {
          "type": "string"
        },
        "topCountForEachDefinition": {
          "type": "number"
        }
      }
    },
    "CortexOrionCiscoAciApicOrionCiscoAciAssignAciPollingRequest": {
      "required": [
        "NodeId"
      ],
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        }
      }
    },
    "System.Collections.Generic.KeyValuePair~System.String_System.Object~": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "$ref": "#/definitions/System.Object"
        }
      }
    },
    "System.Object": {
      "type": "object"
    },
    "CortexOrionCiscoAciApicOrionCiscoAciGetPollIntervalRequest": {
      "required": [
        "NodeId"
      ],
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        }
      }
    },
    "CortexOrionCiscoAciApicOrionCiscoAciIsAciPollingAssignedRequest": {
      "required": [
        "NodeId"
      ],
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        }
      }
    },
    "CortexOrionCiscoAciApicOrionCiscoAciSyncAciCredentialsWithOrionRequest": {
      "required": [
        "NodeId"
      ],
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        }
      }
    },
    "CortexOrionCiscoAciApicOrionCiscoAciTestAciCredentialsRequest": {
      "required": [
        "HostOrIpAddress",
        "UserName",
        "Password",
        "CertificateApproved"
      ],
      "type": "object",
      "properties": {
        "HostOrIpAddress": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "CertificateApproved": {
          "type": "boolean"
        }
      }
    },
    "CortexOrionCiscoAciApicOrionCiscoAciUnassignAciPollingRequest": {
      "required": [
        "NodeId"
      ],
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        }
      }
    },
    "CortexOrionNetManCloudMonitoringCloudAccountOrionNetManCloudMonitoringCreateOrUpdateCloudAccountRequest": {
      "required": [
        "OrionCloudAccountId",
        "Name",
        "StatisticsPollingInterval",
        "VirtualNetworkGatewaysPollingEnabled",
        "MonitorApiRequestsEnabled",
        "CloudAccountType"
      ],
      "type": "object",
      "properties": {
        "OrionCloudAccountId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "StatisticsPollingInterval": {
          "type": "number"
        },
        "VirtualNetworkGatewaysPollingEnabled": {
          "type": "boolean"
        },
        "MonitorApiRequestsEnabled": {
          "type": "boolean"
        },
        "CloudAccountType": {
          "type": "number"
        }
      }
    },
    "CortexOrionNetManCloudMonitoringCloudAccountOrionNetManCloudMonitoringGetCloudAccountStateRequest": {
      "required": [
        "OrionCloudAccountId"
      ],
      "type": "object",
      "properties": {
        "OrionCloudAccountId": {
          "type": "number"
        }
      }
    },
    "CortexOrionNetManCloudMonitoringCloudAccountOrionNetManCloudMonitoringRemoveCloudAccountRequest": {
      "required": [
        "OrionCloudAccountId"
      ],
      "type": "object",
      "properties": {
        "OrionCloudAccountId": {
          "type": "number"
        }
      }
    },
    "CortexOrionNetManFirewallsFirewallOrionNetManFirewallsDisablePollingRequest": {
      "required": [
        "NodeId"
      ],
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        },
        "FirewallType": {
          "type": "number"
        }
      }
    },
    "CortexOrionNetManFirewallsFirewallOrionNetManFirewallsEnablePollingRequest": {
      "required": [
        "NodeId",
        "FirewallType"
      ],
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        },
        "FirewallType": {
          "type": "number"
        }
      }
    },
    "CortexOrionNetManFirewallsFirewallOrionNetManFirewallsGetAuthorizationKeyRequest": {
      "required": [
        "HostOrIpAddress",
        "Username",
        "Password",
        "FirewallType"
      ],
      "type": "object",
      "properties": {
        "HostOrIpAddress": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "FirewallType": {
          "type": "number"
        },
        "TrustedCertificateIdentity": {
          "type": "string"
        }
      }
    },
    "CortexOrionNetManFirewallsFirewallOrionNetManFirewallsIsPollingEnabledRequest": {
      "required": [
        "NodeId",
        "FirewallType"
      ],
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        },
        "FirewallType": {
          "type": "number"
        }
      }
    },
    "CortexOrionInterfaceCoreAddToCortexRequest": {
      "required": [
        "OrionId"
      ],
      "type": "object",
      "properties": {
        "OrionId": {
          "type": "number"
        }
      }
    },
    "CortexOrionNodeCoreAddToCortexRequest": {
      "required": [
        "OrionId"
      ],
      "type": "object",
      "properties": {
        "OrionId": {
          "type": "number"
        }
      }
    },
    "CortexOrionVolumeCoreAddToCortexRequest": {
      "required": [
        "OrionId"
      ],
      "type": "object",
      "properties": {
        "OrionId": {
          "type": "number"
        }
      }
    },
    "OrionDashboardsInstancesAddWidgetRequest": {
      "required": [
        "dashboardID",
        "widgetID",
        "position"
      ],
      "type": "object",
      "properties": {
        "dashboardID": {
          "type": "string"
        },
        "widgetID": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "isReference": {
          "type": "boolean"
        }
      }
    },
    "OrionDashboardsInstancesRemoveWidgetRequest": {
      "required": [
        "dashboardID",
        "widgetID"
      ],
      "type": "object",
      "properties": {
        "dashboardID": {
          "type": "string"
        },
        "widgetID": {
          "type": "string"
        }
      }
    },
    "OrionDashboardsInstancesUpdateWidgetLocationRequest": {
      "required": [
        "dashboardID",
        "widgetID",
        "position"
      ],
      "type": "object",
      "properties": {
        "dashboardID": {
          "type": "string"
        },
        "widgetID": {
          "type": "string"
        },
        "position": {
          "type": "string"
        }
      }
    },
    "OrionDashboardsInstancesSetVisibilityRequest": {
      "required": [
        "dashboardID",
        "asPrivate"
      ],
      "type": "object",
      "properties": {
        "dashboardID": {
          "type": "string"
        },
        "asPrivate": {
          "type": "boolean"
        }
      }
    },
    "OrionDashboardsInstancesCloneRequest": {
      "required": [
        "dashboardID",
        "displayName",
        "asPrivate"
      ],
      "type": "object",
      "properties": {
        "dashboardID": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "asPrivate": {
          "type": "boolean"
        }
      }
    },
    "OrionDashboardsInstancesImportRequest": {
      "required": [
        "definition"
      ],
      "type": "object",
      "properties": {
        "definition": {
          "type": "string"
        }
      }
    },
    "OrionDashboardsInstancesExportRequest": {
      "required": [
        "dashboardId"
      ],
      "type": "object",
      "properties": {
        "dashboardId": {
          "type": "number"
        }
      }
    },
    "OrionDashboardsInstancesExportForI18NRequest": {
      "required": [
        "dashboardId"
      ],
      "type": "object",
      "properties": {
        "dashboardId": {
          "type": "number"
        },
        "stringLibrary": {
          "type": "string"
        }
      }
    },
    "OrionDashboardsInstancesRestoreToOriginalRequest": {
      "required": [
        "dashboardID"
      ],
      "type": "object",
      "properties": {
        "dashboardID": {
          "type": "string"
        }
      }
    },
    "OrionDashboardsInstancesDereferenceWidgetRequest": {
      "required": [
        "dashboardID",
        "widgetID"
      ],
      "type": "object",
      "properties": {
        "dashboardID": {
          "type": "string"
        },
        "widgetID": {
          "type": "string"
        }
      }
    },
    "OrionDashboardsInstancesWidgetToReferenceRequest": {
      "required": [
        "dashboardID",
        "widgetID",
        "targetWidgetID"
      ],
      "type": "object",
      "properties": {
        "dashboardID": {
          "type": "string"
        },
        "widgetID": {
          "type": "string"
        },
        "targetWidgetID": {
          "type": "string"
        }
      }
    },
    "OrionDashboardsInstancesGetDashboardBreadcrumbsRequest": {
      "required": [
        "routeIdPath"
      ],
      "type": "object",
      "properties": {
        "routeIdPath": {
          "type": "string"
        }
      }
    },
    "OrionDashboardsInstancesGetDashboardGroupRequest": {
      "required": [
        "dashboardId",
        "accountId",
        "isAdmin"
      ],
      "type": "object",
      "properties": {
        "dashboardId": {
          "type": "number"
        },
        "accountId": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "OrionDashboardsInstancesUpdateDashboardGroupRequest": {
      "required": [
        "dashboardDashboardGroupItemsJson",
        "accountId",
        "isAdmin"
      ],
      "type": "object",
      "properties": {
        "dashboardDashboardGroupItemsJson": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "OrionDashboardsWidgetsCloneRequest": {
      "required": [
        "widgetID",
        "asPrivate"
      ],
      "type": "object",
      "properties": {
        "widgetID": {
          "type": "string"
        },
        "asPrivate": {
          "type": "boolean"
        }
      }
    },
    "OrionDashboardsWidgetsRemoveAllLinksRequest": {
      "required": [
        "widgetID"
      ],
      "type": "object",
      "properties": {
        "widgetID": {
          "type": "string"
        }
      }
    },
    "OrionDashboardsWidgetsImportRequest": {
      "required": [
        "widgetID",
        "definition"
      ],
      "type": "object",
      "properties": {
        "widgetID": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        }
      }
    },
    "OrionDashboardsWidgetsExportRequest": {
      "required": [
        "widgetID"
      ],
      "type": "object",
      "properties": {
        "widgetID": {
          "type": "string"
        }
      }
    },
    "OrionDPADpaServerRefreshSchemaRequest": {
      "required": [
        "dpaServerId"
      ],
      "type": "object",
      "properties": {
        "dpaServerId": {
          "type": "number"
        }
      }
    },
    "OrionDPIProbesReloadProbeSettingsRequest": {
      "required": [
        "probeId"
      ],
      "type": "object",
      "properties": {
        "probeId": {
          "type": "number"
        }
      }
    },
    "OrionDPIProbesReloadAppDefinitionsRequest": {
      "required": [
        "probeId"
      ],
      "type": "object",
      "properties": {
        "probeId": {
          "type": "number"
        }
      }
    },
    "OrionDPIProbesGetProbeCapabilitiesRequest": {
      "required": [
        "probeId"
      ],
      "type": "object",
      "properties": {
        "probeId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.DPI.Common.Models.ProbeCapabilities": {
      "type": "object",
      "properties": {
        "Hardware": {
          "$ref": "#/definitions/SolarWinds.DPI.Common.Models.HardwareInfo"
        },
        "Interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.DPI.Common.Models.InterfaceConfig"
          }
        }
      }
    },
    "SolarWinds.DPI.Common.Models.HardwareInfo": {
      "type": "object",
      "properties": {
        "CpuCores": {
          "type": "number"
        },
        "PhysicalMemoryMb": {
          "type": "number"
        }
      }
    },
    "SolarWinds.DPI.Common.Models.InterfaceConfig": {
      "type": "object",
      "properties": {
        "IpAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrionDPIProbesDeployLocalTrafficProbeRequest": {
      "required": [
        "nodeId",
        "machineUserName",
        "machinePassword",
        "probeName",
        "probeDescription"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "machineUserName": {
          "type": "string"
        },
        "machinePassword": {
          "type": "string"
        },
        "probeName": {
          "type": "string"
        },
        "probeDescription": {
          "type": "string"
        }
      }
    },
    "SolarWinds.DPI.Common.Models.ProbeDeploymentResult": {
      "type": "object",
      "properties": {
        "ProbeId": {
          "type": "number"
        },
        "DeploymentError": {
          "type": "string"
        }
      }
    },
    "OrionDPIProbesDeploySpanPortProbeRequest": {
      "required": [
        "nodeId",
        "machineUserName",
        "machinePassword",
        "probeName",
        "probeDescription"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "machineUserName": {
          "type": "string"
        },
        "machinePassword": {
          "type": "string"
        },
        "probeName": {
          "type": "string"
        },
        "probeDescription": {
          "type": "string"
        }
      }
    },
    "OrionEOCSitesCreateSiteRequest": {
      "required": [
        "host",
        "userName",
        "password",
        "siteProperties"
      ],
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "siteProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
          }
        }
      }
    },
    "OrionEOCSitesRefreshSchemaRequest": {
      "required": [
        "remoteSwisUri"
      ],
      "type": "object",
      "properties": {
        "remoteSwisUri": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.EOC.Models.SwisCredentialType": {
      "enum": [
        "Unknown",
        "System",
        "Admin",
        "DefaultImpersonate",
        "Impersonate",
        "DefaultPassThrough"
      ],
      "type": "string"
    },
    "OrionEOCSiteAccountsSetEocSiteAccountRequest": {
      "required": [
        "eocSiteID",
        "credsType",
        "username",
        "password"
      ],
      "type": "object",
      "properties": {
        "eocSiteID": {
          "type": "number"
        },
        "credsType": {
          "$ref": "#/definitions/SolarWinds.Orion.EOC.Models.SwisCredentialType"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "OrionEOCSiteAccountsUpdateAccountRequest": {
      "required": [
        "eocSiteID",
        "uri",
        "accountName",
        "credentialsType"
      ],
      "type": "object",
      "properties": {
        "eocSiteID": {
          "type": "number"
        },
        "uri": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "credentialsType": {
          "type": "number"
        }
      }
    },
    "OrionEOCSiteAccountsCreateAccountRequest": {
      "required": [
        "eocSiteID",
        "credentialsType",
        "accountName",
        "password"
      ],
      "type": "object",
      "properties": {
        "eocSiteID": {
          "type": "number"
        },
        "credentialsType": {
          "type": "number"
        },
        "accountName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "OrionESIIncidentIntegrationSetIncidentIntegrationStateRequest": {
      "required": [
        "enabled"
      ],
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "SystemIndicationReportIndicationRequest": {
      "required": [
        "indicationType",
        "indicationProperties",
        "sourceInstanceProperties"
      ],
      "type": "object",
      "properties": {
        "indicationType": {
          "type": "string"
        },
        "indicationProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
          }
        },
        "sourceInstanceProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
          }
        }
      }
    },
    "OrionF5SystemDeviceTestApiPollingRequest": {
      "required": [
        "dnsName",
        "ipAddress",
        "port",
        "useSsl",
        "userName",
        "password",
        "reservedSslCertificateIdentity"
      ],
      "type": "object",
      "properties": {
        "dnsName": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "port": {
          "type": "number"
        },
        "useSsl": {
          "type": "boolean"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "reservedSslCertificateIdentity": {
          "type": "string"
        },
        "engineId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.F5.Common.Models.API.F5ApiTestConnectionResult": {
      "type": "object",
      "properties": {
        "IsSuccessful": {
          "type": "boolean"
        },
        "Error": {
          "$ref": "#/definitions/SolarWinds.F5.Common.Models.API.F5ApiError"
        },
        "SslCertificateIdentity": {
          "type": "string"
        }
      }
    },
    "SolarWinds.F5.Common.Models.API.F5ApiError": {
      "enum": [
        "Unknown",
        "CertificateIsIncorrect",
        "CredentialsAreIncorrect",
        "ServerIsUnavailable",
        "ApiIsUnavailable",
        "IncorrectApiResponse",
        "CredentialsAreMissing",
        "ApiIgnoredRequest"
      ],
      "type": "string"
    },
    "OrionF5SystemDeviceEnableApiPollingRequest": {
      "required": [
        "nodeId",
        "port",
        "useSsl",
        "userName",
        "password"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "port": {
          "type": "number"
        },
        "useSsl": {
          "type": "boolean"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "reservedSslCertificateIdentity": {
          "type": "string"
        }
      }
    },
    "OrionF5SystemDeviceDisableApiPollingRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        }
      }
    },
    "OrionF5LTMServerLinkNodeRequest": {
      "required": [
        "f5ServerId",
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "f5ServerId": {
          "type": "number"
        },
        "nodeId": {
          "type": "number"
        }
      }
    },
    "OrionF5LTMServerUnlinkNodeRequest": {
      "required": [
        "f5ServerId"
      ],
      "type": "object",
      "properties": {
        "f5ServerId": {
          "type": "number"
        }
      }
    },
    "OrionHardwareHealthHardwareInfoBaseEnableHardwareHealthRequest": {
      "required": [
        "netObject",
        "pollingmethod"
      ],
      "type": "object",
      "properties": {
        "netObject": {
          "type": "string"
        },
        "pollingmethod": {
          "type": "number"
        }
      }
    },
    "OrionHardwareHealthHardwareInfoBaseDisableHardwareHealthRequest": {
      "required": [
        "netObject"
      ],
      "type": "object",
      "properties": {
        "netObject": {
          "type": "string"
        }
      }
    },
    "OrionHardwareHealthHardwareInfoBaseDeleteHardwareHealthRequest": {
      "required": [
        "netObject"
      ],
      "type": "object",
      "properties": {
        "netObject": {
          "type": "string"
        }
      }
    },
    "OrionHardwareHealthHardwareInfoBaseIsHardwareHealthEnabledRequest": {
      "required": [
        "netObject"
      ],
      "type": "object",
      "properties": {
        "netObject": {
          "type": "string"
        }
      }
    },
    "System.Collections.Generic.IEnumerable~SolarWinds.HardwareHealth.Common.Models.HardwareHealth.HardwareHealthItemKey~": {
      "type": "object"
    },
    "OrionHardwareHealthHardwareItemBaseEnableSensorsRequest": {
      "required": [
        "hardwareItems"
      ],
      "type": "object",
      "properties": {
        "hardwareItems": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~SolarWinds.HardwareHealth.Common.Models.HardwareHealth.HardwareHealthItemKey~"
        }
      }
    },
    "OrionHardwareHealthHardwareItemBaseDisableSensorsRequest": {
      "required": [
        "hardwareItems"
      ],
      "type": "object",
      "properties": {
        "hardwareItems": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~SolarWinds.HardwareHealth.Common.Models.HardwareHealth.HardwareHealthItemKey~"
        }
      }
    },
    "OrionHardwareHealthHardwareItemThresholdSetThresholdRequest": {
      "required": [
        "sensorId",
        "warningThreshold",
        "criticalThreshold"
      ],
      "type": "object",
      "properties": {
        "sensorId": {
          "type": "number"
        },
        "warningThreshold": {
          "type": "string"
        },
        "criticalThreshold": {
          "type": "string"
        }
      }
    },
    "OrionHardwareHealthHardwareItemThresholdClearThresholdsRequest": {
      "required": [
        "sensorIds"
      ],
      "type": "object",
      "properties": {
        "sensorIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionHAPoolsCreatePoolRequest": {
      "required": [
        "displayName",
        "poolMembersIds",
        "properties"
      ],
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of a pool",
          "type": "string"
        },
        "poolMembersIds": {
          "description": "Integer array of pool member IDs",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "properties": {
          "description": "Additional properties containing resources configurations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
          }
        }
      }
    },
    "SolarWinds.Orion.HighAvailability.Common.Model.OperationResult": {
      "type": "object",
      "properties": {
        "IsError": {
          "type": "boolean"
        },
        "Code": {
          "type": "number"
        },
        "Message": {
          "type": "string"
        },
        "Result": {
          "type": "string"
        }
      }
    },
    "OrionHAPoolsEditPoolRequest": {
      "required": [
        "poolId",
        "displayName",
        "properties"
      ],
      "type": "object",
      "properties": {
        "poolId": {
          "description": "Pool ID",
          "type": "number"
        },
        "displayName": {
          "description": "Name of a pool",
          "type": "string"
        },
        "properties": {
          "description": "Additional properties containing resources configurations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
          }
        }
      }
    },
    "OrionHAPoolsValidateCreatePoolRequest": {
      "required": [
        "displayName",
        "poolMembersIds",
        "properties"
      ],
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of a pool",
          "type": "string"
        },
        "poolMembersIds": {
          "description": "Integer array of pool member IDs",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "properties": {
          "description": "Additional properties containing resources configurations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
          }
        }
      }
    },
    "OrionHAPoolsValidateEditPoolRequest": {
      "required": [
        "poolId",
        "displayName",
        "properties"
      ],
      "type": "object",
      "properties": {
        "poolId": {
          "description": "Pool ID",
          "type": "number"
        },
        "displayName": {
          "description": "Name of a pool",
          "type": "string"
        },
        "properties": {
          "description": "Additional properties containing resources configurations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
          }
        }
      }
    },
    "OrionHAPoolsEnablePoolRequest": {
      "required": [
        "poolId"
      ],
      "type": "object",
      "properties": {
        "poolId": {
          "description": "ID of pool",
          "type": "number"
        }
      }
    },
    "OrionHAPoolsDisablePoolRequest": {
      "required": [
        "poolId"
      ],
      "type": "object",
      "properties": {
        "poolId": {
          "description": "ID of pool",
          "type": "number"
        }
      }
    },
    "OrionHAPoolsDeletePoolRequest": {
      "required": [
        "poolId"
      ],
      "type": "object",
      "properties": {
        "poolId": {
          "description": "ID of pool",
          "type": "number"
        }
      }
    },
    "OrionHAPoolsSwitchoverRequest": {
      "required": [
        "poolId"
      ],
      "type": "object",
      "properties": {
        "poolId": {
          "description": "ID of pool",
          "type": "number"
        }
      }
    },
    "OrionHAPoolsDeleteStaleEngineRequest": {
      "required": [
        "hostName"
      ],
      "type": "object",
      "properties": {
        "hostName": {
          "description": "hostName",
          "type": "string"
        }
      }
    },
    "OrionNPMInterfacesSetPowerLevelRequest": {
      "required": [
        "interfaceId",
        "powerLevel"
      ],
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Id of Interface to update.",
          "type": "number"
        },
        "powerLevel": {
          "description": "Power level to set for interface.",
          "type": "number"
        }
      }
    },
    "OrionNPMInterfacesUnmanageRequest": {
      "required": [
        "netObjectId",
        "unmanageTime",
        "remanageTime",
        "isRelative"
      ],
      "type": "object",
      "properties": {
        "netObjectId": {
          "description": "Id of net object (interface) to unmanage. Example:'I:1'.",
          "type": "string"
        },
        "unmanageTime": {
          "format": "date-time",
          "description": "TimeStamp value to unmanage interface from.",
          "type": "string"
        },
        "remanageTime": {
          "format": "date-time",
          "description": "TimeStamp value to manage interface from.",
          "type": "string"
        },
        "isRelative": {
          "description": "If is true that remanageTime will be unmanageTime + remanageTime.TimeOfDay.",
          "type": "boolean"
        }
      }
    },
    "OrionNPMInterfacesRemanageRequest": {
      "required": [
        "netObjectId"
      ],
      "type": "object",
      "properties": {
        "netObjectId": {
          "description": "Id of net object (interface) to unmanage. Example:'I:1'.",
          "type": "string"
        }
      }
    },
    "OrionNPMInterfacesDiscoverInterfacesOnNodeRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Id of node to run discovery on.",
          "type": "number"
        }
      }
    },
    "SolarWinds.Interfaces.Common.Models.Discovery.LiteDiscoveryResult": {
      "type": "object",
      "properties": {
        "DiscoveredInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Interfaces.Common.Models.Discovery.DiscoveredLiteInterface"
          }
        },
        "Result": {
          "$ref": "#/definitions/SolarWinds.Interfaces.Common.Models.Discovery.LiteDiscoveryResultCode"
        }
      }
    },
    "SolarWinds.Interfaces.Common.Models.Discovery.DiscoveredLiteInterface": {
      "type": "object",
      "properties": {
        "ifIndex": {
          "type": "number"
        },
        "Caption": {
          "type": "string"
        },
        "ifType": {
          "type": "number"
        },
        "ifSubType": {
          "type": "number"
        },
        "InterfaceID": {
          "type": "number"
        },
        "Manageable": {
          "type": "boolean"
        },
        "ifSpeed": {
          "type": "number"
        },
        "ifAdminStatus": {
          "type": "number"
        },
        "ifOperStatus": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Interfaces.Common.Models.Discovery.LiteDiscoveryResultCode": {
      "enum": [
        "Succeed",
        "InvalidNode",
        "GenericError"
      ],
      "type": "string"
    },
    "SolarWinds.Interfaces.Common.Models.Discovery.AddPollers": {
      "enum": [
        "AddDefaultPollers",
        "AddNoPollers"
      ],
      "type": "string"
    },
    "OrionNPMInterfacesAddInterfacesOnNodeRequest": {
      "required": [
        "nodeId",
        "interfacesToAdd",
        "pollers"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "description": "Id of node to add interfaces for.",
          "type": "number"
        },
        "interfacesToAdd": {
          "description": "Array of interfaces to add. Full type: SolarWinds.Interfaces.Common.Models.Discovery.DiscoveredLiteInterface",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Interfaces.Common.Models.Discovery.DiscoveredLiteInterface"
          }
        },
        "pollers": {
          "$ref": "#/definitions/SolarWinds.Interfaces.Common.Models.Discovery.AddPollers"
        }
      }
    },
    "SolarWinds.Data.Providers.Interfaces.Verbs.Interfaces-InterfacesDiscoveryPluginContext": {
      "type": "object",
      "properties": {
        "UseDefaults": {
          "type": "boolean"
        },
        "AutoImportStatus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AutoImportVlanPortTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AutoImportVirtualTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AutoImportExpressionFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Interfaces.Verbs.Interfaces-Expression"
          }
        }
      }
    },
    "SolarWinds.Data.Providers.Interfaces.Verbs.Interfaces-Expression": {
      "type": "object",
      "properties": {
        "Prop": {
          "type": "string"
        },
        "Op": {
          "type": "string"
        },
        "Val": {
          "type": "string"
        }
      }
    },
    "OrionNPMInterfacesCreateInterfacesPluginConfigurationRequest": {
      "required": [
        "context"
      ],
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.Interfaces.Verbs.Interfaces-InterfacesDiscoveryPluginContext"
        }
      }
    },
    "OrionNPMInterfacesCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionNPMInterfacesCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionNPMInterfacesCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionNPMInterfacesCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementChangeIpStatusRequest": {
      "required": [
        "ipAddress",
        "status"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementChangeIpStatusForGroupRequest": {
      "required": [
        "ipAddress",
        "status",
        "hierarchyGroup"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "hierarchyGroup": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementGetFirstAvailableIpRequest": {
      "required": [
        "subnetAddress",
        "subnetCidr"
      ],
      "type": "object",
      "properties": {
        "subnetAddress": {
          "type": "string"
        },
        "subnetCidr": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementGetFirstAvailableIpViaFriendlyNameRequest": {
      "required": [
        "friendlyName"
      ],
      "type": "object",
      "properties": {
        "friendlyName": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementGetFirstAvailableIpForGroupRequest": {
      "required": [
        "subnetAddress",
        "subnetCidr",
        "hierarchyGroup"
      ],
      "type": "object",
      "properties": {
        "subnetAddress": {
          "type": "string"
        },
        "subnetCidr": {
          "type": "string"
        },
        "hierarchyGroup": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementStartIpReservationRequest": {
      "required": [
        "subnetAddress",
        "subnetCidr"
      ],
      "type": "object",
      "properties": {
        "subnetAddress": {
          "type": "string"
        },
        "subnetCidr": {
          "type": "string"
        },
        "reservationTimeInMinutes": {
          "type": "number"
        },
        "addressToStart": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementStartIpReservationForGroupRequest": {
      "required": [
        "subnetAddress",
        "subnetCidr",
        "hierarchyGroup"
      ],
      "type": "object",
      "properties": {
        "subnetAddress": {
          "type": "string"
        },
        "subnetCidr": {
          "type": "string"
        },
        "hierarchyGroup": {
          "type": "string"
        },
        "reservationTimeInMinutes": {
          "type": "number"
        },
        "addressToStart": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementCancelIpReservationRequest": {
      "required": [
        "reservedIpAddress"
      ],
      "type": "object",
      "properties": {
        "reservedIpAddress": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementCancelIpReservationForGroupRequest": {
      "required": [
        "reservedIpAddress",
        "hierarchyGroup"
      ],
      "type": "object",
      "properties": {
        "reservedIpAddress": {
          "type": "string"
        },
        "hierarchyGroup": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementFinishIpReservationRequest": {
      "required": [
        "ipAddress",
        "finalIpStatus"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "finalIpStatus": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementFinishIpReservationForGroupRequest": {
      "required": [
        "ipAddress",
        "finalIpStatus",
        "hierarchyGroup"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "finalIpStatus": {
          "type": "string"
        },
        "hierarchyGroup": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementCreateSubnetRequest": {
      "required": [
        "subnetAddress",
        "rawCidr"
      ],
      "type": "object",
      "properties": {
        "subnetAddress": {
          "type": "string"
        },
        "rawCidr": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementCreateSubnetForGroupRequest": {
      "required": [
        "subnetAddress",
        "rawCidr",
        "hierarchyGroup"
      ],
      "type": "object",
      "properties": {
        "subnetAddress": {
          "type": "string"
        },
        "rawCidr": {
          "type": "string"
        },
        "hierarchyGroup": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementCreateIPv6SubnetRequest": {
      "required": [
        "prefix",
        "prefixName",
        "isNewPrefix",
        "subnetAddress",
        "rawCidr"
      ],
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string"
        },
        "prefixName": {
          "type": "string"
        },
        "isNewPrefix": {
          "type": "boolean"
        },
        "subnetAddress": {
          "type": "string"
        },
        "rawCidr": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementCreateIPv6SubnetForGroupRequest": {
      "required": [
        "prefix",
        "prefixName",
        "isNewPrefix",
        "subnetAddress",
        "rawCidr",
        "hierarchyGroup"
      ],
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string"
        },
        "prefixName": {
          "type": "string"
        },
        "isNewPrefix": {
          "type": "boolean"
        },
        "subnetAddress": {
          "type": "string"
        },
        "rawCidr": {
          "type": "string"
        },
        "hierarchyGroup": {
          "type": "string"
        }
      }
    },
    "IPAMSubnetManagementChangeDisableAutoScanningRequest": {
      "required": [
        "groupId",
        "disableAutoScanning"
      ],
      "type": "object",
      "properties": {
        "groupId": {
          "type": "number"
        },
        "disableAutoScanning": {
          "type": "boolean"
        }
      }
    },
    "IPAMDhcpDnsManagementCreateIpReservationRequest": {
      "required": [
        "ipAddressToReserve",
        "dhcpServerIpAddress",
        "reservationName",
        "reservationMAC"
      ],
      "type": "object",
      "properties": {
        "ipAddressToReserve": {
          "type": "string"
        },
        "dhcpServerIpAddress": {
          "type": "string"
        },
        "reservationName": {
          "type": "string"
        },
        "reservationMAC": {
          "type": "string"
        },
        "reservationType": {
          "type": "string"
        }
      }
    },
    "IPAMDhcpDnsManagementRemoveIpReservationRequest": {
      "required": [
        "ipRemoveReservation",
        "dhcpServerIpAddress"
      ],
      "type": "object",
      "properties": {
        "ipRemoveReservation": {
          "type": "string"
        },
        "dhcpServerIpAddress": {
          "type": "string"
        }
      }
    },
    "IPAMDhcpDnsManagementGetAandPTRrecordsForDnsZoneRequest": {
      "required": [
        "zoneName",
        "dnsServerIp"
      ],
      "type": "object",
      "properties": {
        "zoneName": {
          "type": "string"
        },
        "dnsServerIp": {
          "type": "string"
        }
      }
    },
    "SolarWinds.IPAM.Contract.APtrRecordsPair": {
      "type": "object",
      "properties": {
        "ARecordName": {
          "type": "string"
        },
        "ARecordData": {
          "type": "string"
        },
        "PtrRecordName": {
          "type": "string"
        },
        "PtrRecordData": {
          "type": "string"
        }
      }
    },
    "IPAMDhcpDnsManagementAddDnsServerRequest": {
      "required": [
        "nodeId",
        "newCredentialName",
        "newCredentialUserName",
        "newCredentialPassword"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "newCredentialName": {
          "type": "string"
        },
        "newCredentialUserName": {
          "type": "string"
        },
        "newCredentialPassword": {
          "type": "string"
        },
        "newCredentialProtocol": {
          "type": "number"
        },
        "newCredentialClientPort": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "enableScanning": {
          "type": "boolean"
        },
        "incrementalZoneTransfer": {
          "type": "boolean"
        },
        "scanInterval": {
          "type": "number"
        },
        "serverType": {
          "type": "number"
        }
      }
    },
    "IPAMDhcpDnsManagementAddDhcpServerRequest": {
      "required": [
        "nodeId",
        "newHierarchyGroupName",
        "newCredentialName",
        "newCredentialUserName",
        "newCredentialPassword",
        "newCredentialEnablePassword"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "newHierarchyGroupName": {
          "type": "string"
        },
        "newCredentialName": {
          "type": "string"
        },
        "newCredentialUserName": {
          "type": "string"
        },
        "newCredentialPassword": {
          "type": "string"
        },
        "newCredentialEnablePassword": {
          "type": "string"
        },
        "newCredentialProtocol": {
          "type": "number"
        },
        "newCredentialClientPort": {
          "type": "number"
        },
        "newCredentialEnableLevel": {
          "type": "number"
        },
        "credentialId": {
          "type": "number"
        },
        "clusterId": {
          "type": "number"
        },
        "scopesScanInterval": {
          "type": "number"
        },
        "scanInterval": {
          "type": "number"
        },
        "serverType": {
          "type": "number"
        },
        "autoAddNewScopes": {
          "type": "boolean"
        },
        "enableSubnetScanning": {
          "type": "boolean"
        }
      }
    },
    "IPAMDhcpDnsManagementDeleteDnsServerRequest": {
      "required": [
        "groupId"
      ],
      "type": "object",
      "properties": {
        "groupId": {
          "type": "number"
        },
        "removeZonesFromServer": {
          "type": "boolean"
        }
      }
    },
    "IPAMDhcpDnsManagementDeleteDhcpServerRequest": {
      "required": [
        "groupId"
      ],
      "type": "object",
      "properties": {
        "groupId": {
          "type": "number"
        },
        "removeCorrespondingSubnets": {
          "type": "boolean"
        },
        "removeScopesFromServer": {
          "type": "boolean"
        }
      }
    },
    "IPAMIPAddressManagementAddDnsARecordRequest": {
      "required": [
        "recordName",
        "nodeIPv4Address",
        "dnsIpAddress",
        "dnsZoneName"
      ],
      "type": "object",
      "properties": {
        "recordName": {
          "type": "string"
        },
        "nodeIPv4Address": {
          "type": "string"
        },
        "dnsIpAddress": {
          "type": "string"
        },
        "dnsZoneName": {
          "type": "string"
        }
      }
    },
    "IPAMIPAddressManagementChangeDnsARecordRequest": {
      "required": [
        "recordName",
        "nodeIPv4Address",
        "dnsIpAddress",
        "dnsZoneName",
        "nodeIPv4AddressNew"
      ],
      "type": "object",
      "properties": {
        "recordName": {
          "type": "string"
        },
        "nodeIPv4Address": {
          "type": "string"
        },
        "dnsIpAddress": {
          "type": "string"
        },
        "dnsZoneName": {
          "type": "string"
        },
        "nodeIPv4AddressNew": {
          "type": "string"
        }
      }
    },
    "IPAMIPAddressManagementRemoveDnsARecordRequest": {
      "required": [
        "recordName",
        "nodeIPv4Address",
        "dnsIpAddress",
        "dnsZoneName"
      ],
      "type": "object",
      "properties": {
        "recordName": {
          "type": "string"
        },
        "nodeIPv4Address": {
          "type": "string"
        },
        "dnsIpAddress": {
          "type": "string"
        },
        "dnsZoneName": {
          "type": "string"
        }
      }
    },
    "IPAMIPAddressManagementAddDnsAaaaRecordRequest": {
      "required": [
        "recordName",
        "nodeIPv6Address",
        "dnsIpAddress",
        "dnsZoneName"
      ],
      "type": "object",
      "properties": {
        "recordName": {
          "type": "string"
        },
        "nodeIPv6Address": {
          "type": "string"
        },
        "dnsIpAddress": {
          "type": "string"
        },
        "dnsZoneName": {
          "type": "string"
        }
      }
    },
    "IPAMIPAddressManagementChangeDnsAaaaRecordRequest": {
      "required": [
        "recordName",
        "nodeIpV6Address",
        "dnsIpAddress",
        "dnsZoneName",
        "newNodeIpV6Address"
      ],
      "type": "object",
      "properties": {
        "recordName": {
          "type": "string"
        },
        "nodeIpV6Address": {
          "type": "string"
        },
        "dnsIpAddress": {
          "type": "string"
        },
        "dnsZoneName": {
          "type": "string"
        },
        "newNodeIpV6Address": {
          "type": "string"
        }
      }
    },
    "IPAMIPAddressManagementRemoveDnsAaaaRecordRequest": {
      "required": [
        "recordName",
        "nodeIpV6Address",
        "dnsIpAddress",
        "dnsZoneName"
      ],
      "type": "object",
      "properties": {
        "recordName": {
          "type": "string"
        },
        "nodeIpV6Address": {
          "type": "string"
        },
        "dnsIpAddress": {
          "type": "string"
        },
        "dnsZoneName": {
          "type": "string"
        }
      }
    },
    "IPAMIPAddressManagementAddDnsARecordWithPtrRequest": {
      "required": [
        "recordName",
        "nodeIPv4Address",
        "dnsIpAddress",
        "dnsZoneName"
      ],
      "type": "object",
      "properties": {
        "recordName": {
          "type": "string"
        },
        "nodeIPv4Address": {
          "type": "string"
        },
        "dnsIpAddress": {
          "type": "string"
        },
        "dnsZoneName": {
          "type": "string"
        }
      }
    },
    "IPAMIPAddressManagementAddPtrToDnsARecordRequest": {
      "required": [
        "recordName",
        "nodeIPv4Address",
        "dnsIpAddress",
        "dnsZoneName"
      ],
      "type": "object",
      "properties": {
        "recordName": {
          "type": "string"
        },
        "nodeIPv4Address": {
          "type": "string"
        },
        "dnsIpAddress": {
          "type": "string"
        },
        "dnsZoneName": {
          "type": "string"
        }
      }
    },
    "IPAMIPAddressManagementAddPtrRecordRequest": {
      "required": [
        "recordName",
        "recordData",
        "dnsIpAddress",
        "dnsZoneName"
      ],
      "type": "object",
      "properties": {
        "recordName": {
          "type": "string"
        },
        "recordData": {
          "type": "string"
        },
        "dnsIpAddress": {
          "type": "string"
        },
        "dnsZoneName": {
          "type": "string"
        }
      }
    },
    "IPAMIPAddressManagementRemovePtrRecordRequest": {
      "required": [
        "recordName",
        "dnsIpAddress",
        "dnsZoneName"
      ],
      "type": "object",
      "properties": {
        "recordName": {
          "type": "string"
        },
        "dnsIpAddress": {
          "type": "string"
        },
        "dnsZoneName": {
          "type": "string"
        },
        "isRetryingDnsZoneSearch": {
          "type": "boolean"
        }
      }
    },
    "IPAMAttrDefineAddCustomPropertyRequest": {
      "required": [
        "propertyName",
        "description",
        "maxStringLength"
      ],
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "maxStringLength": {
          "type": "number"
        },
        "attributeType": {
          "type": "string"
        },
        "linkTitle": {
          "type": "string"
        },
        "addToIpAddress": {
          "type": "boolean"
        },
        "addToGroups": {
          "type": "boolean"
        }
      }
    },
    "IPAMAttrDefineUpdateCustomPropertyRequest": {
      "required": [
        "propertyName",
        "description",
        "maxStringLength",
        "linkTitle",
        "addToIpAddress",
        "addToGroups"
      ],
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "maxStringLength": {
          "type": "number"
        },
        "linkTitle": {
          "type": "string"
        },
        "addToIpAddress": {
          "type": "boolean"
        },
        "addToGroups": {
          "type": "boolean"
        }
      }
    },
    "IPAMAttrDefineDeleteCustomPropertyRequest": {
      "required": [
        "propertyName"
      ],
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        }
      }
    },
    "IPAMGroupsCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "IPAMGroupsCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "IPAMGroupsCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "IPAMGroupsCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "IPAMNodesCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "IPAMNodesCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "IPAMNodesCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "IPAMNodesCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionLicensingLicensesActivateOnlineRequest": {
      "required": [
        "LicenseKey",
        "LicenseVersion",
        "ProductName",
        "FirstName",
        "LastName",
        "Email",
        "Phone"
      ],
      "type": "object",
      "properties": {
        "LicenseKey": {
          "type": "string"
        },
        "LicenseVersion": {
          "type": "number"
        },
        "ProductName": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        }
      }
    },
    "OrionLicensingLicensesActivateOfflineRequest": {
      "required": [
        "LicenseToActivate"
      ],
      "type": "object",
      "properties": {
        "LicenseToActivate": {
          "type": "string"
        }
      }
    },
    "OrionLicensingLicensesDeactivateRequest": {
      "required": [
        "LicenseKey",
        "LicenseVersion",
        "ProductName",
        "ProvideReceipt"
      ],
      "type": "object",
      "properties": {
        "LicenseKey": {
          "type": "string"
        },
        "LicenseVersion": {
          "type": "number"
        },
        "ProductName": {
          "type": "string"
        },
        "ProvideReceipt": {
          "type": "boolean"
        }
      }
    },
    "OrionLicensingLicensesReAssignExactlyToRequest": {
      "required": [
        "LicenseKey",
        "LicenseVersion",
        "ProductName",
        "ServersOrPools"
      ],
      "type": "object",
      "properties": {
        "LicenseKey": {
          "type": "string"
        },
        "LicenseVersion": {
          "type": "number"
        },
        "ProductName": {
          "type": "string"
        },
        "ServersOrPools": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrionLicensingLicensesUnAssignFromAllServersRequest": {
      "required": [
        "LicenseKey",
        "LicenseVersion",
        "ProductName"
      ],
      "type": "object",
      "properties": {
        "LicenseKey": {
          "type": "string"
        },
        "LicenseVersion": {
          "type": "number"
        },
        "ProductName": {
          "type": "string"
        }
      }
    },
    "OrionLicensingLicensesFindValidAssignmentsRequest": {
      "required": [
        "LicenseKey",
        "LicenseVersion",
        "ProductName"
      ],
      "type": "object",
      "properties": {
        "LicenseKey": {
          "type": "string"
        },
        "LicenseVersion": {
          "type": "number"
        },
        "ProductName": {
          "type": "string"
        }
      }
    },
    "OrionLicensingLicensesGetEvaluationStateRequest": {
      "required": [
        "ProductName",
        "LicenseVersion"
      ],
      "type": "object",
      "properties": {
        "ProductName": {
          "type": "string"
        },
        "LicenseVersion": {
          "type": "number"
        }
      }
    },
    "OrionLicensingLicensesGetAvailableAssignmentsRequest": {
      "required": [
        "LicenseVersion",
        "ProductName"
      ],
      "type": "object",
      "properties": {
        "LicenseVersion": {
          "type": "number"
        },
        "ProductName": {
          "type": "string"
        }
      }
    },
    "OrionLicensingLicensesAddLicenseFilterRequest": {
      "required": [
        "ProductName",
        "LicenseVersion",
        "Tag",
        "LicenseType",
        "ApplicationMode"
      ],
      "type": "object",
      "properties": {
        "ProductName": {
          "type": "string"
        },
        "LicenseVersion": {
          "type": "number"
        },
        "Tag": {
          "type": "string"
        },
        "LicenseType": {
          "type": "string"
        },
        "ApplicationMode": {
          "type": "string"
        }
      }
    },
    "OrionLicensingLicensesRemoveLicenseFilterRequest": {
      "required": [
        "ProductName",
        "LicenseVersion"
      ],
      "type": "object",
      "properties": {
        "ProductName": {
          "type": "string"
        },
        "LicenseVersion": {
          "type": "number"
        }
      }
    },
    "OrionMapsProjectsCloneMapProjectsRequest": {
      "required": [
        "mapNamePlaceHolder",
        "mapNamePattern",
        "mapProjectIds"
      ],
      "type": "object",
      "properties": {
        "mapNamePlaceHolder": {
          "type": "string"
        },
        "mapNamePattern": {
          "type": "string"
        },
        "mapProjectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "System.Collections.Generic.IEnumerable~System.ValueTuple~System.String_System.String~~": {
      "type": "object"
    },
    "OrionMapsProjectsReplaceResourceRequest": {
      "required": [
        "oldResourceId",
        "newResourceName",
        "newResourceFile",
        "newResourceProperties"
      ],
      "type": "object",
      "properties": {
        "oldResourceId": {
          "type": "number"
        },
        "newResourceName": {
          "type": "string"
        },
        "newResourceFile": {
          "type": "string"
        },
        "newResourceProperties": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~System.ValueTuple~System.String_System.String~~"
        }
      }
    },
    "OrionMapsProjectsReplaceResourceAndMapInLimitationsRequest": {
      "required": [
        "oldResourceId",
        "newResourceId",
        "newMapProjectId"
      ],
      "type": "object",
      "properties": {
        "oldResourceId": {
          "type": "number"
        },
        "newResourceId": {
          "type": "number"
        },
        "newMapProjectId": {
          "type": "string"
        }
      }
    },
    "OrionMapsGraphsCreateContainerRequest": {
      "required": [
        "name",
        "owner",
        "frequency",
        "statusCalculator",
        "description",
        "pollingEnabled",
        "memberDefinitions",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "frequency": {
          "type": "number"
        },
        "statusCalculator": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "pollingEnabled": {
          "type": "boolean"
        },
        "memberDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Containers.DataProvider.MemberDefinitionInfo"
          }
        },
        "projectId": {
          "type": "string"
        }
      }
    },
    "OrionMapsGraphsUpdateContainerRequest": {
      "required": [
        "containerId",
        "name",
        "owner",
        "frequency",
        "statusCalculator",
        "description",
        "pollingEnabled",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "containerId": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "frequency": {
          "type": "number"
        },
        "statusCalculator": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "pollingEnabled": {
          "type": "boolean"
        },
        "projectId": {
          "type": "string"
        }
      }
    },
    "OrionMapsGraphsDeleteContainerRequest": {
      "required": [
        "containerId"
      ],
      "type": "object",
      "properties": {
        "containerId": {
          "type": "number"
        }
      }
    },
    "OrionMapsGraphMemberDefinitionsGetMembersRequest": {
      "required": [
        "definition"
      ],
      "type": "object",
      "properties": {
        "definition": {
          "type": "string"
        }
      }
    },
    "OrionMapsGraphMemberDefinitionsGetFirstNMembersRequest": {
      "required": [
        "definition",
        "topCountForEachDefinition"
      ],
      "type": "object",
      "properties": {
        "definition": {
          "type": "string"
        },
        "topCountForEachDefinition": {
          "type": "number"
        }
      }
    },
    "MetadataEntityGetAliasesRequest": {
      "required": [
        "query"
      ],
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "MetadataEntityGetSchemaLoadTimeRequest": {
      "type": "object"
    },
    "OrionMibsManagementGetDatabaseStateRequest": {
      "type": "object"
    },
    "SolarWinds.Orion.Mibs.Management.Common.MibVersioning.Models.DatabaseState": {
      "type": "object",
      "properties": {
        "AreListedEnginesUpToDate": {
          "type": "boolean"
        },
        "DownloadLink": {
          "type": "string"
        },
        "AvailableVersion": {
          "$ref": "#/definitions/System.Version"
        },
        "EnginesDatabaseStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Mibs.Management.Common.MibVersioning.Models.EngineDatabaseState"
          }
        }
      }
    },
    "SolarWinds.Orion.Mibs.Management.Common.MibVersioning.Models.EngineDatabaseState": {
      "type": "object",
      "properties": {
        "EngineId": {
          "type": "number"
        },
        "HostOrIp": {
          "type": "string"
        },
        "ServerType": {
          "$ref": "#/definitions/SolarWinds.Orion.Models.EngineServerType"
        },
        "InstalledVersion": {
          "$ref": "#/definitions/System.Version"
        }
      }
    },
    "SolarWinds.Orion.Models.EngineServerType": {
      "enum": [
        "Primary",
        "Additional",
        "RemoteCollector"
      ],
      "type": "string"
    },
    "OrionNetflowInterfaceSourcesEnableFlowInterfaceSourcesRequest": {
      "required": [
        "interfaceIds"
      ],
      "type": "object",
      "properties": {
        "interfaceIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionNetflowInterfaceSourcesDisableFlowInterfaceSourcesRequest": {
      "required": [
        "interfaceIds"
      ],
      "type": "object",
      "properties": {
        "interfaceIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "SolarWinds.Netflow.Contracts.InterfaceSources.FlowExporterConfiguration": {
      "type": "object"
    },
    "OrionNetflowInterfaceSourcesSetExporterFlowDirectionRequest": {
      "required": [
        "configurations"
      ],
      "type": "object",
      "properties": {
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Netflow.Contracts.InterfaceSources.FlowExporterConfiguration"
          }
        }
      }
    },
    "OrionNetflowNodeSourcesEnableFlowNodeSourcesRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionNetflowNodeSourcesDisableFlowNodeSourcesRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionNetflowNodeSourcesSetManualSamplingRateRequest": {
      "required": [
        "nodeId",
        "samplingRate"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "samplingRate": {
          "type": "number"
        }
      }
    },
    "OrionNetflowNodeSourcesSetAutoDetectedSamplingRateRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Netflow.Contracts.IPGroups.IPRange": {
      "type": "object",
      "properties": {
        "StartIP": {
          "type": "string"
        },
        "EndIP": {
          "type": "string"
        },
        "CIDR": {
          "type": "string"
        },
        "CIDRBased": {
          "type": "boolean"
        }
      }
    },
    "OrionNetflowIPAddressGroupsManagementSetIPRangesRequest": {
      "required": [
        "ipGroupId",
        "ipRanges",
        "autoResolveApplicationConflicts"
      ],
      "type": "object",
      "properties": {
        "ipGroupId": {
          "type": "number"
        },
        "ipRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Netflow.Contracts.IPGroups.IPRange"
          }
        },
        "autoResolveApplicationConflicts": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.Netflow.Contracts.IPGroups.ManageIpGroupsResult": {
      "type": "object",
      "properties": {
        "SuccessResult": {
          "$ref": "#/definitions/SolarWinds.Netflow.Contracts.IPGroups.ManageIpGroupsResult"
        },
        "Result": {
          "$ref": "#/definitions/SolarWinds.Netflow.Contracts.IPGroups.ManageIpGroupsResultCode"
        },
        "ApplicationCollisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Netflow.Contracts.IPGroups.ApplicationCollision"
          }
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Netflow.Contracts.IPGroups.ManageIpGroupsResultCode": {
      "enum": [
        "Succeed",
        "ApplicationCollision",
        "InvalidIpGroupId",
        "GenericError"
      ],
      "type": "string"
    },
    "SolarWinds.Netflow.Contracts.IPGroups.ApplicationCollision": {
      "type": "object",
      "properties": {
        "ApplicationId": {
          "type": "number"
        },
        "ApplicationName": {
          "type": "string"
        },
        "ApplicationProtocol": {
          "$ref": "#/definitions/SolarWinds.Netflow.Contracts.Applications.ApplicationProperties-ApplicationProtocol"
        },
        "ApplicationDirection": {
          "$ref": "#/definitions/SolarWinds.Netflow.Contracts.Applications.ApplicationProperties-ConditionDirection"
        },
        "ApplicationPort": {
          "type": "number"
        },
        "IpGroupId": {
          "type": "number"
        },
        "IpGroupName": {
          "type": "string"
        },
        "IsAutoResolveVictim": {
          "type": "boolean"
        },
        "HasChangedIpGroup": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.Netflow.Contracts.Applications.ApplicationProperties-ApplicationProtocol": {
      "enum": [
        "None",
        "TCP",
        "UDP",
        "Both"
      ],
      "type": "string"
    },
    "SolarWinds.Netflow.Contracts.Applications.ApplicationProperties-ConditionDirection": {
      "enum": [
        "None",
        "Source",
        "Destination",
        "Both"
      ],
      "type": "string"
    },
    "OrionNetflowIPAddressGroupsManagementDeleteAllIpGroupsRequest": {
      "required": [
        "autoResolveApplicationConflicts"
      ],
      "type": "object",
      "properties": {
        "autoResolveApplicationConflicts": {
          "type": "boolean"
        }
      }
    },
    "OrionNetflowIPAddressGroupsManagementDeleteIpGroupsRequest": {
      "required": [
        "ipGroupIds",
        "autoResolveApplicationConflicts"
      ],
      "type": "object",
      "properties": {
        "ipGroupIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "autoResolveApplicationConflicts": {
          "type": "boolean"
        }
      }
    },
    "OrionNetflowIPAddressGroupsManagementSetIpGroupsAsModifiedRequest": {
      "type": "object"
    },
    "OrionNetflowIPGroupExternalRelationCreateFromIPAMGroupRequest": {
      "required": [
        "externalIpGroupId"
      ],
      "type": "object",
      "properties": {
        "externalIpGroupId": {
          "type": "number"
        }
      }
    },
    "OrionOLMNodesEnableLogMonitoringRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        }
      }
    },
    "OrionOLMNodesDisableLogMonitoringRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        }
      }
    },
    "OrionOLMLogEntryUidMaxForDateRequest": {
      "required": [
        "dateTime"
      ],
      "type": "object",
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrionOLMLogEntryUidMinForDateRequest": {
      "required": [
        "dateTime"
      ],
      "type": "object",
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrionOLMLogEntryUidExtractDateRequest": {
      "required": [
        "uniqueId"
      ],
      "type": "object",
      "properties": {
        "uniqueId": {
          "type": "number"
        }
      }
    },
    "OrionOLMProcessingRuleEnableRuleRequest": {
      "required": [
        "ruleId"
      ],
      "type": "object",
      "properties": {
        "ruleId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "OrionOLMProcessingRuleDisableRuleRequest": {
      "required": [
        "ruleId"
      ],
      "type": "object",
      "properties": {
        "ruleId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "OrionOLMProcessingRuleImportRulesRequest": {
      "required": [
        "rulesJson"
      ],
      "type": "object",
      "properties": {
        "rulesJson": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.LogMgmt.RuleProcessing.Models.ImportRuleSummary": {
      "type": "object",
      "properties": {
        "Total": {
          "type": "number"
        },
        "Imported": {
          "type": "number"
        },
        "Failed": {
          "type": "number"
        },
        "Skipped": {
          "type": "number"
        },
        "Errors": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~System.ValueTuple~System.Guid_System.Collections.Generic.IEnumerable~System.String~~~"
        },
        "ErrorDetail": {
          "$ref": "#/definitions/SolarWinds.Orion.LogMgmt.RuleProcessing.Models.ErrorDetail"
        }
      }
    },
    "System.Collections.Generic.IEnumerable~System.ValueTuple~System.Guid_System.Collections.Generic.IEnumerable~System.String~~~": {
      "type": "object"
    },
    "SolarWinds.Orion.LogMgmt.RuleProcessing.Models.ErrorDetail": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Arguments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrionOLMProcessingRuleExportRulesRequest": {
      "required": [
        "identifiers",
        "separator"
      ],
      "type": "object",
      "properties": {
        "identifiers": {
          "type": "string"
        },
        "separator": {
          "type": "string"
        }
      }
    },
    "OrionOrchestratorsInfoAddAristaWMNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "baseUrl",
        "apiKeyId",
        "apiKeyValue",
        "enableMetricsPolling",
        "locationId",
        "locationName"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "description": "\n        \n          ID of the Polling Engine to add the Arista Wireless Manager Node, int\n          Default is Main Polling Engine with ID 1\n        \n      ",
          "type": "number"
        },
        "caption": {
          "description": "\n        \n          Custom node caption, string\n          Example: solarwinds.arista.com\n        \n      ",
          "type": "string"
        },
        "baseUrl": {
          "description": "\n        \n          Arista Wireless Manager API base URL, string\n          Example: https://sampletesturl.com/wifi/api/ \n        \n      ",
          "type": "string"
        },
        "apiKeyId": {
          "description": "\n        \n          Arista Wireless Manager API Key ID for authentication, string\n        \n      ",
          "type": "string"
        },
        "apiKeyValue": {
          "description": "\n        \n          Arista Wireless Manager API Key Value for authentication, string\n        \n      ",
          "type": "string"
        },
        "enableMetricsPolling": {
          "description": "\n        \n          Determines if Enable Metrics Polling is enabled, boolean\n          1 = True, 0 = False\n        \n      ",
          "type": "boolean"
        },
        "locationId": {
          "description": "\n        \n          location ID of Arista WM, string\n          Should be a parsable Integer reperesented as String\n          Optional parameter, It can be kept blank. Note - If locationName is provided, this is a mandatory parameter\n          Default Value: \"0\".\n        \n      ",
          "type": "string"
        },
        "locationName": {
          "description": "\n        \n          location Name of AristaWM, string\n          Optional parameter, It can be kept blank. Note - If locationId is provided, this is a mandatory parameter\n          Default Value: \"All Locations\".\n        \n      ",
          "type": "string"
        }
      }
    },
    "OrionOrchestratorsInfoAddArubaCentralNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "accessTokenUrl",
        "clientId",
        "clientSecret",
        "customerId",
        "username",
        "password",
        "groupId",
        "enableMetricsPolling"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "type": "number"
        },
        "caption": {
          "type": "string"
        },
        "accessTokenUrl": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "enableMetricsPolling": {
          "type": "boolean"
        }
      }
    },
    "OrionOrchestratorsInfoAddExtremeCloudIQNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "accessTokenUrl",
        "username",
        "password",
        "locationId",
        "enableMetricsPolling"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "type": "number"
        },
        "caption": {
          "type": "string"
        },
        "accessTokenUrl": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "enableMetricsPolling": {
          "type": "boolean"
        }
      }
    },
    "OrionOrchestratorsInfoAddJuniperMistNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "accessTokenUrl",
        "organizationId",
        "username",
        "password",
        "ApiToken",
        "siteId",
        "siteName",
        "enableMetricsPolling"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "type": "number"
        },
        "caption": {
          "type": "string"
        },
        "accessTokenUrl": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "ApiToken": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        },
        "siteName": {
          "type": "string"
        },
        "enableMetricsPolling": {
          "type": "boolean"
        }
      }
    },
    "OrionOrchestratorsInfoAddFortiLanCloudNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "apiId",
        "password",
        "apiUrl",
        "enableMetricsPolling"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "type": "number"
        },
        "caption": {
          "type": "string"
        },
        "apiId": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "apiUrl": {
          "type": "string"
        },
        "enableMetricsPolling": {
          "type": "boolean"
        }
      }
    },
    "OrionOrchestratorsInfoAddMerakiNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "apiKey",
        "organizationId",
        "enableMetricsPolling"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "type": "number"
        },
        "caption": {
          "type": "string"
        },
        "apiKey": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "enableMetricsPolling": {
          "type": "boolean"
        }
      }
    },
    "OrionOrchestratorsInfoAddRuckusOneNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "region",
        "tenantId",
        "clientId",
        "clientSecret",
        "enableMetricsPolling",
        "venueName",
        "venueId"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "description": "\n        \n          ID of the Polling Engine to add the Ruckus One node, int\n          Default is Main Polling Engine with ID 1\n        \n      ",
          "type": "number"
        },
        "caption": {
          "description": "\n        \n          Custom node caption, string\n          Example: solarwinds.ruckusone.cloud\n        \n      ",
          "type": "string"
        },
        "region": {
          "description": "\n        \n          Region of Ruckus One for authentication, string\n          Supported regions are: North America, Asia and Europe\n        \n      ",
          "type": "string"
        },
        "tenantId": {
          "description": "\n        \n          Tenant ID of Ruckus One for authentication, string\n        \n      ",
          "type": "string"
        },
        "clientId": {
          "description": "\n        \n          Client ID of Ruckus One for authentication, string\n        \n      ",
          "type": "string"
        },
        "clientSecret": {
          "description": "\n        \n          Client Secret of Ruckus One for authentication, string\n        \n      ",
          "type": "string"
        },
        "enableMetricsPolling": {
          "description": "\n        \n          Determines if Enable Metrics Polling is enabled, boolean\n          1 = True, 0 = False\n        \n      ",
          "type": "boolean"
        },
        "venueName": {
          "description": "\n        \n          Venue Name of Ruckus One, string\n          Optional parameter, It can be kept blank. Note - If venueId is provided, this is a mandatory parameter\n          Default Value: \"All Venues\".\n        \n      ",
          "type": "string"
        },
        "venueId": {
          "description": "\n        \n          Venue ID of Ruckus One, string\n          Optional parameter, It can be kept blank. Note - If venueName is provided, this is a mandatory parameter\n          Default Value: \"0\".\n        \n      ",
          "type": "string"
        }
      }
    },
    "OrionOrchestratorsInfoAddVeloCloudNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "hostname"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "type": "number"
        },
        "caption": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "apiToken": {
          "type": "string"
        }
      }
    },
    "OrionOrchestratorsInfoAddViptelaNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "hostname",
        "username",
        "password"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "type": "number"
        },
        "caption": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "OrionOrchestratorsInfoAddPrismaNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "clientId",
        "clientSecret",
        "tsgId"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "type": "number"
        },
        "caption": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "tsgId": {
          "type": "string"
        }
      }
    },
    "OrionOrchestratorsInfoAddArubaNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "hostname"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "type": "number"
        },
        "caption": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "apiToken": {
          "type": "string"
        }
      }
    },
    "OrionOrchestratorsInfoAddFortinetFortiManagerNodeRequest": {
      "required": [
        "engineId",
        "caption",
        "hostname"
      ],
      "type": "object",
      "properties": {
        "engineId": {
          "type": "number"
        },
        "caption": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "OrionAlertActiveAcknowledgeRequest": {
      "required": [
        "alertObjectIds",
        "notes"
      ],
      "type": "object",
      "properties": {
        "alertObjectIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "OrionAlertActiveUnacknowledgeRequest": {
      "required": [
        "alertObjectIds"
      ],
      "type": "object",
      "properties": {
        "alertObjectIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionAlertActiveClearAlertRequest": {
      "required": [
        "alertObjectIds"
      ],
      "type": "object",
      "properties": {
        "alertObjectIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionAlertActiveAppendNoteRequest": {
      "required": [
        "alertObjectIds",
        "note"
      ],
      "type": "object",
      "properties": {
        "alertObjectIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "note": {
          "type": "string"
        }
      }
    },
    "OrionAlertConfigurationsImportRequest": {
      "required": [
        "alertXml"
      ],
      "type": "object",
      "properties": {
        "alertXml": {
          "type": "string"
        },
        "stripSensitiveInformation": {
          "type": "boolean"
        },
        "protectionPassword": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Core.Common.Alerting.AlertImportResult": {
      "type": "object",
      "properties": {
        "AlertId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "MigrationMessage": {
          "type": "string"
        },
        "IncorrectPasswordForDecryptSensitiveData": {
          "type": "boolean"
        },
        "AlertDefinitionIsNotSupported": {
          "type": "boolean"
        }
      }
    },
    "OrionAlertConfigurationsExportRequest": {
      "required": [
        "alertId"
      ],
      "type": "object",
      "properties": {
        "alertId": {
          "type": "number"
        },
        "stripSensitiveData": {
          "type": "boolean"
        },
        "protectionPassword": {
          "type": "string"
        }
      }
    },
    "OrionAlertConfigurationsGetComplexPropertiesByAlertIDRequest": {
      "required": [
        "alertId"
      ],
      "type": "object",
      "properties": {
        "alertId": {
          "type": "number"
        }
      }
    },
    "OrionAlertConfigurationsCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionAlertConfigurationsCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionAlertConfigurationsCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionAlertConfigurationsCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionAlertConfigurationsCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionActionsDeleteActionsByAssignmentsRequest": {
      "required": [
        "parentID",
        "environmentType"
      ],
      "type": "object",
      "properties": {
        "parentID": {
          "type": "number"
        },
        "environmentType": {
          "type": "string"
        }
      }
    },
    "OrionActionsDeleteActionsByAssignmentsAndCategoryRequest": {
      "required": [
        "parentID",
        "environmentType",
        "categoryType"
      ],
      "type": "object",
      "properties": {
        "parentID": {
          "type": "number"
        },
        "environmentType": {
          "type": "string"
        },
        "categoryType": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.Actions.ActionDefinition": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "ActionTypeID": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "Approved": {
          "type": "boolean"
        },
        "Order": {
          "type": "number"
        },
        "IconPath": {
          "type": "string"
        },
        "IsShared": {
          "type": "boolean"
        },
        "Properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionProperty"
          }
        },
        "TimePeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Schedules.TimePeriodSchedule"
          }
        },
        "TransitiveID": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.Actions.ActionProperty": {
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "IsShared": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.Schedules.TimePeriodSchedule": {
      "type": "object",
      "properties": {
        "CronExpressionTimeZoneInfo": {
          "$ref": "#/definitions/System.TimeZoneInfo"
        },
        "FrequencyId": {
          "type": "number"
        },
        "StartTime": {
          "format": "date-time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "type": "string"
        },
        "CronExpression": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Duration": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "EnabledDuringTimePeriod": {
          "type": "boolean"
        },
        "CronExpressionTimeZoneInfoId": {
          "type": "string"
        }
      }
    },
    "System.TimeZoneInfo": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "StandardName": {
          "type": "string"
        },
        "DaylightName": {
          "type": "string"
        },
        "BaseUtcOffset": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "SupportsDaylightSavingTime": {
          "type": "boolean"
        },
        "Local": {
          "$ref": "#/definitions/System.TimeZoneInfo"
        },
        "Utc": {
          "$ref": "#/definitions/System.TimeZoneInfo"
        }
      }
    },
    "OrionActionsSaveActionsForAssignmentsRequest": {
      "required": [
        "parentID",
        "environmentType",
        "categoryType",
        "actions"
      ],
      "type": "object",
      "properties": {
        "parentID": {
          "type": "number"
        },
        "environmentType": {
          "type": "string"
        },
        "categoryType": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionDefinition"
          }
        }
      }
    },
    "OrionActionsUpdateActionRequest": {
      "required": [
        "action"
      ],
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionDefinition"
        }
      }
    },
    "OrionActionsUpdateActionsPropertiesRequest": {
      "required": [
        "properties",
        "actionsIds"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionProperty"
          }
        },
        "actionsIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "System.Collections.Generic.KeyValuePair~System.Nullable~System.Int32~_System.String~": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "number"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "OrionActionsUpdateActionsDescriptionsRequest": {
      "required": [
        "actionsDescriptions"
      ],
      "type": "object",
      "properties": {
        "actionsDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.Nullable~System.Int32~_System.String~"
          }
        }
      }
    },
    "OrionActionsUpdateActionsFrequenciesRequest": {
      "required": [
        "timePeriods",
        "actionsIds"
      ],
      "type": "object",
      "properties": {
        "timePeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Schedules.TimePeriodSchedule"
          }
        },
        "actionsIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "SolarWinds.Orion.Core.Models.Actions.Contexts.AlertingActionContext": {
      "type": "object",
      "properties": {
        "ExecutionMode": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionExecutionModeType"
        },
        "EnviromentType": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionEnviromentType"
        },
        "EntityType": {
          "type": "string"
        },
        "EntityUri": {
          "type": "string"
        },
        "EntityUris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IsGlobalAlert": {
          "type": "boolean"
        },
        "AlertContext": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.Contexts.AlertContext"
        },
        "AlertActiveId": {
          "type": "number"
        },
        "AlertObjectId": {
          "type": "number"
        },
        "NetObjectData": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Alerting.NetObjectData"
        },
        "ObjectDataExists": {
          "type": "boolean"
        },
        "MacroContext": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.MacroParsing.MacroContext"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.Actions.ActionExecutionModeType": {
      "enum": [
        "Trigger",
        "Reset",
        "Test"
      ],
      "type": "string"
    },
    "SolarWinds.Orion.Core.Models.Actions.ActionEnviromentType": {
      "enum": [
        "Alerting",
        "Reporting",
        "WorldMap",
        "Federation"
      ],
      "type": "string"
    },
    "SolarWinds.Orion.Core.Models.Actions.Contexts.AlertContext": {
      "type": "object",
      "properties": {
        "AlertName": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Core.Common.Alerting.NetObjectData": {
      "type": "object",
      "properties": {
        "ActiveObject": {
          "type": "string"
        },
        "CompositeId": {
          "type": "string"
        },
        "ObjectType": {
          "type": "string"
        },
        "ObjectName": {
          "type": "string"
        },
        "NodeID": {
          "type": "number"
        },
        "NodeName": {
          "type": "string"
        },
        "ActiveObjectPrefix": {
          "type": "string"
        },
        "NetObjectId": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.MacroParsing.MacroContext": {
      "type": "object",
      "properties": {
        "Contexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Models.MacroParsing.ContextBase"
          }
        },
        "AvaibleDefinitions": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~SolarWinds.Orion.Core.Models.MacroParsing.MacroDefinition~"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.MacroParsing.ContextBase": {
      "type": "object"
    },
    "System.Collections.Generic.IEnumerable~SolarWinds.Orion.Core.Models.MacroParsing.MacroDefinition~": {
      "type": "object"
    },
    "OrionActionsTestAlertingActionRequest": {
      "required": [
        "action",
        "context"
      ],
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionDefinition"
        },
        "context": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.Contexts.AlertingActionContext"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.Actions.ActionResult": {
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionStatus"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "ActionTitle": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.Actions.ActionStatus": {
      "enum": [
        "Unknown",
        "Success",
        "Failed",
        "Canceled",
        "NotApproved"
      ],
      "type": "string"
    },
    "SolarWinds.Orion.Core.Models.Actions.Contexts.ReportingActionContext": {
      "type": "object",
      "properties": {
        "UrlsGroupedByLeftPart": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Collections.Generic.List~System.String~~"
          }
        },
        "AccountID": {
          "type": "string"
        },
        "WebsiteID": {
          "type": "number"
        },
        "EnviromentType": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionEnviromentType"
        },
        "MacroContext": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.MacroParsing.MacroContext"
        }
      }
    },
    "System.Collections.Generic.KeyValuePair~System.String_System.Collections.Generic.List~System.String~~": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrionActionsTestReportingActionRequest": {
      "required": [
        "action",
        "context"
      ],
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.ActionDefinition"
        },
        "context": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Actions.Contexts.ReportingActionContext"
        }
      }
    },
    "OrionAlertSuppressionSuppressAlertsRequest": {
      "required": [
        "entityUris"
      ],
      "type": "object",
      "properties": {
        "entityUris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "suppressFrom": {
          "format": "date-time",
          "type": "string"
        },
        "suppressUntil": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrionAlertSuppressionResumeAlertsRequest": {
      "required": [
        "entityUris"
      ],
      "type": "object",
      "properties": {
        "entityUris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrionAlertSuppressionGetAlertSuppressionStateRequest": {
      "required": [
        "entityUris"
      ],
      "type": "object",
      "properties": {
        "entityUris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SolarWinds.Orion.Core.Common.Models.Alerts.EntityAlertSuppressionState": {
      "type": "object",
      "properties": {
        "EntityUri": {
          "type": "string"
        },
        "SuppressedParentUri": {
          "type": "string"
        },
        "SuppressionMode": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.Alerts.EntityAlertSuppressionMode"
        },
        "SuppressedFrom": {
          "format": "date-time",
          "type": "string"
        },
        "SuppressedUntil": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Core.Common.Models.Alerts.EntityAlertSuppressionMode": {
      "enum": [
        "NotSuppressed",
        "SuppressedByItself",
        "SuppressedByParent",
        "SuppressionScheduledForItself",
        "SuppressionScheduledForParent"
      ],
      "type": "string"
    },
    "OrionAPIPollerApiPollerAssignTemplateRequest": {
      "required": [
        "entityType",
        "entityId",
        "templateId",
        "configuration",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string"
        },
        "entityId": {
          "type": "number"
        },
        "templateId": {
          "type": "number"
        },
        "configuration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
          }
        }
      }
    },
    "OrionAPIPollerApiPollerExportTemplateFromApiPollerRequest": {
      "required": [
        "apiPollerId"
      ],
      "type": "object",
      "properties": {
        "apiPollerId": {
          "type": "number"
        }
      }
    },
    "OrionAPIPollerApiPollerCreateApiPollerFromTemplateRequest": {
      "required": [
        "entityType",
        "entityId",
        "template",
        "configuration",
        "parameters"
      ],
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string"
        },
        "entityId": {
          "type": "number"
        },
        "template": {
          "type": "string"
        },
        "configuration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
          }
        }
      }
    },
    "OrionAPIPollerTemplatesExportTemplateRequest": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        }
      }
    },
    "OrionAPIPollerTemplatesImportTemplateRequest": {
      "required": [
        "template"
      ],
      "type": "object",
      "properties": {
        "template": {
          "type": "string"
        }
      }
    },
    "OrionAPIPollerTemplatesDeleteTemplateRequest": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        }
      }
    },
    "OrionReportDuplicateReportRequest": {
      "required": [
        "reportID",
        "accountID"
      ],
      "type": "object",
      "properties": {
        "reportID": {
          "type": "number"
        },
        "accountID": {
          "type": "string"
        }
      }
    },
    "OrionReportCreateReportRequest": {
      "required": [
        "name",
        "description",
        "limitationCategory",
        "category",
        "title",
        "subtitle",
        "definition",
        "isFavorite",
        "userName"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "limitationCategory": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "isFavorite": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "OrionReportUpdateReportRequest": {
      "required": [
        "reportId",
        "name",
        "description",
        "limitationCategory",
        "category",
        "title",
        "subtitle",
        "definition",
        "isFavorite",
        "userName"
      ],
      "type": "object",
      "properties": {
        "reportId": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "limitationCategory": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "isFavorite": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "OrionReportDeleteReportRequest": {
      "required": [
        "reportID"
      ],
      "type": "object",
      "properties": {
        "reportID": {
          "type": "number"
        }
      }
    },
    "OrionReportFavoritesDeleteReportFavoriteMarkRequest": {
      "required": [
        "reportID",
        "accountID"
      ],
      "type": "object",
      "properties": {
        "reportID": {
          "type": "number"
        },
        "accountID": {
          "type": "string"
        }
      }
    },
    "OrionReportFavoritesAddReportFavoriteMarkRequest": {
      "required": [
        "reportID",
        "accountID"
      ],
      "type": "object",
      "properties": {
        "reportID": {
          "type": "number"
        },
        "accountID": {
          "type": "string"
        }
      }
    },
    "OrionReportsCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionReportsCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionReportsCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionReportsCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionReportsCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Verbs.Discovery-CorePluginConfigurationContext": {
      "type": "object",
      "properties": {
        "BulkList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-IpAddress"
          }
        },
        "IpRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-IpAddressRange"
          }
        },
        "Subnets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-AddressSubnet"
          }
        },
        "ActiveDirectories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-ActiveDirectory"
          }
        },
        "Credentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-SharedCredentialInfo"
          }
        },
        "WmiRetriesCount": {
          "type": "number"
        },
        "WmiRetryIntervalMiliseconds": {
          "type": "number"
        },
        "PreferredPollingMethod": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-PreferredPollingMethod"
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Verbs.Discovery-IpAddress": {
      "type": "object",
      "properties": {
        "Address": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Verbs.Discovery-IpAddressRange": {
      "type": "object",
      "properties": {
        "StartAddress": {
          "type": "string"
        },
        "EndAddress": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Verbs.Discovery-AddressSubnet": {
      "type": "object",
      "properties": {
        "SubnetIP": {
          "type": "string"
        },
        "SubnetMask": {
          "type": "string"
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Verbs.Discovery-ActiveDirectory": {
      "type": "object",
      "properties": {
        "ADName": {
          "type": "string"
        },
        "OrganizationalUnits": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Credentials": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-SharedCredentialInfo"
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Verbs.Discovery-SharedCredentialInfo": {
      "type": "object",
      "properties": {
        "CredentialID": {
          "type": "number"
        },
        "Order": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Verbs.Discovery-PreferredPollingMethod": {
      "enum": [
        "SNMP",
        "WMI"
      ],
      "type": "string"
    },
    "OrionDiscoveryCreateCorePluginConfigurationRequest": {
      "required": [
        "context"
      ],
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-CorePluginConfigurationContext"
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Verbs.Discovery-StartDiscoveryContext": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "JobTimeoutSeconds": {
          "type": "number"
        },
        "SearchTimeoutMiliseconds": {
          "type": "number"
        },
        "SnmpTimeoutMiliseconds": {
          "type": "number"
        },
        "SnmpRetries": {
          "type": "number"
        },
        "RepeatIntervalMiliseconds": {
          "type": "number"
        },
        "SnmpPort": {
          "type": "number"
        },
        "HopCount": {
          "type": "number"
        },
        "PreferredSnmpVersion": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-SnmpVersion"
        },
        "DisableIcmp": {
          "type": "boolean"
        },
        "AllowDuplicateNodes": {
          "type": "boolean"
        },
        "IsAutoImport": {
          "type": "boolean"
        },
        "IsHidden": {
          "type": "boolean"
        },
        "PluginConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-PluginConfiguration"
          }
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Verbs.Discovery-SnmpVersion": {
      "enum": [
        "None",
        "SNMP1",
        "SNMP2c",
        "SNMP3"
      ],
      "type": "string"
    },
    "SolarWinds.Data.Providers.Orion.Verbs.Discovery-PluginConfiguration": {
      "type": "object",
      "properties": {
        "PluginConfigurationItem": {
          "type": "string"
        }
      }
    },
    "OrionDiscoveryStartDiscoveryRequest": {
      "required": [
        "context"
      ],
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.Discovery-StartDiscoveryContext"
        }
      }
    },
    "OrionDiscoveryStartDiscoveryProfileRequest": {
      "required": [
        "discoveryProfileId"
      ],
      "type": "object",
      "properties": {
        "discoveryProfileId": {
          "type": "number"
        }
      }
    },
    "OrionDiscoveryCancelDiscoveryRequest": {
      "required": [
        "profileId"
      ],
      "type": "object",
      "properties": {
        "profileId": {
          "type": "number"
        }
      }
    },
    "OrionDiscoveryGetDiscoveryProgressRequest": {
      "required": [
        "profileId"
      ],
      "type": "object",
      "properties": {
        "profileId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Orion.Core.Common.Models.DiscoveryImportConfiguration": {
      "type": "object",
      "properties": {
        "ProfileID": {
          "type": "number"
        },
        "NodeIDs": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "DeleteProfileAfterImport": {
          "type": "boolean"
        }
      }
    },
    "OrionDiscoveryImportDiscoveryResultsRequest": {
      "required": [
        "cfg"
      ],
      "type": "object",
      "properties": {
        "cfg": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.DiscoveryImportConfiguration"
        }
      }
    },
    "OrionDiscoveryGetImportDiscoveryResultsProgressRequest": {
      "required": [
        "importId"
      ],
      "type": "object",
      "properties": {
        "importId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.Discovery.DiscoveryImportProgressInfo": {
      "type": "object",
      "properties": {
        "Finished": {
          "type": "boolean"
        },
        "OverallProgress": {
          "type": "number"
        },
        "PhaseProgress": {
          "type": "number"
        },
        "PhaseName": {
          "type": "string"
        },
        "NewLogText": {
          "type": "string"
        },
        "LogBuilder": {
          "$ref": "#/definitions/System.Text.StringBuilder"
        }
      }
    },
    "System.Text.StringBuilder": {
      "type": "object",
      "properties": {
        "Capacity": {
          "type": "number"
        },
        "MaxCapacity": {
          "type": "number"
        },
        "Length": {
          "type": "number"
        },
        "Chars": {
          "$ref": "#/definitions/System.Char"
        }
      }
    },
    "System.Char": {
      "type": "object"
    },
    "OrionDiscoveryDeleteDiscoveryProfileRequest": {
      "required": [
        "profileId"
      ],
      "type": "object",
      "properties": {
        "profileId": {
          "description": "Profile ID of discovery profile.",
          "type": "number"
        }
      }
    },
    "OrionDiscoveryResolveHostnameFromIpRequest": {
      "required": [
        "ipAddress",
        "engineId"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "engineId": {
          "type": "number"
        }
      }
    },
    "OrionDiscoveryResolveIpFromHostnameRequest": {
      "required": [
        "hostname",
        "preferredAddressFamily",
        "engineId"
      ],
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "preferredAddressFamily": {
          "$ref": "#/definitions/System.Net.Sockets.AddressFamily"
        },
        "engineId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.Credentials.SNMPVersion": {
      "enum": [
        "None",
        "SNMP1",
        "SNMP2c",
        "SNMP3"
      ],
      "type": "string"
    },
    "OrionDiscoveryValidateCredentialsRequest": {
      "required": [
        "ipAddress",
        "port",
        "credentialsType",
        "credentialsProperties",
        "engineId"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "port": {
          "type": "number"
        },
        "credentialsType": {
          "type": "string"
        },
        "credentialsProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
          }
        },
        "engineId": {
          "type": "number"
        },
        "preferredSnmpVersion": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Credentials.SNMPVersion"
        }
      }
    },
    "SolarWinds.Data.Providers.Orion.Verbs.AccountsVerbs.AccountType": {
      "enum": [
        "System",
        "User"
      ],
      "type": "string"
    },
    "OrionAccountsCreateAccountRequest": {
      "required": [
        "accountType",
        "properties"
      ],
      "type": "object",
      "properties": {
        "accountType": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.Orion.Verbs.AccountsVerbs.AccountType"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
          }
        }
      }
    },
    "OrionAccountsCreateOrionAccountRequest": {
      "required": [
        "accountID",
        "password"
      ],
      "type": "object",
      "properties": {
        "accountID": {
          "description": "Required. Unique Account ID.",
          "type": "string"
        },
        "password": {
          "description": "Required. Account password.",
          "type": "string"
        }
      }
    },
    "OrionAccountsCreateSamlAccountRequest": {
      "required": [
        "accountType",
        "userOrGroupName"
      ],
      "type": "object",
      "properties": {
        "accountType": {
          "description": "Required. A flag that indicates the type of account(s) to add. '5' for SAML User, '6' for SAML Group.",
          "type": "number"
        },
        "userOrGroupName": {
          "description": "Required. SAML User or Group name used to map the account. This value has to match the claim in the SAML response to log in as this user.",
          "type": "string"
        }
      }
    },
    "OrionAccountsCreateWindowsAccountRequest": {
      "required": [
        "accountType",
        "userOrGroupName"
      ],
      "type": "object",
      "properties": {
        "accountType": {
          "description": "Required. A flag that indicates the type of Windows account(s) to add. '2' for Windows User, '3' for Windows Group.",
          "type": "number"
        },
        "userOrGroupName": {
          "description": "Required. Windows User or Group name to add. Use Domain\\\\Username or Domain\\\\Groupname format. All accounts that match the string provided will be added.",
          "type": "string"
        },
        "adminUser": {
          "description": "Optional. User name of the account that has administrative access to Active Directory or local domain accounts.",
          "type": "string"
        },
        "adminPassword": {
          "description": "Optional. Password for the user account granted administrative access to Active Directory or local domain accounts.",
          "type": "string"
        }
      }
    },
    "OrionAccountsUpdateAccountRequest": {
      "required": [
        "accountID",
        "properties"
      ],
      "type": "object",
      "properties": {
        "accountID": {
          "description": "Required. Account ID as defined in Orion.Accounts.",
          "type": "string"
        },
        "properties": {
          "description": "Required. A non-empty dictionary of name-value pairs that specify which properties to update.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
          }
        }
      }
    },
    "OrionAccountsDeleteAccountRequest": {
      "required": [
        "accountID"
      ],
      "type": "object",
      "properties": {
        "accountID": {
          "description": "Required. Account ID as defined in Orion.Accounts.",
          "type": "string"
        }
      }
    },
    "OrionAccountsChangePasswordRequest": {
      "required": [
        "accountId",
        "password"
      ],
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Required. Account ID as defined in Orion.Accounts.",
          "type": "string"
        },
        "password": {
          "description": "Required. New account password.",
          "type": "string"
        }
      }
    },
    "OrionAccountsResetPasswordRequest": {
      "required": [
        "accountId"
      ],
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Required. Account ID as defined in Orion.Accounts.",
          "type": "string"
        }
      }
    },
    "OrionAccountsCreateOneTimeLoginTokenRequest": {
      "required": [
        "accountId"
      ],
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Required. Account ID as defined in Orion.Accounts.",
          "type": "string"
        }
      }
    },
    "OrionAccountsCreateVirtualAccountRequest": {
      "required": [
        "accountID",
        "highestPriorityGroupName",
        "groupAccountTypeId"
      ],
      "type": "object",
      "properties": {
        "accountID": {
          "description": "Required. Account ID as defined in Orion.Accounts.",
          "type": "string"
        },
        "highestPriorityGroupName": {
          "type": "string"
        },
        "groupAccountTypeId": {
          "type": "number"
        }
      }
    },
    "OrionReportingExecuteSQLRequest": {
      "required": [
        "sqlQueryText"
      ],
      "type": "object",
      "properties": {
        "sqlQueryText": {
          "type": "string"
        },
        "sqlQueryParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Object~"
          }
        },
        "outputRowsMaxCount": {
          "type": "number"
        },
        "schemaOnly": {
          "type": "boolean"
        }
      }
    },
    "OrionViewsCloneViewRequest": {
      "required": [
        "sourceViewID",
        "title"
      ],
      "type": "object",
      "properties": {
        "sourceViewID": {
          "type": "number"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "OrionViewsAddViewToGroupRequest": {
      "required": [
        "viewID",
        "targetViewID",
        "viewIcon"
      ],
      "type": "object",
      "properties": {
        "viewID": {
          "type": "number"
        },
        "targetViewID": {
          "type": "number"
        },
        "viewIcon": {
          "type": "string"
        },
        "viewCondition": {
          "type": "string"
        }
      }
    },
    "OrionViewsCloneViewContentsRequest": {
      "required": [
        "sourceViewID",
        "destinationViewID"
      ],
      "type": "object",
      "properties": {
        "sourceViewID": {
          "type": "number"
        },
        "destinationViewID": {
          "type": "number"
        }
      }
    },
    "OrionViewsAddResourceToViewRequest": {
      "required": [
        "viewId",
        "config"
      ],
      "type": "object",
      "properties": {
        "viewId": {
          "type": "number"
        },
        "config": {
          "type": "string"
        },
        "moveColliding": {
          "type": "boolean"
        }
      }
    },
    "OrionCredentialCreateSNMPCredentialsRequest": {
      "required": [
        "name",
        "community"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Credentials name.",
          "type": "string"
        },
        "community": {
          "description": "Required. Community string",
          "type": "string"
        },
        "owner": {
          "description": "Optional. Credential owner. Default value = Orion",
          "type": "string"
        }
      }
    },
    "OrionCredentialCreateSNMPv3CredentialsRequest": {
      "required": [
        "name",
        "username",
        "context",
        "authenticationMethodValue",
        "authenticationPassword",
        "authenticationKeyIsPassword",
        "privacyMethodValue",
        "privacyPassword",
        "privacyKeyIsPassword"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Credentials name.",
          "type": "string"
        },
        "username": {
          "description": "Required. Username.",
          "type": "string"
        },
        "context": {
          "description": "Required. Context.",
          "type": "string"
        },
        "authenticationMethodValue": {
          "type": "string"
        },
        "authenticationPassword": {
          "description": "Required. Authentication password. Value can be empty.",
          "type": "string"
        },
        "authenticationKeyIsPassword": {
          "description": "Required. Is authentication key password (True, False).",
          "type": "boolean"
        },
        "privacyMethodValue": {
          "type": "string"
        },
        "privacyPassword": {
          "description": "Required. Privacy password. Value can be empty.",
          "type": "string"
        },
        "privacyKeyIsPassword": {
          "description": "Required. Is privacy key password (True, False).",
          "type": "boolean"
        },
        "owner": {
          "description": "Optional. Credential owner. Default value = Orion",
          "type": "string"
        }
      }
    },
    "OrionCredentialCreateUsernamePasswordCredentialsRequest": {
      "required": [
        "name",
        "username",
        "password"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Credentials name.",
          "type": "string"
        },
        "username": {
          "description": "Required. Credential username",
          "type": "string"
        },
        "password": {
          "description": "Required. Credential password.",
          "type": "string"
        },
        "owner": {
          "description": "Optional. Credential owner. Default value = Orion",
          "type": "string"
        }
      }
    },
    "OrionCredentialCreateUsernamePasswordWithContentCredentialsRequest": {
      "required": [
        "name",
        "username",
        "password",
        "content"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Credentials name.",
          "type": "string"
        },
        "username": {
          "description": "Required. Credential username",
          "type": "string"
        },
        "password": {
          "description": "Required. Credential password.",
          "type": "string"
        },
        "content": {
          "description": "Optional. Credential content.",
          "type": "string"
        },
        "owner": {
          "description": "Optional. Credential owner. Default value = Orion",
          "type": "string"
        }
      }
    },
    "OrionCredentialUpdateSNMPCredentialsRequest": {
      "required": [
        "credentialId",
        "name",
        "community"
      ],
      "type": "object",
      "properties": {
        "credentialId": {
          "description": "Required. The credential ID.",
          "type": "number"
        },
        "name": {
          "description": "Required. The credentials name.",
          "type": "string"
        },
        "community": {
          "description": "Required. The community string.",
          "type": "string"
        }
      }
    },
    "OrionCredentialUpdateSNMPv3CredentialsRequest": {
      "required": [
        "credentialId",
        "name",
        "username",
        "context",
        "authenticationMethodValue",
        "authenticationPassword",
        "authenticationKeyIsPassword",
        "privacyMethodValue",
        "privacyPassword",
        "privacyKeyIsPassword"
      ],
      "type": "object",
      "properties": {
        "credentialId": {
          "description": "Required. The credential ID.",
          "type": "number"
        },
        "name": {
          "description": "Required. The credentials name.",
          "type": "string"
        },
        "username": {
          "description": "Required. The username.",
          "type": "string"
        },
        "context": {
          "description": "Required. The context.",
          "type": "string"
        },
        "authenticationMethodValue": {
          "type": "string"
        },
        "authenticationPassword": {
          "description": "Required. Authentication password. Value can be empty.",
          "type": "string"
        },
        "authenticationKeyIsPassword": {
          "description": "Required. Is authentication key password (True, False).",
          "type": "boolean"
        },
        "privacyMethodValue": {
          "type": "string"
        },
        "privacyPassword": {
          "description": "Required. Privacy password. Value can be empty.",
          "type": "string"
        },
        "privacyKeyIsPassword": {
          "description": "Required. Is privacy key password (True, False).",
          "type": "boolean"
        }
      }
    },
    "OrionCredentialUpdateUsernamePasswordCredentialsRequest": {
      "required": [
        "credentialId",
        "name",
        "username",
        "password"
      ],
      "type": "object",
      "properties": {
        "credentialId": {
          "description": "Required. The credential ID.",
          "type": "number"
        },
        "name": {
          "description": "Required. The credentials name.",
          "type": "string"
        },
        "username": {
          "description": "Required. The username.",
          "type": "string"
        },
        "password": {
          "description": "Required. The password.",
          "type": "string"
        }
      }
    },
    "OrionCredentialUpdateUsernamePasswordWithContentCredentialsRequest": {
      "required": [
        "credentialId",
        "name",
        "username",
        "password",
        "content"
      ],
      "type": "object",
      "properties": {
        "credentialId": {
          "description": "Required. The credential ID.",
          "type": "number"
        },
        "name": {
          "description": "Required. The credentials name.",
          "type": "string"
        },
        "username": {
          "description": "Required. The username.",
          "type": "string"
        },
        "password": {
          "description": "Required. The password.",
          "type": "string"
        },
        "content": {
          "description": "Optional. The content.",
          "type": "string"
        }
      }
    },
    "OrionCredentialUpdateCredentialsRequest": {
      "required": [
        "id",
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. The credentials id.",
          "type": "number"
        },
        "properties": {
          "description": "Required. Credentials properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
          }
        }
      }
    },
    "OrionCredentialCreateCredentialsRequest": {
      "required": [
        "type",
        "properties"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Required. The credentials type.",
          "type": "string"
        },
        "properties": {
          "description": "Required. Credentials properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
          }
        },
        "owner": {
          "description": "Required. The credentials owner.",
          "type": "string"
        }
      }
    },
    "OrionSitesApplyServerIDToQuerySelectStatementRequest": {
      "required": [
        "swqlQuery",
        "serverIDAlias"
      ],
      "type": "object",
      "properties": {
        "swqlQuery": {
          "type": "string"
        },
        "serverIDAlias": {
          "type": "string"
        }
      }
    },
    "OrionFeaturesRefreshRequest": {
      "type": "object"
    },
    "OrionWebMenuClearCacheRequest": {
      "type": "object"
    },
    "OrionDependenciesRemoveDependenciesRequest": {
      "required": [
        "ids"
      ],
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionDeletedAutoDependenciesRemoveIgnoredAutoDependenciesRequest": {
      "required": [
        "ids"
      ],
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionEventsAcknowledgeRequest": {
      "required": [
        "eventIDs"
      ],
      "type": "object",
      "properties": {
        "eventIDs": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionLimitationsCreateLimitationRequest": {
      "required": [
        "limitationTypeID",
        "selection",
        "checkboxItems",
        "pattern",
        "accountID"
      ],
      "type": "object",
      "properties": {
        "limitationTypeID": {
          "description": "required. LimitationTypeID from Orion.LimitationTypes.",
          "type": "number"
        },
        "selection": {
          "description": "required if Limitation is of type \"Selection\" as defined in Orion.LimitationTypes. A string that will be used to match one value against the Table & Field defined by corresponding Orion.LimitationType.",
          "type": "string"
        },
        "checkboxItems": {
          "description": "required if Limitation is of type \"Checkbox\" as defined in Orion.LimitationTypes. An array of strings used to match multiple values against the Table & Field defined by corresponding Orion.LimitationType.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pattern": {
          "description": "required if Limitation is of type \"Pattern\" as defined in Orion.LimitationTypes. A string that will be used to match multiple values as a text search pattern against the Table & Field defined by corresponding Orion.LimitationType.",
          "type": "string"
        },
        "accountID": {
          "description": "optional. Account ID as defined in Orion.Accounts. Recommended to always specify this parameter. Advanced usage: omit this parameter to create an un-assigned Limitation, as such it will only be used if explicitly specified using \"WITH LIMITATION ID\" SWQL expression.",
          "type": "string"
        }
      }
    },
    "OrionLimitationsUpdateLimitationRequest": {
      "required": [
        "limitationID",
        "selection",
        "checkboxItems",
        "pattern"
      ],
      "type": "object",
      "properties": {
        "limitationID": {
          "description": "required. Limitation ID from Orion.Limitations.",
          "type": "number"
        },
        "selection": {
          "description": "required if Limitation is of type \"Selection\" as defined in Orion.LimitationTypes. A string that will be used to match one value against the Table & Field defined by corresponding Orion.LimitationType.",
          "type": "string"
        },
        "checkboxItems": {
          "description": "required if Limitation is of type \"Checkbox\" as defined in Orion.LimitationTypes. An array of strings used to match multiple values against the Table & Field defined by corresponding Orion.LimitationType.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pattern": {
          "description": "required if Limitation is of type \"Pattern\" as defined in Orion.LimitationTypes. A string that will be used to match multiple values as a text search pattern against the Table & Field defined by corresponding Orion.LimitationType.",
          "type": "string"
        }
      }
    },
    "OrionLimitationsDeleteLimitationRequest": {
      "required": [
        "limitationID"
      ],
      "type": "object",
      "properties": {
        "limitationID": {
          "description": "required. Limitation ID from Orion.Limitations.",
          "type": "number"
        }
      }
    },
    "OrionMapStudioFilesInsertFileRequest": {
      "required": [
        "path",
        "imageFile",
        "owner",
        "fileType",
        "timeStamp"
      ],
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "imageFile": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "owner": {
          "type": "string"
        },
        "fileType": {
          "type": "number"
        },
        "timeStamp": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrionMapStudioFilesUpdateFileRequest": {
      "required": [
        "fileId",
        "path",
        "imageFile",
        "updater",
        "timeStamp",
        "computerName"
      ],
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "imageFile": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "updater": {
          "type": "string"
        },
        "timeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "computerName": {
          "type": "string"
        }
      }
    },
    "OrionMapStudioFilesLockFileRequest": {
      "required": [
        "fileId",
        "user",
        "lockDate",
        "computerName",
        "locked"
      ],
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "lockDate": {
          "format": "date-time",
          "type": "string"
        },
        "computerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        }
      }
    },
    "OrionMapStudioFilesLockFileTableRequest": {
      "required": [
        "fileId",
        "user",
        "lockDate",
        "computerName",
        "locked"
      ],
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "lockDate": {
          "format": "date-time",
          "type": "string"
        },
        "computerName": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        }
      }
    },
    "OrionMapStudioFilesUnlockAllFilesRequest": {
      "required": [
        "user",
        "computerName"
      ],
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "computerName": {
          "type": "string"
        }
      }
    },
    "OrionMapStudioFilesDeleteFileRequest": {
      "required": [
        "fileId",
        "user",
        "computerName"
      ],
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "computerName": {
          "type": "string"
        }
      }
    },
    "OrionMapStudioFilesGetMapStyleRequest": {
      "required": [
        "FileId"
      ],
      "type": "object",
      "properties": {
        "FileId": {
          "type": "string"
        }
      }
    },
    "OrionNetworkAtlasGetNAVersionRequest": {
      "type": "object"
    },
    "OrionNodesUnmanageRequest": {
      "required": [
        "netObjectId",
        "unmanageTime",
        "remanageTime",
        "isRelative"
      ],
      "type": "object",
      "properties": {
        "netObjectId": {
          "type": "string"
        },
        "unmanageTime": {
          "format": "date-time",
          "type": "string"
        },
        "remanageTime": {
          "format": "date-time",
          "type": "string"
        },
        "isRelative": {
          "type": "boolean"
        }
      }
    },
    "OrionNodesRemanageRequest": {
      "required": [
        "netObjectId"
      ],
      "type": "object",
      "properties": {
        "netObjectId": {
          "type": "string"
        }
      }
    },
    "OrionNodesPollNowRequest": {
      "required": [
        "netObjectId"
      ],
      "type": "object",
      "properties": {
        "netObjectId": {
          "type": "string"
        }
      }
    },
    "OrionNodesRediscoverNowRequest": {
      "required": [
        "netObjectId"
      ],
      "type": "object",
      "properties": {
        "netObjectId": {
          "type": "string"
        }
      }
    },
    "OrionNodesGetCountOfElementsPerEngineForLicensingRequest": {
      "type": "object"
    },
    "SolarWinds.Orion.Core.Models.Licensing.CountOfElementsResult": {
      "type": "object",
      "properties": {
        "ValidationKey": {
          "type": "string"
        },
        "CountOfElements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Licensing.CountOfElementsItem"
          }
        }
      }
    },
    "SolarWinds.Orion.Core.Models.Licensing.CountOfElementsItem": {
      "type": "object",
      "properties": {
        "EngineId": {
          "type": "number"
        },
        "Count": {
          "type": "number"
        }
      }
    },
    "OrionNodesScheduleListResourcesRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        }
      }
    },
    "OrionNodesScheduleListResourcesForAddressRequest": {
      "required": [
        "ipAddress",
        "port",
        "credentialsType",
        "credentialProperties",
        "engineId"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "IP address of a target device to list resources for",
          "type": "string"
        },
        "port": {
          "description": "Port",
          "type": "number"
        },
        "credentialsType": {
          "description": "Credentials type",
          "type": "string"
        },
        "credentialProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.String~"
          }
        },
        "engineId": {
          "description": "Define engine to be used for the discovery",
          "type": "number"
        },
        "preferredSnmpVersion": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Credentials.SNMPVersion"
        }
      }
    },
    "OrionNodesGetScheduledListResourcesStatusRequest": {
      "required": [
        "jobId",
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Job identifier to get status for",
          "type": "string"
        },
        "nodeId": {
          "description": "Provide node id to identify engine running the discovery",
          "type": "number"
        }
      }
    },
    "OrionNodesGetScheduledListResourcesStatusByEngineRequest": {
      "required": [
        "jobId",
        "engineId"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Job identifier to get status for",
          "type": "string"
        },
        "engineId": {
          "description": "Engine id used to execute given discovery job",
          "type": "number"
        }
      }
    },
    "OrionNodesGetListResourcesResultRequest": {
      "required": [
        "jobId",
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Job identifier to get status for",
          "type": "string"
        },
        "nodeId": {
          "description": "Provide node id to identify engine running the discovery",
          "type": "number"
        }
      }
    },
    "SolarWinds.Orion.Core.Models.V1.DiscoveredObjects.DiscoveryResultExportItem": {
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string"
        },
        "TypeName": {
          "type": "string"
        },
        "IsSelected": {
          "type": "boolean"
        },
        "Children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Models.V1.DiscoveredObjects.DiscoveryResultExportItem"
          }
        }
      }
    },
    "OrionNodesGetListResourcesResultByEngineRequest": {
      "required": [
        "jobId",
        "engineId"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Job identifier to get status for",
          "type": "string"
        },
        "engineId": {
          "description": "Engine id used to execute given discovery job",
          "type": "number"
        }
      }
    },
    "OrionNodesImportSelectedListResourcesResultRequest": {
      "required": [
        "jobId",
        "nodeId",
        "resources"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string"
        },
        "nodeId": {
          "type": "number"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Models.V1.DiscoveredObjects.DiscoveryResultExportItem"
          }
        }
      }
    },
    "OrionNodesImportListResourcesResultRequest": {
      "required": [
        "jobId",
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string"
        },
        "nodeId": {
          "type": "number"
        }
      }
    },
    "OrionNodesCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionNodesCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionNodesCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionNodesCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionNodesCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionResourcesCheckResourceMigrationRequest": {
      "type": "object"
    },
    "OrionResourcesMigrateClassicToModernResourcesRequest": {
      "type": "object"
    },
    "OrionResourcesMigrateModernToClassicResourcesRequest": {
      "type": "object"
    },
    "OrionResourcesGetModernResourceNameRequest": {
      "required": [
        "classicChartName"
      ],
      "type": "object",
      "properties": {
        "classicChartName": {
          "type": "string"
        }
      }
    },
    "OrionVolumesUnmanageRequest": {
      "required": [
        "netObjectId",
        "unmanageTime",
        "remanageTime",
        "isRelative"
      ],
      "type": "object",
      "properties": {
        "netObjectId": {
          "type": "string"
        },
        "unmanageTime": {
          "format": "date-time",
          "type": "string"
        },
        "remanageTime": {
          "format": "date-time",
          "type": "string"
        },
        "isRelative": {
          "type": "boolean"
        }
      }
    },
    "OrionVolumesRemanageRequest": {
      "required": [
        "netObjectId"
      ],
      "type": "object",
      "properties": {
        "netObjectId": {
          "type": "string"
        }
      }
    },
    "OrionVolumesCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVolumesCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVolumesCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVolumesCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionVolumesCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionEnvironmentCanInstallRequest": {
      "required": [
        "productId",
        "productVersion",
        "family",
        "serverRole"
      ],
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "productVersion": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "serverRole": {
          "type": "string"
        }
      }
    },
    "OrionEnvironmentAuthorizeWindowsAccountForDatabaseRequest": {
      "required": [
        "account"
      ],
      "type": "object",
      "properties": {
        "account": {
          "description": "User name to be added to Orion DB logins otherwise local machine will be added, if it is in domain",
          "type": "string"
        }
      }
    },
    "OrionEnvironmentGetConnectionStringRequest": {
      "type": "object"
    },
    "OrionEnvironmentGetSqlServerIpAddressesRequest": {
      "type": "object"
    },
    "OrionEnvironmentGetDatabaseAccessCredentialRequest": {
      "type": "object"
    },
    "SolarWinds.Orion.Core.Common.Models.DatabaseAccessCredential": {
      "type": "object",
      "properties": {
        "Login": {
          "type": "string"
        },
        "EncryptedPassword": {
          "type": "string"
        },
        "CredentialType": {
          "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.DatabaseAccessCredentialType"
        }
      }
    },
    "SolarWinds.Orion.Core.Common.Models.DatabaseAccessCredentialType": {
      "enum": [
        "WindowsAccount",
        "SqlServerAccount",
        "AzureActiveDirectoryAccount"
      ],
      "type": "string"
    },
    "OrionEnvironmentGetOrionServerCertificateRequest": {
      "type": "object"
    },
    "OrionEnvironmentUninstallAllRequest": {
      "type": "object"
    },
    "OrionEnvironmentStartPreStagingRequest": {
      "type": "object"
    },
    "SolarWinds.Orion.Core.Common.Models.ReportSchedule": {
      "type": "object",
      "properties": {
        "CronExpressionTimeZoneInfo": {
          "$ref": "#/definitions/System.TimeZoneInfo"
        },
        "FrequencyId": {
          "type": "number"
        },
        "StartTime": {
          "format": "date-time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "type": "string"
        },
        "CronExpression": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "CronExpressionTimeZoneInfoId": {
          "type": "string"
        }
      }
    },
    "OrionFrequenciesSaveReportFrequenciesRequest": {
      "required": [
        "frequencies"
      ],
      "type": "object",
      "properties": {
        "frequencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Common.Models.ReportSchedule"
          }
        }
      }
    },
    "OrionFrequenciesSaveTimePeriodFrequenciesRequest": {
      "required": [
        "frequencies"
      ],
      "type": "object",
      "properties": {
        "frequencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Core.Models.Schedules.TimePeriodSchedule"
          }
        }
      }
    },
    "OrionFrequenciesDeleteFrequenciesRequest": {
      "required": [
        "frequencyIds"
      ],
      "type": "object",
      "properties": {
        "frequencyIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionTechnologyPollingAssignmentsEnableAssignmentsRequest": {
      "required": [
        "technologyPollingID"
      ],
      "type": "object",
      "properties": {
        "technologyPollingID": {
          "type": "string"
        }
      }
    },
    "OrionTechnologyPollingAssignmentsDisableAssignmentsRequest": {
      "required": [
        "technologyPollingID"
      ],
      "type": "object",
      "properties": {
        "technologyPollingID": {
          "type": "string"
        }
      }
    },
    "OrionTechnologyPollingAssignmentsEnableAssignmentsOnNetObjectsRequest": {
      "required": [
        "technologyPollingID",
        "netObjectIDs"
      ],
      "type": "object",
      "properties": {
        "technologyPollingID": {
          "type": "string"
        },
        "netObjectIDs": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionTechnologyPollingAssignmentsDisableAssignmentsOnNetObjectsRequest": {
      "required": [
        "technologyPollingID",
        "netObjectIDs"
      ],
      "type": "object",
      "properties": {
        "technologyPollingID": {
          "type": "string"
        },
        "netObjectIDs": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionNotificationItemGroupedAcknowledgeAllRequest": {
      "required": [
        "userName",
        "createdBefore"
      ],
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "createdBefore": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrionNotificationItemGroupedAcknowledgeByIdRequest": {
      "required": [
        "notificationId",
        "userName",
        "acknowledgeTime"
      ],
      "type": "object",
      "properties": {
        "notificationId": {
          "format": "uuid",
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "acknowledgeTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrionNotificationItemGroupedUnAcknowledgeByIdRequest": {
      "required": [
        "notificationId"
      ],
      "type": "object",
      "properties": {
        "notificationId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "OrionNotificationItemGroupedAcknowledgeByTypeRequest": {
      "required": [
        "typeId",
        "includeIgnored",
        "userName",
        "acknowledgeTime"
      ],
      "type": "object",
      "properties": {
        "typeId": {
          "format": "uuid",
          "type": "string"
        },
        "includeIgnored": {
          "type": "boolean"
        },
        "userName": {
          "type": "string"
        },
        "acknowledgeTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrionNotificationItemGroupedUnAcknowledgeByTypeRequest": {
      "required": [
        "typeId",
        "includeIgnored"
      ],
      "type": "object",
      "properties": {
        "typeId": {
          "format": "uuid",
          "type": "string"
        },
        "includeIgnored": {
          "type": "boolean"
        }
      }
    },
    "OrionPolicyEnginePolicyExportPolicyRequest": {
      "required": [
        "policyId"
      ],
      "type": "object",
      "properties": {
        "policyId": {
          "description": "ID of the policy to export.",
          "type": "number"
        }
      }
    },
    "OrionPolicyEnginePolicyImportPolicyRequest": {
      "required": [
        "yaml"
      ],
      "type": "object",
      "properties": {
        "yaml": {
          "description": "Imported policy in YAML format as a string.",
          "type": "string"
        }
      }
    },
    "OrionPolicyEnginePolicyAssignToEntityRequest": {
      "required": [
        "policyId",
        "entityUri",
        "data"
      ],
      "type": "object",
      "properties": {
        "policyId": {
          "description": "ID of the assigning policy.",
          "type": "number"
        },
        "entityUri": {
          "description": "Uri of the target of assignment. For SCM policies it needs to be a Node.",
          "type": "string"
        },
        "data": {
          "description": "Optional additional data for assignments.",
          "type": "string"
        }
      }
    },
    "OrionPolicyEnginePolicyUnassignFromEntityRequest": {
      "required": [
        "policyId",
        "entityUri"
      ],
      "type": "object",
      "properties": {
        "policyId": {
          "description": "ID of the policy to unassign.",
          "type": "number"
        },
        "entityUri": {
          "description": "Uri of the target of assignment. For SCM policies it needs to be a Node.",
          "type": "string"
        }
      }
    },
    "OrionPolicyEnginePolicyPollNowAndEvaluateRequest": {
      "required": [
        "policyId",
        "entityUri"
      ],
      "type": "object",
      "properties": {
        "policyId": {
          "description": "ID of the policy to poll and evaluate.",
          "type": "number"
        },
        "entityUri": {
          "description": "Uri of the target of assignment. For SCM policies it needs to be a Node.",
          "type": "string"
        }
      }
    },
    "OrionRemotingRemoteExecutionPackageExecuteRequest": {
      "required": [
        "nodeId",
        "package",
        "arguments"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "package": {
          "type": "string"
        },
        "arguments": {
          "type": "string"
        }
      }
    },
    "OrionSCMServerConfigurationPollNowRequest": {
      "required": [
        "nodeIds"
      ],
      "type": "object",
      "properties": {
        "nodeIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionSCMServerConfigurationEnableFimDriverWatchingRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        }
      }
    },
    "OrionSCMServerConfigurationDisableFimDriverWatchingRequest": {
      "required": [
        "nodeId"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        }
      }
    },
    "OrionSCMServerConfigurationPollNowWithNotificationRequest": {
      "required": [
        "nodeId",
        "elementIds",
        "timeout",
        "state"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "elementIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "timeout": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "OrionSCMProfilesAssignToNodeRequest": {
      "required": [
        "profileId",
        "nodeId",
        "data"
      ],
      "type": "object",
      "properties": {
        "profileId": {
          "type": "number"
        },
        "nodeId": {
          "type": "number"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "OrionSCMProfilesUnassignFromNodeRequest": {
      "required": [
        "profileId",
        "nodeId",
        "keepHistory"
      ],
      "type": "object",
      "properties": {
        "profileId": {
          "type": "number"
        },
        "nodeId": {
          "type": "number"
        },
        "keepHistory": {
          "type": "boolean"
        }
      }
    },
    "OrionSCMProfilesExportProfileRequest": {
      "required": [
        "profileId"
      ],
      "type": "object",
      "properties": {
        "profileId": {
          "type": "number"
        }
      }
    },
    "OrionSCMProfilesImportProfileRequest": {
      "required": [
        "profileJson"
      ],
      "type": "object",
      "properties": {
        "profileJson": {
          "type": "string"
        }
      }
    },
    "OrionSCMProfilesImportPolicyProfileRequest": {
      "required": [
        "policyId",
        "profileJson"
      ],
      "type": "object",
      "properties": {
        "policyId": {
          "type": "number"
        },
        "profileJson": {
          "type": "string"
        }
      }
    },
    "OrionSCMBaselineSetBaselineRequest": {
      "required": [
        "nodeId",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "number"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrionSecObsVulnerabilitiesSettingsGetImportSettingsRequest": {
      "type": "object"
    },
    "SolarWinds.SecObs.Common.Models.Vulnerability.VulnerabilityImportSettings": {
      "type": "object",
      "properties": {
        "EnableScheduler": {
          "type": "boolean"
        },
        "SchedulerDailyTimeOffset": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "EnableCpeMatchFeedImport": {
          "type": "boolean"
        },
        "CpeMatchFeedFile": {
          "type": "string"
        },
        "Sources": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~System.String~"
        },
        "BatchSize": {
          "type": "number"
        }
      }
    },
    "OrionSecObsVulnerabilitiesSettingsSetImportSettingsRequest": {
      "required": [
        "enableScheduler",
        "schedulerDailyTimeOffset",
        "enableCpeMatchFeedImport",
        "cpeMatchFeedFile",
        "sourcesJsonStr"
      ],
      "type": "object",
      "properties": {
        "enableScheduler": {
          "type": "boolean"
        },
        "schedulerDailyTimeOffset": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "enableCpeMatchFeedImport": {
          "type": "boolean"
        },
        "cpeMatchFeedFile": {
          "type": "string"
        },
        "sourcesJsonStr": {
          "type": "string"
        }
      }
    },
    "SolarWinds.SecObs.Common.Models.Vulnerability.SetImportSettingsResult": {
      "type": "object",
      "properties": {
        "SourceValidation": {
          "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.SourcesValidationResult"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "IsSuccess": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.SecObs.Common.Models.Vulnerability.SourcesValidationResult": {
      "type": "object",
      "properties": {
        "InvalidSources": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "ErrorMessage": {
          "type": "string"
        },
        "IsSuccess": {
          "type": "boolean"
        }
      }
    },
    "OrionSecObsVulnerabilitiesSettingsValidateSourcesRequest": {
      "required": [
        "sourcesStr"
      ],
      "type": "object",
      "properties": {
        "sourcesStr": {
          "type": "string"
        }
      }
    },
    "OrionSecObsVulnerabilitiesSettingsDeleteAllRequest": {
      "type": "object"
    },
    "OrionSecObsVulnerabilitiesSettingsGetVulnerabilitiesDatabaseInfoRequest": {
      "type": "object"
    },
    "SolarWinds.SecObs.Common.Models.Vulnerability.VulnerabilitiesDatabaseInfo": {
      "type": "object",
      "properties": {
        "CveCount": {
          "type": "number"
        },
        "FullDbSizeInKb": {
          "type": "number"
        }
      }
    },
    "OrionSecObsVulnerabilitiesSettingsRunImportNowRequest": {
      "type": "object"
    },
    "OrionSecObsVulnerabilitiesSettingsGetLastImportRequest": {
      "type": "object"
    },
    "SolarWinds.SecObs.Common.Models.Vulnerability.ImportRunInfo": {
      "type": "object",
      "properties": {
        "RunBy": {
          "type": "string"
        },
        "StartTime": {
          "format": "date-time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.ImportRunStatus"
        },
        "NewCount": {
          "type": "number"
        },
        "UpdateCount": {
          "type": "number"
        },
        "ErrorCount": {
          "type": "number"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "SolarWinds.SecObs.Common.Models.Vulnerability.ImportRunStatus": {
      "enum": [
        "None",
        "Pending",
        "Running",
        "Finished",
        "Error"
      ],
      "type": "string"
    },
    "OrionSecObsVulnerabilitiesSettingsRunMatchNowRequest": {
      "type": "object"
    },
    "OrionSecObsVulnerabilitiesSettingsGetMatchSettingsRequest": {
      "type": "object"
    },
    "OrionSecObsVulnerabilitiesSettingsSetMatchSettingsRequest": {
      "required": [
        "enableScheduler",
        "schedulerDailyTimeOffset"
      ],
      "type": "object",
      "properties": {
        "enableScheduler": {
          "type": "boolean"
        },
        "schedulerDailyTimeOffset": {
          "$ref": "#/definitions/System.TimeSpan"
        }
      }
    },
    "SolarWinds.SecObs.Common.Models.Vulnerability.SetMatchSettingsResult": {
      "type": "object",
      "properties": {
        "ErrorMessage": {
          "type": "string"
        },
        "IsSucceed": {
          "type": "boolean"
        }
      }
    },
    "OrionSecObsVulnerabilitiesSettingsDeleteMatchBySelectionRequest": {
      "required": [
        "include",
        "exclude",
        "isAllPages"
      ],
      "type": "object",
      "properties": {
        "include": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "exclude": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "isAllPages": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.SecObs.Common.Models.Vulnerability.NodeCveId": {
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        },
        "CveId": {
          "type": "string"
        }
      }
    },
    "OrionSecObsVulnerabilitiesNodeCveSetStatesRequest": {
      "required": [
        "nodeVulnerabilities",
        "state",
        "comment"
      ],
      "type": "object",
      "properties": {
        "nodeVulnerabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.NodeCveId"
          }
        },
        "state": {
          "$ref": "#/definitions/SolarWinds.SecObs.Common.Models.Vulnerability.NodeCveState"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "OrionSecObsVulnerabilitiesNodesAddRequest": {
      "required": [
        "nodes"
      ],
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionSecObsVulnerabilitiesNodesRemoveRequest": {
      "required": [
        "nodes"
      ],
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionSEMEventsGetEventDetailsRequest": {
      "required": [
        "eventId"
      ],
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string"
        }
      }
    },
    "OrionSEMSettingsGetWebApiSettingsRequest": {
      "type": "object"
    },
    "SolarWinds.Sem.Common.Models.WebApiSettings": {
      "type": "object",
      "properties": {
        "BaseUrl": {
          "type": "string"
        },
        "AcceptSelfSigned": {
          "type": "boolean"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "OrionSEMSettingsSetWebApiSettingsRequest": {
      "required": [
        "baseUrl",
        "acceptSelfSigned",
        "username",
        "encryptedPassword"
      ],
      "type": "object",
      "properties": {
        "baseUrl": {
          "type": "string"
        },
        "acceptSelfSigned": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "encryptedPassword": {
          "type": "string"
        }
      }
    },
    "OrionSEMSettingsTestWebApiSettingsRequest": {
      "required": [
        "baseUrl",
        "acceptSelfSigned",
        "username",
        "encryptedPassword"
      ],
      "type": "object",
      "properties": {
        "baseUrl": {
          "type": "string"
        },
        "acceptSelfSigned": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "encryptedPassword": {
          "type": "string"
        }
      }
    },
    "OrionSEUMTransactionsUnmanageRequest": {
      "required": [
        "netObjectId",
        "unmanageTime",
        "remanageTime",
        "isRelative"
      ],
      "type": "object",
      "properties": {
        "netObjectId": {
          "type": "string"
        },
        "unmanageTime": {
          "format": "date-time",
          "description": "start time when transaction is not managed",
          "type": "string"
        },
        "remanageTime": {
          "format": "date-time",
          "description": "end time when transaction is not managed",
          "type": "string"
        },
        "isRelative": {
          "description": "indicates whether remanage time is relative to unmanage time",
          "type": "boolean"
        }
      }
    },
    "OrionSEUMTransactionsRemanageRequest": {
      "required": [
        "netObjectId"
      ],
      "type": "object",
      "properties": {
        "netObjectId": {
          "type": "string"
        }
      }
    },
    "OrionSEUMTransactionsCreateRequest": {
      "required": [
        "recordingId",
        "agentId"
      ],
      "type": "object",
      "properties": {
        "recordingId": {
          "description": "Id of the recording to be run in transaction",
          "type": "number"
        },
        "agentId": {
          "description": "Id of the agent that will run the transaction",
          "type": "number"
        }
      }
    },
    "OrionSEUMTransactionCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSEUMTransactionCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSEUMTransactionCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSEUMTransactionCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionSEUMSettingsGetRecorderCompatibilityRequest": {
      "type": "object"
    },
    "SolarWinds.SEUM.Common.Models.RecorderCompatibility": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "number"
        },
        "LatestVersion": {
          "$ref": "#/definitions/System.Version"
        }
      }
    },
    "OrionSEUMSettingsGetRecorderInstallerRequest": {
      "type": "object"
    },
    "System.IO.MemoryStream": {
      "type": "object",
      "properties": {
        "CanRead": {
          "type": "boolean"
        },
        "CanSeek": {
          "type": "boolean"
        },
        "CanWrite": {
          "type": "boolean"
        },
        "Capacity": {
          "type": "number"
        },
        "Length": {
          "type": "number"
        },
        "Position": {
          "type": "number"
        },
        "CanTimeout": {
          "type": "boolean"
        },
        "ReadTimeout": {
          "type": "number"
        },
        "WriteTimeout": {
          "type": "number"
        }
      }
    },
    "OrionSEUMRecordingsLoadRequest": {
      "required": [
        "recordingId"
      ],
      "type": "object",
      "properties": {
        "recordingId": {
          "description": "Recording id.",
          "type": "number"
        }
      }
    },
    "SolarWinds.SEUM.Common.Models.Recording": {
      "type": "object",
      "properties": {
        "RecordingVersion": {
          "type": "number"
        },
        "RecordingId": {
          "type": "number"
        },
        "Guid": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Width": {
          "type": "number"
        },
        "Height": {
          "type": "number"
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string"
        },
        "CreationBrowser": {
          "type": "string"
        },
        "CreationOsVersion": {
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "RelatedEntitiesContainerId": {
          "type": "number"
        },
        "RequiresInteractiveSession": {
          "type": "boolean"
        },
        "ProbeType": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.ProbeType"
        },
        "EncryptedData": {
          "type": "string"
        },
        "Authentications": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.Authentications"
        },
        "Steps": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~SolarWinds.SEUM.Common.Models.IRecordingStep~"
        },
        "ActiveStep": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.IRecordingStep"
        },
        "IsEncrypted": {
          "type": "boolean"
        },
        "IsNewRecording": {
          "type": "boolean"
        },
        "IsDirty": {
          "type": "boolean"
        },
        "IsEmpty": {
          "type": "boolean"
        },
        "ContainsRawActions": {
          "type": "boolean"
        },
        "CanUndo": {
          "type": "boolean"
        },
        "CanRedo": {
          "type": "boolean"
        },
        "IsConditionalMode": {
          "type": "boolean"
        },
        "Properties": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~SolarWinds.SEUM.Common.Models.RecordingProperty~"
        }
      }
    },
    "SolarWinds.SEUM.Common.Models.ProbeType": {
      "enum": [
        "Classic",
        "Chromium"
      ],
      "type": "string"
    },
    "SolarWinds.SEUM.Common.Models.Authentications": {
      "type": "object",
      "properties": {
        "HttpAuthentications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.HttpAuthentication"
          }
        },
        "CertificateAuthentications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.CertificateAuthentication"
          }
        }
      }
    },
    "SolarWinds.SEUM.Common.Models.HttpAuthentication": {
      "type": "object",
      "properties": {
        "Host": {
          "type": "string"
        },
        "Credentials": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.Credentials"
        }
      }
    },
    "SolarWinds.SEUM.Common.Models.Credentials": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "SolarWinds.SEUM.Common.Models.CertificateAuthentication": {
      "type": "object",
      "properties": {
        "CommonName": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        }
      }
    },
    "System.Collections.Generic.IEnumerable~SolarWinds.SEUM.Common.Models.IRecordingStep~": {
      "type": "object"
    },
    "SolarWinds.SEUM.Common.Models.IRecordingStep": {
      "type": "object",
      "properties": {
        "Actions": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~SolarWinds.SEUM.Common.Actions.ActionBase~"
        },
        "ActiveAction": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Actions.ActionBase"
        },
        "ControlActionId": {
          "format": "uuid",
          "type": "string"
        },
        "CriticalThreshold": {
          "$ref": "#/definitions/System.TimeSpan"
        },
        "Description": {
          "type": "string"
        },
        "Guid": {
          "format": "uuid",
          "type": "string"
        },
        "IsConditionalStep": {
          "type": "boolean"
        },
        "IsEmpty": {
          "type": "boolean"
        },
        "IsFirstStep": {
          "type": "boolean"
        },
        "IsLastStep": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "NextStep": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.IRecordingStep"
        },
        "Order": {
          "type": "number"
        },
        "PlaybackCommands": {
          "type": "string"
        },
        "PreviousStep": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.IRecordingStep"
        },
        "Recording": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.Recording"
        },
        "RecordingId": {
          "type": "number"
        },
        "StepId": {
          "type": "number"
        },
        "Url": {
          "type": "string"
        },
        "WarningThreshold": {
          "$ref": "#/definitions/System.TimeSpan"
        }
      }
    },
    "System.Collections.Generic.IEnumerable~SolarWinds.SEUM.Common.Actions.ActionBase~": {
      "type": "object"
    },
    "SolarWinds.SEUM.Common.Actions.ActionBase": {
      "type": "object",
      "properties": {
        "Guid": {
          "format": "uuid",
          "type": "string"
        },
        "Step": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.IRecordingStep"
        },
        "NextAction": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Actions.ActionBase"
        },
        "IsLookForwardExecution": {
          "type": "boolean"
        },
        "ActionType": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Actions.ActionType"
        },
        "IgnoreFailure": {
          "type": "boolean"
        },
        "BrowserIndex": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "UserDescription": {
          "type": "string"
        },
        "IsEditable": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Actions.EditableTypes"
        }
      }
    },
    "SolarWinds.SEUM.Common.Actions.ActionType": {
      "enum": [
        "Dummy",
        "Navigate",
        "Click",
        "DoubleClick",
        "MouseDown",
        "MouseUp",
        "MouseOver",
        "TextWrite",
        "TextDelete",
        "KeyPress",
        "Checkbox",
        "SelectList",
        "HandleDialog",
        "VerifyContent",
        "Authenticate",
        "FileDownload",
        "CloseWindow",
        "FileUpload",
        "RawMouseClick",
        "RawMouseDoubleClick",
        "RawMouseMove",
        "RawKeyPress",
        "ImageMatch",
        "ImageClick",
        "Delay",
        "ClientCertificate",
        "RawScroll",
        "PingdomClickXPath",
        "PingdomWait",
        "PingdomSelectDropdown",
        "PingdomTextInsert",
        "PingdomMouseMoveToElement",
        "PingdomTextValidation",
        "PingdomKeyPress",
        "PingdomNavigate",
        "PingdomImageValidation",
        "PingdomDownload",
        "PingdomClickXY",
        "PingdomUpload",
        "PingdomCloseTab"
      ],
      "type": "string"
    },
    "SolarWinds.SEUM.Common.Actions.EditableTypes": {
      "enum": [
        "None",
        "Recorder",
        "Web",
        "RecorderAndWeb"
      ],
      "type": "string"
    },
    "System.Collections.Generic.IEnumerable~SolarWinds.SEUM.Common.Models.RecordingProperty~": {
      "type": "object"
    },
    "OrionSEUMRecordingsExistsRequest": {
      "required": [
        "recordingGuid"
      ],
      "type": "object",
      "properties": {
        "recordingGuid": {
          "format": "uuid",
          "description": "Recording GUID.",
          "type": "string"
        }
      }
    },
    "OrionSEUMRecordingsSaveRequest": {
      "required": [
        "recording"
      ],
      "type": "object",
      "properties": {
        "recording": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.Recording"
        }
      }
    },
    "OrionSEUMRecordingsImportRequest": {
      "required": [
        "recordingFileContent",
        "recordingName",
        "password"
      ],
      "type": "object",
      "properties": {
        "recordingFileContent": {
          "description": "Recording file content.",
          "type": "string"
        },
        "recordingName": {
          "description": "Recording name.",
          "type": "string"
        },
        "password": {
          "description": "Password to decipher the file.",
          "type": "string"
        }
      }
    },
    "OrionSEUMRecordingsUpdateRequest": {
      "required": [
        "recordingId",
        "recordingFileContent",
        "recordingName",
        "password"
      ],
      "type": "object",
      "properties": {
        "recordingId": {
          "description": "Recording id.",
          "type": "number"
        },
        "recordingFileContent": {
          "description": "Recording file content.",
          "type": "string"
        },
        "recordingName": {
          "description": "Recording name.",
          "type": "string"
        },
        "password": {
          "description": "Password to decipher the file.",
          "type": "string"
        }
      }
    },
    "OrionSEUMRecordingsExportRequest": {
      "required": [
        "recordingId",
        "password"
      ],
      "type": "object",
      "properties": {
        "recordingId": {
          "description": "Recording id.",
          "type": "number"
        },
        "password": {
          "description": "Password to cipher the file.",
          "type": "string"
        }
      }
    },
    "SolarWinds.SEUM.Common.Models.RecordingFileContent": {
      "type": "object",
      "properties": {
        "Content": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "ProbeType": {
          "$ref": "#/definitions/SolarWinds.SEUM.Common.Models.ProbeType"
        }
      }
    },
    "OrionSEUMRecordingsSettingsCheckRecorderCompatibilityRequest": {
      "required": [
        "recorderVersion"
      ],
      "type": "object",
      "properties": {
        "recorderVersion": {
          "description": "recorder Version",
          "type": "string"
        }
      }
    },
    "SolarWinds.SEUM.Verbs.v3.VersionCompatibility": {
      "enum": [
        "NotCompatible",
        "Compatible",
        "NewerCompatibleVersionExist"
      ],
      "type": "string"
    },
    "OrionSEUMRecordingCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSEUMRecordingCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSEUMRecordingCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSEUMRecordingCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "SOCSettingsSetSettingRequest": {
      "required": [
        "key",
        "value"
      ],
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "OrionPMDatabaseHelperGetListOfDatabasesRequest": {
      "required": [
        "serverName",
        "username",
        "password",
        "authenticationType"
      ],
      "type": "object",
      "properties": {
        "serverName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "authenticationType": {
          "type": "string"
        }
      }
    },
    "OrionPMDatabaseHelperGetAccountsListRequest": {
      "required": [
        "serverName",
        "username",
        "password",
        "authenticationType"
      ],
      "type": "object",
      "properties": {
        "serverName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "authenticationType": {
          "type": "string"
        }
      }
    },
    "OrionPMDatabaseHelperTestUserAndPasswordRequest": {
      "required": [
        "serverName",
        "account",
        "password",
        "authenticationType",
        "encryptConnection"
      ],
      "type": "object",
      "properties": {
        "serverName": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "authenticationType": {
          "type": "string"
        },
        "encryptConnection": {
          "type": "boolean"
        }
      }
    },
    "OrionPMDatabaseHelperValidateRequest": {
      "required": [
        "serverName",
        "databasename",
        "account",
        "password",
        "authenticationType",
        "encryptConnection"
      ],
      "type": "object",
      "properties": {
        "serverName": {
          "type": "string"
        },
        "databasename": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "authenticationType": {
          "type": "string"
        },
        "encryptConnection": {
          "type": "boolean"
        }
      }
    },
    "OrionPMDatabaseHelperGetLoginNameFromCurrentSqlSessionRequest": {
      "required": [
        "serverName",
        "account",
        "password",
        "authenticationType"
      ],
      "type": "object",
      "properties": {
        "serverName": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "authenticationType": {
          "type": "string"
        }
      }
    },
    "OrionPMDatabaseHelperUpdateUserAccountRequest": {
      "required": [
        "serverName",
        "database",
        "user",
        "userPassword",
        "authenticationType",
        "encryptConnection",
        "account",
        "accountPassword",
        "accountType"
      ],
      "type": "object",
      "properties": {
        "serverName": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "userPassword": {
          "type": "string"
        },
        "authenticationType": {
          "type": "string"
        },
        "encryptConnection": {
          "type": "boolean"
        },
        "account": {
          "type": "string"
        },
        "accountPassword": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        }
      }
    },
    "SolarWinds.PM.Common.Model.TaskInfo": {
      "type": "object",
      "properties": {
        "TaskId": {
          "format": "uuid",
          "type": "string"
        },
        "TaskTypeInfo": {
          "$ref": "#/definitions/SolarWinds.PM.Common.Enums.TaskType"
        },
        "ServerId": {
          "format": "uuid",
          "type": "string"
        },
        "Where": {
          "type": "string"
        },
        "ItemId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "SolarWinds.PM.Common.Enums.TaskType": {
      "enum": [
        "Undefined",
        "Report",
        "WsusServers",
        "WsusUpdates",
        "WsusDetails",
        "WsusNodeUpdates",
        "WsusNodes",
        "WsusUpdateNodes",
        "WsusGroups"
      ],
      "type": "string"
    },
    "OrionPMTaskBrokerExecuteWsusServerTaskRequest": {
      "required": [
        "taskInfo"
      ],
      "type": "object",
      "properties": {
        "taskInfo": {
          "$ref": "#/definitions/SolarWinds.PM.Common.Model.TaskInfo"
        }
      }
    },
    "SolarWinds.PM.Common.Model.TaskResult": {
      "type": "object",
      "properties": {
        "Outcome": {
          "$ref": "#/definitions/SolarWinds.PM.Common.Enums.TaskOutcome"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/System.Data.DataTable"
        }
      }
    },
    "SolarWinds.PM.Common.Enums.TaskOutcome": {
      "enum": [
        "Unknown",
        "Success",
        "PartialSuccess",
        "Pending",
        "Unreachable",
        "UnreachableAll",
        "Unauthorized",
        "Unavailable",
        "Error"
      ],
      "type": "string"
    },
    "OrionPMTaskBrokerExecuteWsusServerClearTaskRequest": {
      "required": [
        "taskInfo"
      ],
      "type": "object",
      "properties": {
        "taskInfo": {
          "$ref": "#/definitions/SolarWinds.PM.Common.Model.TaskInfo"
        }
      }
    },
    "OrionPMTaskBrokerExecuteWsusServerParallelTasksRequest": {
      "required": [
        "taskInfos"
      ],
      "type": "object",
      "properties": {
        "taskInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.PM.Common.Model.TaskInfo"
          }
        }
      }
    },
    "OrionPMTaskBrokerCheckEWDataGridAvailabilityRequest": {
      "required": [
        "performKeepAlive"
      ],
      "type": "object",
      "properties": {
        "performKeepAlive": {
          "type": "boolean"
        }
      }
    },
    "SolarWinds.PM.Common.Model.EWDataGridEntity": {
      "type": "object",
      "properties": {
        "IsAvailable": {
          "type": "boolean"
        },
        "Message": {
          "type": "string"
        },
        "State": {
          "$ref": "#/definitions/SolarWinds.PM.Common.Enums.TaskOutcome"
        }
      }
    },
    "OrionPMTaskBrokerCheckTaskStateRequest": {
      "required": [
        "taskInfo"
      ],
      "type": "object",
      "properties": {
        "taskInfo": {
          "$ref": "#/definitions/SolarWinds.PM.Common.Model.TaskInfo"
        }
      }
    },
    "OrionPMManagementIsDataGridCredentialAvailableRequest": {
      "type": "object"
    },
    "OrionPMManagementPasswordCanBeDecryptedRequest": {
      "type": "object"
    },
    "OrionPMManagementTestSpmWebApiCredentialsRequest": {
      "required": [
        "server",
        "port",
        "useHttps",
        "userFullname",
        "encryptedPassword"
      ],
      "type": "object",
      "properties": {
        "server": {
          "type": "string"
        },
        "port": {
          "type": "number"
        },
        "useHttps": {
          "type": "boolean"
        },
        "userFullname": {
          "type": "string"
        },
        "encryptedPassword": {
          "type": "string"
        }
      }
    },
    "OrionPMManagementGetSpmWebApiCredentialsRequest": {
      "type": "object"
    },
    "SolarWinds.PM.Common.Model.SharedNetworkCredential": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Domain": {
          "type": "string"
        },
        "ID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Owner": {
          "type": "string"
        },
        "IsBroken": {
          "type": "boolean"
        }
      }
    },
    "OrionPMManagementSetSpmWebApiCredentialsRequest": {
      "required": [
        "server",
        "port",
        "useHttps",
        "userFullname",
        "encryptedPassword"
      ],
      "type": "object",
      "properties": {
        "server": {
          "type": "string"
        },
        "port": {
          "type": "number"
        },
        "useHttps": {
          "type": "boolean"
        },
        "userFullname": {
          "type": "string"
        },
        "encryptedPassword": {
          "type": "string"
        }
      }
    },
    "OrionPMManagementGetSpmWebApiHostSettingsRequest": {
      "type": "object"
    },
    "SolarWinds.PM.Common.Model.SpmWebApiHostSettings": {
      "type": "object",
      "properties": {
        "Address": {
          "type": "string"
        },
        "Port": {
          "type": "number"
        },
        "UseHttps": {
          "type": "boolean"
        }
      }
    },
    "OrionPMManagementGetCurrentDataGridDbSettingsRequest": {
      "type": "object"
    },
    "OrionPMManagementSetCurrentDataGridDbSettingsRequest": {
      "required": [
        "encryptedConnectionString"
      ],
      "type": "object",
      "properties": {
        "encryptedConnectionString": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageArraysGetLicensedArraysRequest": {
      "type": "object"
    },
    "OrionSRMStorageArraysAddSmisCredentialsRequest": {
      "required": [
        "displayName",
        "userName",
        "password",
        "interopNamespace",
        "arrayNamespace"
      ],
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "interopNamespace": {
          "type": "string"
        },
        "arrayNamespace": {
          "type": "string"
        },
        "httpPort": {
          "type": "number"
        },
        "httpsPort": {
          "type": "number"
        },
        "useSsl": {
          "type": "boolean"
        }
      }
    },
    "OrionSRMStorageArraysAddExternalProviderRequest": {
      "required": [
        "ipAddress",
        "credentialsId"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "credentialsId": {
          "type": "number"
        }
      }
    },
    "OrionSRMStorageArraysAddAllArraysRequest": {
      "required": [
        "deviceGroupId",
        "providersIds"
      ],
      "type": "object",
      "properties": {
        "deviceGroupId": {
          "format": "uuid",
          "type": "string"
        },
        "providersIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "engineIp": {
          "type": "string"
        }
      }
    },
    "OrionSRMPhysicalDisksGetCountOfElementsPerEngineForLicensingRequest": {
      "type": "object"
    },
    "OrionSRMDeviceMigrationsTriggerMigrationRequest": {
      "required": [
        "migrationType",
        "migrationObject",
        "objectID"
      ],
      "type": "object",
      "properties": {
        "migrationType": {
          "type": "string"
        },
        "migrationObject": {
          "type": "string"
        },
        "objectID": {
          "type": "number"
        }
      }
    },
    "SolarWinds.SRM.Common.BL.MigrationResults.MigrationEntity": {
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/SolarWinds.SRM.Common.Enums.SRMDeviceMigrationStatus"
        },
        "Message": {
          "type": "string"
        },
        "ObjectID": {
          "type": "number"
        },
        "MigrationObject": {
          "$ref": "#/definitions/SolarWinds.SRM.Common.Enums.MigrationObject"
        },
        "MigrationType": {
          "$ref": "#/definitions/SolarWinds.SRM.Common.Enums.MigrationType"
        },
        "DiscoveryResults": {
          "$ref": "#/definitions/SolarWinds.SRM.Common.Models.DiscoveryResults"
        },
        "TestConnectionResults": {
          "$ref": "#/definitions/SolarWinds.SRM.Common.Models.TestConnectionResults"
        }
      }
    },
    "SolarWinds.SRM.Common.Enums.SRMDeviceMigrationStatus": {
      "enum": [
        "Unknown",
        "ReadyForMigration",
        "NotCompatible",
        "InProgress",
        "FinishedSuccessfully",
        "FinishedFailed"
      ],
      "type": "string"
    },
    "SolarWinds.SRM.Common.Enums.MigrationObject": {
      "enum": [
        "Provider",
        "StorageArray",
        "Unknown"
      ],
      "type": "string"
    },
    "SolarWinds.SRM.Common.Enums.MigrationType": {
      "enum": [
        "NetAppZapiToOntapRestApi",
        "NetAppDFMToAiqumRestApi",
        "NetAppOntapRestApiToZapi",
        "NetAppAiqumToDfm",
        "Unknown"
      ],
      "type": "string"
    },
    "SolarWinds.SRM.Common.Models.DiscoveryResults": {
      "type": "object",
      "properties": {
        "StorageArrays": {
          "$ref": "#/definitions/System.Collections.Generic.IEnumerable~SolarWinds.SRM.Common.UnifiedResult.StorageArray~"
        },
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Tuple~System.String_System.String_SolarWinds.SRM.Common.Discovery.SRMDiscoveryJobResultCode~"
          }
        }
      }
    },
    "System.Collections.Generic.IEnumerable~SolarWinds.SRM.Common.UnifiedResult.StorageArray~": {
      "type": "object"
    },
    "System.Tuple~System.String_System.String_SolarWinds.SRM.Common.Discovery.SRMDiscoveryJobResultCode~": {
      "type": "object",
      "properties": {
        "Item1": {
          "type": "string"
        },
        "Item2": {
          "type": "string"
        },
        "Item3": {
          "$ref": "#/definitions/SolarWinds.SRM.Common.Discovery.SRMDiscoveryJobResultCode"
        }
      }
    },
    "SolarWinds.SRM.Common.Discovery.SRMDiscoveryJobResultCode": {
      "enum": [
        "Success",
        "UnableToConnect",
        "NotAppllicable",
        "Unknown",
        "MissingTemplate",
        "ProviderBusy",
        "UnsupportedVersion"
      ],
      "type": "string"
    },
    "SolarWinds.SRM.Common.Models.TestConnectionResults": {
      "type": "object",
      "properties": {
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Tuple~System.String_System.String_SolarWinds.SRM.Common.Enums.SrmTestConnectionJobResultCode~"
          }
        }
      }
    },
    "System.Tuple~System.String_System.String_SolarWinds.SRM.Common.Enums.SrmTestConnectionJobResultCode~": {
      "type": "object",
      "properties": {
        "Item1": {
          "type": "string"
        },
        "Item2": {
          "type": "string"
        },
        "Item3": {
          "$ref": "#/definitions/SolarWinds.SRM.Common.Enums.SrmTestConnectionJobResultCode"
        }
      }
    },
    "SolarWinds.SRM.Common.Enums.SrmTestConnectionJobResultCode": {
      "enum": [
        "Success",
        "UnableToConnect",
        "NotAppllicable",
        "Unknown"
      ],
      "type": "string"
    },
    "OrionSRMDeviceMigrationsRefreshDeviceMigrationsRequest": {
      "type": "object"
    },
    "OrionSRMVServersCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMVServersCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMVServersCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMVServersCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionSRMVServersCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMLUNCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMLUNCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMLUNCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMLUNCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionSRMLUNCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMVolumeCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMVolumeCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMVolumeCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMVolumeCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionSRMVolumeCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMFileShareCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMFileShareCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMFileShareCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMFileShareCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionSRMFileShareCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageArrayCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageArrayCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageArrayCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageArrayCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageArrayCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMProviderCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMProviderCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMProviderCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMProviderCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionSRMProviderCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMPoolCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMPoolCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMPoolCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMPoolCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionSRMPoolCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageControllerCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageControllerCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageControllerCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageControllerCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageControllerCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageControllerPortCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageControllerPortCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageControllerPortCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageControllerPortCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionSRMStorageControllerPortCustomPropertiesValidateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionSSOValidateUserTokenRequest": {
      "required": [
        "token",
        "expiration"
      ],
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "expiration": {
          "$ref": "#/definitions/System.TimeSpan"
        }
      }
    },
    "SystemQueryPlanCacheClearRequest": {
      "type": "object"
    },
    "SystemActiveQueryCancelByClientSessionIDRequest": {
      "required": [
        "clientSessionID"
      ],
      "type": "object",
      "properties": {
        "clientSessionID": {
          "type": "string"
        }
      }
    },
    "UamsClientInstallationInfoCreateInstallationInfoRequest": {
      "type": "object"
    },
    "UamsClientInstallationInfoInstallUamsClientRequest": {
      "required": [
        "swoken",
        "endpoint"
      ],
      "type": "object",
      "properties": {
        "swoken": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        }
      }
    },
    "UamsClientInstallationInfoUninstallUamsClientRequest": {
      "type": "object"
    },
    "UamsClientInstallationInfoSetAccessTokenRequest": {
      "required": [
        "swoken"
      ],
      "type": "object",
      "properties": {
        "swoken": {
          "type": "string"
        }
      }
    },
    "UamsClientInstallationInfoCheckSwokenValidityRequest": {
      "required": [
        "swoken",
        "swoUrl"
      ],
      "type": "object",
      "properties": {
        "swoken": {
          "type": "string"
        },
        "swoUrl": {
          "type": "string"
        }
      }
    },
    "OrionCloudInstancesUnmanageRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.VIM.CloudMonitoring.Common.Models.ManagementActionResult": {
      "type": "object",
      "properties": {
        "Success": {
          "type": "boolean"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "CurrentState": {
          "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.Instances.CloudInstanceState"
        },
        "PreviousState": {
          "$ref": "#/definitions/SolarWinds.VIM.CloudMonitoring.Common.Models.Instances.CloudInstanceState"
        },
        "InstanceId": {
          "type": "string"
        }
      }
    },
    "SolarWinds.VIM.CloudMonitoring.Common.Models.Instances.CloudInstanceState": {
      "enum": [
        "Pending",
        "Running",
        "ShuttingDown",
        "Terminated",
        "Stopping",
        "Stopped",
        "Unknown"
      ],
      "type": "string"
    },
    "OrionCloudInstancesRemanageRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "OrionCloudInstancesPollNowRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "OrionCloudInstancesStartInstanceRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "OrionCloudInstancesStopInstanceRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "OrionCloudInstancesRebootInstanceRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "OrionCloudInstancesDeleteInstanceRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "OrionCloudInstancesDeleteInstanceWithNodeRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "OrionCloudAwsInstancesForceStopInstanceRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "OrionCloudAwsInstancesTerminateInstanceRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "OrionCloudAwsInstancesTerminateInstanceAndRemoveNodeRequest": {
      "required": [
        "virtualMachineId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Data.Providers.VIM.Verbs.Discovery-VimPluginConfigurationContext": {
      "type": "object",
      "properties": {
        "Enabled": {
          "type": "boolean"
        },
        "Credentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.VIM.Verbs.Discovery-SharedCredentialInfo"
          }
        }
      }
    },
    "SolarWinds.Data.Providers.VIM.Verbs.Discovery-SharedCredentialInfo": {
      "type": "object",
      "properties": {
        "CredentialID": {
          "type": "number"
        }
      }
    },
    "OrionVIMDiscoveryCreateVimPluginConfigurationRequest": {
      "required": [
        "context"
      ],
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/SolarWinds.Data.Providers.VIM.Verbs.Discovery-VimPluginConfigurationContext"
        }
      }
    },
    "OrionVIMTagsSynchronizeToCustomPropertiesRequest": {
      "type": "object"
    },
    "OrionVIMClustersCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMClustersCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMClustersCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMClustersCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionVIMDataCentersCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMDataCentersCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMDataCentersCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMDataCentersCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionVIMVirtualMachinesPerformBasicActionRequest": {
      "required": [
        "virtualMachineId",
        "actionType"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        },
        "actionType": {
          "type": "string"
        }
      }
    },
    "OrionVIMVirtualMachinesTakeSnapshotRequest": {
      "required": [
        "virtualMachineId",
        "snapshotName"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        },
        "snapshotName": {
          "type": "string"
        }
      }
    },
    "OrionVIMVirtualMachinesDeleteSnapshotRequest": {
      "required": [
        "virtualMachineId",
        "snapshotId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        },
        "snapshotId": {
          "type": "number"
        },
        "deleteAllChildren": {
          "type": "boolean"
        }
      }
    },
    "OrionVIMVirtualMachinesChangeSettingsRequest": {
      "required": [
        "virtualMachineId",
        "processorCount",
        "ramInMB"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        },
        "processorCount": {
          "type": "number"
        },
        "ramInMB": {
          "type": "number"
        }
      }
    },
    "OrionVIMVirtualMachinesMigrateRequest": {
      "required": [
        "virtualMachineId",
        "destinationHostId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        },
        "destinationHostId": {
          "type": "number"
        },
        "restartRequired": {
          "type": "boolean"
        },
        "storageDestination": {
          "type": "string"
        }
      }
    },
    "OrionVIMVirtualMachinesRelocateRequest": {
      "required": [
        "virtualMachineId",
        "destinationDataStoreId"
      ],
      "type": "object",
      "properties": {
        "virtualMachineId": {
          "type": "number"
        },
        "destinationDataStoreId": {
          "type": "number"
        }
      }
    },
    "OrionVIMVirtualMachinesCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMVirtualMachinesCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMVirtualMachinesCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMVirtualMachinesCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionVIMHostsCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMHostsCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMHostsCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMHostsCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionVIMDatastoresCustomPropertiesCreateCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMDatastoresCustomPropertiesCreateCustomPropertyWithValuesRequest": {
      "required": [
        "PropertyName",
        "Description",
        "ValueType",
        "Size",
        "ValidRange",
        "Parser",
        "Header",
        "Alignment",
        "Format",
        "Units",
        "Value"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "ValidRange": {
          "type": "string"
        },
        "Parser": {
          "type": "string"
        },
        "Header": {
          "type": "string"
        },
        "Alignment": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMDatastoresCustomPropertiesModifyCustomPropertyRequest": {
      "required": [
        "PropertyName",
        "Description",
        "Size",
        "Values"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.String_System.Boolean~"
          }
        },
        "Mandatory": {
          "type": "boolean"
        },
        "Default": {
          "type": "string"
        },
        "SourceId": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        },
        "propertyDisplayName": {
          "type": "string"
        }
      }
    },
    "OrionVIMDatastoresCustomPropertiesDeleteCustomPropertyRequest": {
      "required": [
        "PropertyName"
      ],
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "OrionVPNL2LTunnelSetFavoriteRequest": {
      "required": [
        "entityId"
      ],
      "type": "object",
      "properties": {
        "entityId": {
          "type": "number"
        }
      }
    },
    "OrionVPNL2LTunnelRemoveFavoriteRequest": {
      "required": [
        "entityId"
      ],
      "type": "object",
      "properties": {
        "entityId": {
          "type": "number"
        }
      }
    },
    "OrionWirelessHeatMapMapInsertWirelessHeatMapRequest": {
      "required": [
        "projectId",
        "name",
        "scale",
        "scaleUnit",
        "width",
        "height"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scale": {
          "type": "number"
        },
        "scaleUnit": {
          "type": "number"
        },
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        }
      }
    },
    "OrionWirelessHeatMapMapUpdateWirelessHeatMapRequest": {
      "required": [
        "mapId",
        "projectId",
        "name",
        "scale",
        "scaleUnit",
        "width",
        "height"
      ],
      "type": "object",
      "properties": {
        "mapId": {
          "type": "number"
        },
        "projectId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scale": {
          "type": "number"
        },
        "scaleUnit": {
          "type": "number"
        },
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        }
      }
    },
    "OrionWirelessHeatMapMapDeleteWirelessHeatMapRequest": {
      "required": [
        "mapId"
      ],
      "type": "object",
      "properties": {
        "mapId": {
          "type": "number"
        }
      }
    },
    "OrionWirelessHeatMapMapUpdateMapGenerationProgressRequest": {
      "required": [
        "mapId",
        "progress",
        "errorCode"
      ],
      "type": "object",
      "properties": {
        "mapId": {
          "type": "number"
        },
        "progress": {
          "type": "number"
        },
        "errorCode": {
          "type": "number"
        }
      }
    },
    "OrionWirelessHeatMapMapInsertMapRequest": {
      "required": [
        "name",
        "scale",
        "scaleUnit",
        "width",
        "height",
        "mapStudioFileGuid"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "scale": {
          "type": "number"
        },
        "scaleUnit": {
          "type": "number"
        },
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "mapStudioFileGuid": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "OrionWirelessHeatMapMapDeleteMapRequest": {
      "required": [
        "mapStudioFileGuid"
      ],
      "type": "object",
      "properties": {
        "mapStudioFileGuid": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "OrionWirelessHeatMapMapSetMapErrorRequest": {
      "required": [
        "mapId",
        "started",
        "errorCode"
      ],
      "type": "object",
      "properties": {
        "mapId": {
          "type": "number"
        },
        "started": {
          "format": "date-time",
          "type": "string"
        },
        "errorCode": {
          "type": "number"
        }
      }
    },
    "OrionWirelessHeatMapMapFireMapGenerationIndicationRequest": {
      "required": [
        "mapId"
      ],
      "type": "object",
      "properties": {
        "mapId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Orion.Maps.Models.WLHM.WirelessHeatMapPoint": {
      "type": "object",
      "properties": {
        "PointID": {
          "type": "number"
        },
        "MapID": {
          "type": "number"
        },
        "InstanceID": {
          "type": "number"
        },
        "X": {
          "type": "number"
        },
        "Y": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        }
      }
    },
    "OrionWirelessHeatMapMapCloneWirelessHeatMapFromNAMapRequest": {
      "required": [
        "naMapId",
        "projectId",
        "name",
        "scale",
        "scaleUnit",
        "lastGenerationStarted",
        "lastGenerationFinished",
        "width",
        "height",
        "points"
      ],
      "type": "object",
      "properties": {
        "naMapId": {
          "type": "number"
        },
        "projectId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scale": {
          "type": "number"
        },
        "scaleUnit": {
          "type": "number"
        },
        "lastGenerationStarted": {
          "format": "date-time",
          "type": "string"
        },
        "lastGenerationFinished": {
          "format": "date-time",
          "type": "string"
        },
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Orion.Maps.Models.WLHM.WirelessHeatMapPoint"
          }
        }
      }
    },
    "OrionWirelessHeatMapMapPollAPSignalStrengthNowRequest": {
      "required": [
        "heatmapId"
      ],
      "type": "object",
      "properties": {
        "heatmapId": {
          "type": "number"
        }
      }
    },
    "System.Collections.Generic.KeyValuePair~System.Int64_System.Int32~": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "number"
        },
        "Value": {
          "type": "number"
        }
      }
    },
    "OrionWirelessHeatMapMapPollRPSignalStrengthNowRequest": {
      "required": [
        "heatmapId",
        "clientIdVsMapPointIdMap"
      ],
      "type": "object",
      "properties": {
        "heatmapId": {
          "type": "number"
        },
        "clientIdVsMapPointIdMap": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.Int64_System.Int32~"
          }
        }
      }
    },
    "OrionWirelessHeatMapMapStartClientSignalPollRequest": {
      "required": [
        "heatmapId",
        "clientIdVsMapPointIdMap"
      ],
      "type": "object",
      "properties": {
        "heatmapId": {
          "type": "number"
        },
        "clientIdVsMapPointIdMap": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.Int64_System.Int32~"
          }
        }
      }
    },
    "System.Collections.Generic.KeyValuePair~System.Int32_System.String_array~": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "number"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrionWirelessHeatMapMapGetProgressRequest": {
      "required": [
        "keysByEngines"
      ],
      "type": "object",
      "properties": {
        "keysByEngines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair~System.Int32_System.String_array~"
          }
        }
      }
    },
    "OrionWirelessHeatMapMapDeleteReferencePointsRequest": {
      "required": [
        "mapPointIds"
      ],
      "type": "object",
      "properties": {
        "mapPointIds": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "OrionWirelessHeatMapMapPointInsertMapPointRequest": {
      "required": [
        "mapId",
        "entityType",
        "instanceId",
        "x",
        "y"
      ],
      "type": "object",
      "properties": {
        "mapId": {
          "type": "number"
        },
        "entityType": {
          "type": "string"
        },
        "instanceId": {
          "type": "number"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      }
    },
    "OrionWirelessHeatMapMapPointDeleteMapPointsRequest": {
      "required": [
        "wlhmId"
      ],
      "type": "object",
      "properties": {
        "wlhmId": {
          "type": "number"
        }
      }
    },
    "OrionWirelessHeatMapMapPointDeleteMapPointRequest": {
      "required": [
        "mapId",
        "entityType",
        "instanceId"
      ],
      "type": "object",
      "properties": {
        "mapId": {
          "type": "number"
        },
        "entityType": {
          "type": "string"
        },
        "instanceId": {
          "type": "number"
        }
      }
    },
    "SolarWinds.Data.Providers.WirelessHeatmaps.Verbs.MapStore-MapPointInstance": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "X": {
          "type": "number"
        },
        "Y": {
          "type": "number"
        }
      }
    },
    "OrionWirelessHeatMapMapPointSyncMapPointsRequest": {
      "required": [
        "mapId",
        "naMapPoints",
        "isAP"
      ],
      "type": "object",
      "properties": {
        "mapId": {
          "type": "number"
        },
        "naMapPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarWinds.Data.Providers.WirelessHeatmaps.Verbs.MapStore-MapPointInstance"
          }
        },
        "isAP": {
          "type": "boolean"
        }
      }
    },
    "OrionWirelessHeatMapResourceLimitationInsertResourceLimitationRequest": {
      "required": [
        "resourceId",
        "mapGuid",
        "mapLimitationCount",
        "apMACAddress",
        "apLimitationCount",
        "clientMACAddress"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "number"
        },
        "mapGuid": {
          "format": "uuid",
          "type": "string"
        },
        "mapLimitationCount": {
          "type": "number"
        },
        "apMACAddress": {
          "type": "string"
        },
        "apLimitationCount": {
          "type": "number"
        },
        "clientMACAddress": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mapId": {
          "type": "number"
        }
      }
    },
    "Orion.APM.NodeToNodeLink": {
      "description": "\n      This entity aggregates all connections between two nodes.\n    ",
      "type": "object",
      "properties": {
        "ID": {
          "description": "Unique integer identifier of link between nodes.",
          "type": "number"
        },
        "ChildNodeID": {
          "description": "ID of node representing source of connection.",
          "type": "number"
        },
        "ParentNodeID": {
          "description": "ID of node representing destination of connection.",
          "type": "number"
        },
        "Latency": {
          "description": "Latency in ms between child and parent node.",
          "type": "number"
        },
        "PacketLoss": {
          "description": "Packet loss between child and parent node.",
          "type": "number"
        },
        "Status": {
          "description": "Status of connection.",
          "type": "number"
        },
        "LatencyStatus": {
          "description": "Worst status of latency aggregated from Orion.APM.DependencyTCPStatistics.",
          "type": "number"
        },
        "PacketLossStatus": {
          "description": "Worst status of packet loss aggregated from Orion.APM.DependencyTCPStatistics.",
          "type": "number"
        },
        "StatusDescription": {
          "description": "Verbal expression of connection status.",
          "type": "string"
        },
        "LatencyStatusDescription": {
          "description": "Verbal expression of latency status.",
          "type": "string"
        },
        "PacketLossStatusDescription": {
          "description": "Verbal expression of packet loss status.",
          "type": "string"
        },
        "DetailsUrl": {
          "description": "Url to Link Details Page where are details of the entity.",
          "type": "string"
        },
        "DisplayName": {
          "description": "Caption of child node and parent node.",
          "type": "string"
        },
        "Description": {
          "description": "Custom description of connection.",
          "type": "string"
        },
        "StatusLED": {
          "description": "This property is not used.",
          "type": "string"
        },
        "Image": {
          "description": "This property is not used.",
          "type": "string"
        },
        "ModernIcon": {
          "description": "Nova icon name for the entity.",
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        }
      }
    },
    "Orion.APM.DependencyTcpStatistics": {
      "description": "\n      This entity aggregates all connections between application/node and application/node.\n    ",
      "type": "object",
      "properties": {
        "DependencyID": {
          "description": "The unique integer identified of ID in Orion.Dependencies.",
          "type": "number"
        },
        "NodeToNodeLinkID": {
          "description": "Unique integer identified of ID in Orion.APM.NodeToNodeLink.",
          "type": "number"
        },
        "ClientApplicationID": {
          "description": "ID of client application.",
          "type": "number"
        },
        "ServerApplicationID": {
          "description": "ID of server application.",
          "type": "number"
        },
        "Latency": {
          "description": "Latency in ms of the connection.",
          "type": "number"
        },
        "PacketLoss": {
          "description": "Packet loss of the connection.",
          "type": "number"
        },
        "Status": {
          "description": "The value indicating worst status of connections aggregated from Orion.APM.ApplicationTcpConnection.",
          "type": "number"
        },
        "LatencyStatus": {
          "description": "Worst status of latency of connections aggregated from Orion.APM.ApplicationTcpConnection.",
          "type": "number"
        },
        "PacketLossStatus": {
          "description": "Worst status of packet loss of connections aggregated from Orion.APM.ApplicationTcpConnection.",
          "type": "number"
        },
        "LastPoll": {
          "format": "date-time",
          "description": "The value indicating last poll of the connection.",
          "type": "string"
        },
        "Image": {
          "description": "Image what should be shown in UI.",
          "type": "string"
        },
        "StatusDescription": {
          "description": "The description of the status.",
          "type": "string"
        },
        "LatencyStatusDescription": {
          "description": "Verbal expression of worst latency status aggregated from Orion.APM.ApplicationTcpConnection.",
          "type": "string"
        },
        "PacketLossStatusDescription": {
          "description": "Verbal expression of worst packet loss status aggregated from Orion.APM.ApplicationTcpConnection.",
          "type": "string"
        },
        "StatusLED": {
          "description": "LED which should be displayed in the UI",
          "type": "string"
        },
        "DetailsUrl": {
          "description": "URL where can be displayed details about the entity.",
          "type": "string"
        },
        "DisplayName": {
          "description": "Name of the dependency.",
          "type": "string"
        },
        "Description": {
          "description": "The description of the entity.",
          "type": "string"
        },
        "ModernIcon": {
          "description": "Nova icon name for the entity.",
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        }
      }
    },
    "Orion.APM.ApplicationTcpConnection": {
      "description": "\n      This entity aggregates application connections from one process to another.\n    ",
      "type": "object",
      "properties": {
        "ID": {
          "description": "The unique integer representation of database.",
          "type": "number"
        },
        "ParentDependencyID": {
          "description": "The unique integer identified of ID in Orion.Dependencies.",
          "type": "number"
        },
        "ClientProcessName": {
          "description": "The name of the process which is the source of the connection.",
          "type": "string"
        },
        "ClientCmdlineArgs": {
          "description": "The process arguments of the process which is the source of the connection.",
          "type": "string"
        },
        "ClientServiceName": {
          "description": "The service name for source of the connection.",
          "type": "string"
        },
        "ClientInterfaceID": {
          "description": "The interface Id for source of the connection.",
          "type": "number"
        },
        "ClientComponentID": {
          "description": "ID of component being monitored on client node.",
          "type": "number"
        },
        "ClientApplicationID": {
          "description": "ID of application being monitored on client node.",
          "type": "number"
        },
        "ClientNodeID": {
          "description": "ID of client node.",
          "type": "number"
        },
        "ClientNodeIPAddress": {
          "description": "IP address of client node.",
          "type": "string"
        },
        "ServerProcessName": {
          "description": "The name of the process which is the destination of the connection.",
          "type": "string"
        },
        "ServerCmdlineArgs": {
          "description": "The process arguments of the process which is the destination of the connection.",
          "type": "string"
        },
        "ServerServiceName": {
          "description": "The service name for destination of the connection.",
          "type": "string"
        },
        "ServerInterfaceID": {
          "description": "The interface Id for destination of the connection.",
          "type": "number"
        },
        "ServerComponentID": {
          "description": "ID of component, except port based component, being monitored on server node.",
          "type": "number"
        },
        "ServerPortComponentID": {
          "description": "ID of port based component being monitored on server node.",
          "type": "number"
        },
        "ServerApplicationID": {
          "description": "ID of application being monitored on server node.",
          "type": "number"
        },
        "ServerNodeID": {
          "description": "ID of server node.",
          "type": "number"
        },
        "ServerNodeIPAddress": {
          "description": "IP address of server node.",
          "type": "string"
        },
        "ServerPort": {
          "description": "The port address of the connection.",
          "type": "number"
        },
        "ClientDescription": {
          "description": "The description of the source of the connection.",
          "type": "string"
        },
        "ServerDescription": {
          "description": "The description of the destination of the connection.",
          "type": "string"
        },
        "LastSeenTimeStamp": {
          "format": "date-time",
          "description": "The time when was the connection seen last time.",
          "type": "string"
        },
        "Latency": {
          "description": "Latency in ms for the connection.",
          "type": "number"
        },
        "PacketLoss": {
          "description": "Packet loss for the connection.",
          "type": "number"
        },
        "Status": {
          "description": "The value indicating status of the connection.",
          "type": "number"
        },
        "LatencyStatus": {
          "description": "The value indicating latency status of the connection.",
          "type": "number"
        },
        "PacketLossStatus": {
          "description": "The value indicating packet loss status of the connection.",
          "type": "number"
        },
        "LastStatisticPollTime": {
          "format": "date-time",
          "description": "Last statistics poll time for latency and packetLoss",
          "type": "string"
        },
        "Image": {
          "description": "Image what should be shown in UI.",
          "type": "string"
        },
        "StatusDescription": {
          "description": "The description of the status.",
          "type": "string"
        },
        "LatencyStatusDescription": {
          "description": "Verbal expression of latency status.",
          "type": "string"
        },
        "PacketLossStatusDescription": {
          "description": "Verbal expression of packet loss status.",
          "type": "string"
        },
        "StatusLED": {
          "description": "LED which should be displayed in the UI",
          "type": "string"
        },
        "DetailsUrl": {
          "description": "URL where can be displayed details about the entity.",
          "type": "string"
        },
        "DisplayName": {
          "description": "Name of dependency with appropriate server port.",
          "type": "string"
        },
        "Description": {
          "description": "The description of the entity.",
          "type": "string"
        },
        "ModernIcon": {
          "description": "Nova icon name for the entity.",
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        }
      }
    },
    "Orion.AgentManagement.Agent": {
      "description": "This entity represents an agent.",
      "type": "object",
      "properties": {
        "AgentId": {
          "description": "The unique integer representation of agent",
          "type": "number"
        },
        "AgentGuid": {
          "format": "uuid",
          "description": "The globally unique identifier representation of agent",
          "type": "string"
        },
        "NodeId": {
          "description": "The unique integer representation of parent node.",
          "type": "number"
        },
        "Name": {
          "description": "The string value that contains the name of the agent.",
          "type": "string"
        },
        "Hostname": {
          "description": "Hostname of the server that this agent resides on.",
          "type": "string"
        },
        "DNSName": {
          "description": "Full DNS name of the server that this agent resides on.",
          "type": "string"
        },
        "IP": {
          "description": "IP Address of the server that this agent resides on.",
          "type": "string"
        },
        "OSVersion": {
          "description": "Version of the operating system Linux agent binaries were built for; for a Windows Agent same as RuntimeOSVersion.",
          "type": "string"
        },
        "PollingEngineId": {
          "description": "ID of the polling engine",
          "type": "number"
        },
        "ConnectionStatus": {
          "description": "An integer value which represents the current connection status of the agent to AMS",
          "type": "number"
        },
        "ConnectionStatusMessage": {
          "description": "A human readable string description of the current connection status of the agent to AMS",
          "type": "string"
        },
        "ConnectionStatusTimestamp": {
          "format": "date-time",
          "description": "Last time that the connection status was updated",
          "type": "string"
        },
        "AgentStatus": {
          "description": "An integer value which represents the current agent status",
          "type": "number"
        },
        "AgentStatusMessage": {
          "description": "A human readable string description of the current agent status",
          "type": "string"
        },
        "AgentStatusTimestamp": {
          "format": "date-time",
          "description": "Last time that the agent status was updated",
          "type": "string"
        },
        "IsActiveAgent": {
          "description": "A boolean value indicating if the agent is in active mode (Agent-initiated communication) as opposed to passive (Server-initiated communication)",
          "type": "boolean"
        },
        "Mode": {
          "description": "A integer value with a value of 1 if the agent is in active mode (Agent-initiated communication), with a value of 2 if the agent is in passive (Server-initiated communication) mode or with a value of 0 if agent mode will be automatically detected during installation.",
          "type": "number"
        },
        "AgentVersion": {
          "description": "Full version of the agent binaries.",
          "type": "string"
        },
        "AutoUpdateEnabled": {
          "description": "A boolean value that indicates if this agent can be updated without user intervention",
          "type": "boolean"
        },
        "OrionIdColumn": {
          "description": "Name of column/property with Agent ID. It's used internally by Orion.",
          "type": "string"
        },
        "PassiveAgentHostname": {
          "description": "The hostname or IP address of the agent which AMS uses to connect to agent in passive mode.",
          "type": "string"
        },
        "PassiveAgentPort": {
          "description": "The listening port of the agent which AMS uses to connect to agent in passive mode.",
          "type": "string"
        },
        "ProxyId": {
          "description": "ID of the proxy through which Agent to AMS connection takes place through",
          "type": "number"
        },
        "RegisteredOn": {
          "format": "date-time",
          "description": "Timestamp at which the agent was registered with AMS",
          "type": "string"
        },
        "SID": {
          "description": "The Windows security identifier of the server that the agent is installed on, or a unique-like idendifier of the server in case of Linux system.",
          "type": "string"
        },
        "Is64Windows": {
          "description": "A boolean value indicating if the operating system of the agent is 64 bit.",
          "type": "boolean"
        },
        "CPUArch": {
          "description": "A string value indicating the architecture of the CPU of the agent server.",
          "type": "string"
        },
        "OSArch": {
          "description": "A string value indicating the architecture of the operating system of the agent server.",
          "type": "string"
        },
        "OSType": {
          "description": "A string value which is the type of the operating system",
          "type": "string"
        },
        "OSDistro": {
          "description": "A string value indicating the Linux type of distribution.",
          "type": "string"
        },
        "ResponseTime": {
          "description": "An integer value indicating in miliseconds how long it takes for a data message to go from AMS to Agent and back",
          "type": "number"
        },
        "Type": {
          "description": "An integer value indicating the type. Currently not used and always 0.",
          "type": "number"
        },
        "RuntimeOSDistro": {
          "description": "A string value indicating the Linux distribution, where the Agent runs.",
          "type": "string"
        },
        "RuntimeOSVersion": {
          "description": "A string value indicating the OS version, where the Agent runs.",
          "type": "string"
        },
        "RuntimeOSLabel": {
          "description": "A string value indicating a human readable operating system label, where the Agent runs.",
          "type": "string"
        },
        "OSLabel": {
          "description": "A string value representing a human readable operating system label.",
          "type": "string"
        },
        "NetFrameworkRelease": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AgentManagement.AgentPlugin": {
      "description": "A representation of the plugin on a particular agent.",
      "type": "object",
      "properties": {
        "AgentId": {
          "description": "The ID of agent that this plugin is installed on",
          "type": "number"
        },
        "PluginId": {
          "description": "A string which indicates the type of this plugin",
          "type": "string"
        },
        "Version": {
          "description": "A string which is the version of this plugin",
          "type": "string"
        },
        "LastChange": {
          "format": "date-time",
          "description": "Timestamp when plugin state changed last time",
          "type": "string"
        },
        "Status": {
          "description": "An integer value indicating the status of the plugin",
          "type": "number"
        },
        "StatusMessage": {
          "description": "A human readable string description of the current status of the plugin.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AgentManagement.Proxy": {
      "description": "Proxy settings used in agent to AMS communications.",
      "type": "object",
      "properties": {
        "ProxyId": {
          "description": "The unique integer representation of proxy",
          "type": "number"
        },
        "ProxyUrl": {
          "description": "A string value with is the URL to the proxy server.",
          "type": "string"
        },
        "UseProxyAuthentication": {
          "description": "A boolean value indicating whether proxy authentication is to be used.",
          "type": "boolean"
        },
        "ProxyCredentialId": {
          "description": "ID of the Orion credentials to use for proxy authentication.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.AlertStackBasicMetricMetadata": {
      "type": "object",
      "properties": {
        "SourceInstanceType": {
          "type": "string"
        },
        "GroupId": {
          "type": "string"
        },
        "MetricId": {
          "type": "string"
        },
        "ThresholdName": {
          "type": "string"
        },
        "SourcePropertyName": {
          "type": "string"
        },
        "DetectionLevel": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.Issues": {
      "description": "\n        This entity provides root information for an Orion Issue created by the AIIM BusinessLayer.\n     ",
      "type": "object",
      "properties": {
        "IssueId": {
          "description": "Int32 that identifies the Issue.",
          "type": "number"
        },
        "EngineId": {
          "description": "Int32 that identifies the Polling engine that created the Issues.",
          "type": "number"
        },
        "CheckpointId": {
          "description": "Int64 that identifies the latest snapshot for the Issue.",
          "type": "number"
        },
        "CheckpointDateTime": {
          "format": "date-time",
          "description": "When the latest snapshot was taken.",
          "type": "string"
        },
        "StartDateTime": {
          "format": "date-time",
          "description": "When the Issue was identified, and began",
          "type": "string"
        },
        "ClosedDateTime": {
          "format": "date-time",
          "description": "When this Issue was closed.",
          "type": "string"
        },
        "ClosedBy": {
          "description": "The user id of the user that Closed the Issue.",
          "type": "string"
        },
        "EntityCount": {
          "description": "Number of ManagedEntities involved in the Issue.",
          "type": "number"
        },
        "AlertCount": {
          "description": "Number of Alerts involved in the Issue.",
          "type": "number"
        },
        "Status": {
          "description": "Current Status of the Issue",
          "type": "number"
        },
        "Severity": {
          "description": "Current Severity of the Issue",
          "type": "number"
        },
        "Notes": {
          "description": "User note about this Issue.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.IssueHistory": {
      "description": "\n        This entity provides the historical snapshots of Orion Issues, automatically taken while the issue is active.\n     ",
      "type": "object",
      "properties": {
        "CheckpointId": {
          "description": "Int64 that identifies this snapshot for the Issue",
          "type": "number"
        },
        "IssueId": {
          "description": "Int32 that identifies the Issue.",
          "type": "number"
        },
        "CheckpointDateTime": {
          "format": "date-time",
          "description": "When this snapshot was taken.",
          "type": "string"
        },
        "StartDateTime": {
          "format": "date-time",
          "description": "When the Issue was identified, and began",
          "type": "string"
        },
        "ClosedDateTime": {
          "format": "date-time",
          "description": "When this Issue was closed.",
          "type": "string"
        },
        "EntityCount": {
          "description": "Number of ManagedEntities involved in the Issue.",
          "type": "number"
        },
        "AlertCount": {
          "description": "Number of Alerts involved in the Issue.",
          "type": "number"
        },
        "Status": {
          "description": "Status of the Issue when this snapshot was taken",
          "type": "number"
        },
        "Severity": {
          "description": "Current Severity of the Issue",
          "type": "number"
        },
        "GraphDefinition": {
          "description": "graphresponse for this Issue",
          "type": "string"
        },
        "GraphDefinitionCompressed": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "GraphSnapshot": {
          "description": "raphresponse for this Issue",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "Notes": {
          "description": "User note about this Issue.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.Occurrences": {
      "description": "\n        This entity provides a list of the event occurrences that contributed to this issue.\n     ",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Int64 Id identifies this unique occurrence of an event",
          "type": "number"
        },
        "IssueId": {
          "description": "Int32 that identifies the Issue.",
          "type": "number"
        },
        "Type": {
          "description": "Type of Occurrence (Alert, Event, Configuration Change, Anomaly, Metric)",
          "type": "number"
        },
        "StartDateTime": {
          "format": "date-time",
          "description": "When the occurrence startd.",
          "type": "string"
        },
        "EndDateTime": {
          "format": "date-time",
          "description": "When the occurrence stopped.",
          "type": "string"
        },
        "SourceOpid": {
          "description": "A string that identifies the Entity for this occurrence",
          "type": "string"
        },
        "SourceId": {
          "description": "A string that identifies the PerfStack metric for this occurrence",
          "type": "string"
        },
        "SubMetricId": {
          "description": "A string that identifies the instance of Alert or Anomaly",
          "type": "string"
        },
        "OccurrenceCount": {
          "description": "Number of Occurrences of this type (Alert, Event, Configuration Change, Anomaly, Metric)",
          "type": "number"
        },
        "IsPrimary": {
          "description": "Was this a Primary occurrence when issue was created",
          "type": "boolean"
        },
        "GroupDisplayName": {
          "description": "The metric group display name.",
          "type": "string"
        },
        "MetricDisplayName": {
          "description": "The metric display name.",
          "type": "string"
        },
        "PrimaryKeyName": {
          "description": "Name of the primary key. used of faster access.",
          "type": "string"
        },
        "AlertObjectId": {
          "description": "The AlertObjectId if occurrence is type of Alert",
          "type": "number"
        },
        "AlertId": {
          "type": "number"
        },
        "NetworkNode": {
          "description": "NetworkNode - needed for account limitations",
          "type": "number"
        },
        "NetObjectID": {
          "description": "NetObjectID - needed for account limitations",
          "type": "number"
        },
        "NetObjectType": {
          "description": "NetObjectType - needed for account limitations",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.AnomalyHistory": {
      "description": "\n      This entity presents detected anomalies\n    ",
      "type": "object",
      "properties": {
        "AnomalyHistoryId": {
          "description": "The unique integer representation of the anomaly",
          "type": "number"
        },
        "TimeStampUtc": {
          "format": "date-time",
          "description": "The date and time when row was added to the database",
          "type": "string"
        },
        "MeasurementTimeUtc": {
          "format": "date-time",
          "description": "The date and time from the measurement history table",
          "type": "string"
        },
        "ValidUntilUtc": {
          "format": "date-time",
          "description": "The date and time until the Anomaly is considered anomalous",
          "type": "string"
        },
        "MetricId": {
          "description": "The string value representing Orion metric ID",
          "type": "string"
        },
        "MetricDisplayName": {
          "description": "The string value that provided a human readable name for the metric",
          "type": "string"
        },
        "SourceOpid": {
          "description": "The string value representing Orion Platform Identifier of the entity that owns this metric",
          "type": "string"
        },
        "SourceId": {
          "description": "The integer value representing ID of the ManagedEntity that owns metric",
          "type": "number"
        },
        "SourceInstanceType": {
          "description": "The string value representing the orion entity type of the source",
          "type": "string"
        },
        "SourceUri": {
          "description": "The string is a SWIS uri, globally unique identifier for the source of this metric",
          "type": "string"
        },
        "SourceDisplayName": {
          "description": "The display name of the source entity.",
          "type": "string"
        },
        "SourceDetailsUrl": {
          "description": "The string that is a url to navigate to the details page.",
          "type": "string"
        },
        "SourceStatusIcon": {
          "description": "The status of the source when the anomaly was detected",
          "type": "string"
        },
        "SourceIcon": {
          "description": "Name of Icon that represents the source entity.",
          "type": "string"
        },
        "MetricValue": {
          "description": "The double value representing the measured value that was anomalous",
          "type": "number"
        },
        "Units": {
          "description": "The string value that is the units of measure for the metric value",
          "type": "string"
        },
        "AnomalyScore": {
          "description": "The double value representing 0.0 - 1.0 of anomaly's P value (Z score in some cases)",
          "type": "number"
        },
        "Duration": {
          "description": "The integer value representing total duration of anomaly. Increases as consecutive measurements of a metric continue to be anomalous",
          "type": "number"
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.AnomalyBasedAlertSources": {
      "description": "\n      This entity provides list of managed entities and metrics used in Anomaly Based Alerts.\n    ",
      "type": "object",
      "properties": {
        "AlertId": {
          "description": "Unique Id of the alert configuration.",
          "type": "number"
        },
        "GroupId": {
          "description": "The string value representing Orion Metric Group ID (System.StatisticsEntity)",
          "type": "string"
        },
        "SourceUri": {
          "description": "Unique SWIS Uri for the source ManagedEntity.",
          "type": "string"
        },
        "MetricId": {
          "description": "The string value representing Orion metric ID",
          "type": "string"
        },
        "NetworkNode": {
          "description": "NetworkNode - needed for account limitations",
          "type": "number"
        },
        "NetObjectID": {
          "description": "NetObjectID - needed for account limitations",
          "type": "number"
        },
        "NetObjectType": {
          "description": "NetObjectType - needed for account limitations",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.SourceStatus": {
      "description": "\n      This entity provides current status of anomaly detection for a specific ManagedEntity.\n    ",
      "type": "object",
      "properties": {
        "SourceUri": {
          "description": "Unique SWIS Uri for the source ManagedEntity.",
          "type": "string"
        },
        "SourceOpid": {
          "description": "Orion unique identifier for the source ManagedEntity.",
          "type": "string"
        },
        "Status": {
          "description": "ManagedEntity status when last checked.",
          "type": "number"
        },
        "SourceDisplayName": {
          "description": "Entity Display Name.",
          "type": "string"
        },
        "SourceStatusIcon": {
          "description": "The status of the source.",
          "type": "string"
        },
        "SourceIcon": {
          "description": "Name of Icon that represents the source entity.",
          "type": "string"
        },
        "SourceDetailsUrl": {
          "description": "The string that is a url to navigate to the details page.",
          "type": "string"
        },
        "SourceInstanceType": {
          "description": "The string value representing the orion entity type of the source.",
          "type": "string"
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.BasicMetricMetadata": {
      "description": "\n      This entity provides a list of Basic KPI Metrics, Thresholds and Entity Properties, this is a link table.\n    ",
      "type": "object",
      "properties": {
        "SourceInstanceType": {
          "description": "The string value representing the orion entity type of the source",
          "type": "string"
        },
        "GroupId": {
          "description": "The string value representing Orion Metric Group ID (System.StatisticsEntity)",
          "type": "string"
        },
        "MetricId": {
          "description": "The string value representing Orion Metric ID (System.StatisticsEntity property name)",
          "type": "string"
        },
        "ThresholdName": {
          "description": "The name of the threshold entity for this metric.",
          "type": "string"
        },
        "SourcePropertyName": {
          "description": "The name of the property that has the current value of the Metrics.",
          "type": "string"
        },
        "TargetPropertyName": {
          "type": "string"
        },
        "SourceIdPropertyName": {
          "type": "string"
        },
        "DetectionLevel": {
          "description": "The anomaly detection level for this metric.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.AiOpsMetricStatus": {
      "description": "\n      This entity saves metric status from AiOps service.\n    ",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The integer value representing ID of the metric status",
          "type": "number"
        },
        "SourceUri": {
          "description": "The string is a SWIS uri, globally unique identifier for the source of this metric",
          "type": "string"
        },
        "MetricName": {
          "description": "The string value representing Orion metric ID (including GroupId)",
          "type": "string"
        },
        "TimeStampUtc": {
          "format": "date-time",
          "description": "The date and time when row was added to the database",
          "type": "string"
        },
        "MeasurementTimeUtc": {
          "format": "date-time",
          "description": "The date and time when status was evaluated",
          "type": "string"
        },
        "Status": {
          "description": "The status of metric",
          "type": "number"
        },
        "MetricValue": {
          "description": "The latest polled metric value",
          "type": "number"
        },
        "NorLowerBound": {
          "description": "NOR (Normal Operating Range) lower bound",
          "type": "number"
        },
        "NorUpperBound": {
          "description": "NOR (Normal Operating Range) upper bound",
          "type": "number"
        },
        "EndTimeUtc": {
          "format": "date-time",
          "description": "The time when record is replaced by newer record (used for simplifying UI calls)",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.AnomalyBasedAlertSettings": {
      "description": "\n      This entity saves Anomaly Based Alerts settings.\n    ",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The integer value representing primary key of the settings record",
          "type": "number"
        },
        "OrionRegistrationTimestamp": {
          "format": "date-time",
          "description": "The timestamp of configuration of Anomaly Based Alerts in Orion (a 'snapshot-timestamp')",
          "type": "string"
        },
        "UamsRegistrationTimestamp": {
          "format": "date-time",
          "description": "The latest 'snapshot-timestamp' processed in AiOps service (in cloud)",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.UsageStatistics": {
      "description": "\n        This entity provides a simple statistics about resource usage.\n     ",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Int32 that identifies this UsageStatistics",
          "type": "number"
        },
        "Date": {
          "format": "date-time",
          "description": "Timestamp of this UsageStatistics",
          "type": "string"
        },
        "Key": {
          "description": "The string value which represents this resource",
          "type": "string"
        },
        "Value": {
          "description": "The integer value which represents the value of this resource",
          "type": "number"
        },
        "Preserve": {
          "description": "The boolean value that specifies if the record is deleted during maintenance",
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.Orion_Nodes_Anomalies": {
      "type": "object",
      "properties": {
        "SourceUri": {
          "type": "string"
        },
        "Orion_CPULoad_AvgLoadDisplayName": {
          "type": "string"
        },
        "Orion_CPULoad_AvgLoadUnits": {
          "type": "string"
        },
        "Orion_CPULoad_AvgLoadValue": {
          "type": "number"
        },
        "Orion_CPULoad_AvgLoadStatus": {
          "type": "number"
        },
        "Orion_CPULoad_AvgPercentMemoryUsedDisplayName": {
          "type": "string"
        },
        "Orion_CPULoad_AvgPercentMemoryUsedUnits": {
          "type": "string"
        },
        "Orion_CPULoad_AvgPercentMemoryUsedValue": {
          "type": "number"
        },
        "Orion_CPULoad_AvgPercentMemoryUsedStatus": {
          "type": "number"
        },
        "Orion_ResponseTime_AvgResponseTimeDisplayName": {
          "type": "string"
        },
        "Orion_ResponseTime_AvgResponseTimeUnits": {
          "type": "string"
        },
        "Orion_ResponseTime_AvgResponseTimeValue": {
          "type": "number"
        },
        "Orion_ResponseTime_AvgResponseTimeStatus": {
          "type": "number"
        },
        "Orion_ResponseTime_PercentLossDisplayName": {
          "type": "string"
        },
        "Orion_ResponseTime_PercentLossUnits": {
          "type": "string"
        },
        "Orion_ResponseTime_PercentLossValue": {
          "type": "number"
        },
        "Orion_ResponseTime_PercentLossStatus": {
          "type": "number"
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.Orion_Volumes_Anomalies": {
      "type": "object",
      "properties": {
        "SourceUri": {
          "type": "string"
        },
        "Orion_VolumeUsageHistory_PercentDiskUsedDisplayName": {
          "type": "string"
        },
        "Orion_VolumeUsageHistory_PercentDiskUsedUnits": {
          "type": "string"
        },
        "Orion_VolumeUsageHistory_PercentDiskUsedValue": {
          "type": "number"
        },
        "Orion_VolumeUsageHistory_PercentDiskUsedStatus": {
          "type": "number"
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.Orion_VIM_Clusters_Anomalies": {
      "type": "object",
      "properties": {
        "SourceUri": {
          "type": "string"
        },
        "Orion_VIM_ClusterStatistics_AvgCPULoadDisplayName": {
          "type": "string"
        },
        "Orion_VIM_ClusterStatistics_AvgCPULoadUnits": {
          "type": "string"
        },
        "Orion_VIM_ClusterStatistics_AvgCPULoadValue": {
          "type": "number"
        },
        "Orion_VIM_ClusterStatistics_AvgCPULoadStatus": {
          "type": "number"
        },
        "Orion_VIM_ClusterStatistics_AvgMemoryUsageDisplayName": {
          "type": "string"
        },
        "Orion_VIM_ClusterStatistics_AvgMemoryUsageUnits": {
          "type": "string"
        },
        "Orion_VIM_ClusterStatistics_AvgMemoryUsageValue": {
          "type": "number"
        },
        "Orion_VIM_ClusterStatistics_AvgMemoryUsageStatus": {
          "type": "number"
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.Orion_VIM_Hosts_Anomalies": {
      "type": "object",
      "properties": {
        "SourceUri": {
          "type": "string"
        },
        "Orion_VIM_HostStatistics_AvgCpuLoadDisplayName": {
          "type": "string"
        },
        "Orion_VIM_HostStatistics_AvgCpuLoadUnits": {
          "type": "string"
        },
        "Orion_VIM_HostStatistics_AvgCpuLoadValue": {
          "type": "number"
        },
        "Orion_VIM_HostStatistics_AvgCpuLoadStatus": {
          "type": "number"
        },
        "Orion_VIM_HostStatistics_AvgMemUsageDisplayName": {
          "type": "string"
        },
        "Orion_VIM_HostStatistics_AvgMemUsageUnits": {
          "type": "string"
        },
        "Orion_VIM_HostStatistics_AvgMemUsageValue": {
          "type": "number"
        },
        "Orion_VIM_HostStatistics_AvgMemUsageStatus": {
          "type": "number"
        },
        "Orion_VIM_HostStatistics_AvgNetworkUtilizationDisplayName": {
          "type": "string"
        },
        "Orion_VIM_HostStatistics_AvgNetworkUtilizationUnits": {
          "type": "string"
        },
        "Orion_VIM_HostStatistics_AvgNetworkUtilizationValue": {
          "type": "number"
        },
        "Orion_VIM_HostStatistics_AvgNetworkUtilizationStatus": {
          "type": "number"
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AIIM.Orion_VIM_VirtualMachines_Anomalies": {
      "type": "object",
      "properties": {
        "SourceUri": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgCPULoadDisplayName": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgCPULoadUnits": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgCPULoadValue": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgCPULoadStatus": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgMemoryUsageDisplayName": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgMemoryUsageUnits": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgMemoryUsageValue": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgMemoryUsageStatus": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgIOPSTotalDisplayName": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgIOPSTotalUnits": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgIOPSTotalValue": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgIOPSTotalStatus": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgIOPSReadDisplayName": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgIOPSReadUnits": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgIOPSReadValue": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgIOPSReadStatus": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgIOPSWriteDisplayName": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgIOPSWriteUnits": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgIOPSWriteValue": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgIOPSWriteStatus": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgNetworkUsageRateDisplayName": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgNetworkUsageRateUnits": {
          "type": "string"
        },
        "Orion_VIM_VMStatistics_AvgNetworkUsageRateValue": {
          "type": "number"
        },
        "Orion_VIM_VMStatistics_AvgNetworkUsageRateStatus": {
          "type": "number"
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.APM.ComponentSetting": {
      "type": "object",
      "properties": {
        "ComponentID": {
          "type": "number"
        },
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "ValueType": {
          "type": "number"
        },
        "Required": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.APM.ApplicationSettings": {
      "type": "object",
      "properties": {
        "ApplicationID": {
          "type": "number"
        },
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "ValueType": {
          "type": "number"
        },
        "Required": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.APM.ComponentSetting": {
      "description": "This entity represents component settings.",
      "type": "object",
      "properties": {
        "ComponentID": {
          "description": "Unique integer representation of parent component.",
          "type": "number"
        },
        "Key": {
          "description": "Unique string representation of the setting.",
          "type": "string"
        },
        "Value": {
          "description": "This property contains setting value.",
          "type": "string"
        },
        "ValueType": {
          "description": "Type of the setting value.",
          "type": "number"
        },
        "Required": {
          "description": "This property defines if setting is required.",
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.APM.ApplicationSettings": {
      "description": "This entity represents application settings.",
      "type": "object",
      "properties": {
        "ApplicationID": {
          "description": "Unique integer representation of parent application.",
          "type": "number"
        },
        "Key": {
          "description": "Unique string representation of the setting.",
          "type": "string"
        },
        "Value": {
          "description": "This property contains setting value.",
          "type": "string"
        },
        "ValueType": {
          "description": "Type of the setting value.",
          "type": "number"
        },
        "Required": {
          "description": "This property defines if setting is required.",
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Netflow.CBQoSSource": {
      "type": "object",
      "properties": {
        "CBQoSSourceID": {
          "type": "number"
        },
        "NodeID": {
          "type": "number"
        },
        "InterfaceID": {
          "type": "number"
        },
        "EngineID": {
          "type": "number"
        },
        "Enabled": {
          "type": "boolean"
        },
        "LastTime": {
          "format": "date-time",
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "NodeDetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Netflow.CBQoSSource": {
      "type": "object",
      "properties": {
        "CBQoSSourceID": {
          "type": "number"
        },
        "NodeID": {
          "type": "number"
        },
        "InterfaceID": {
          "type": "number"
        },
        "EngineID": {
          "type": "number"
        },
        "Enabled": {
          "type": "boolean"
        },
        "LastTime": {
          "format": "date-time",
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "NodeDetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Cirrus.IgnoredNodes": {
      "type": "object",
      "properties": {
        "CoreNodeID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.NCM.Baselines": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ExactMatching": {
          "type": "boolean"
        },
        "UseComparisonCriterias": {
          "type": "boolean"
        },
        "IgnoredLines": {
          "type": "string"
        },
        "Disabled": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.NCM.BaselineNodeMap": {
      "type": "object",
      "properties": {
        "BaselineId": {
          "type": "number"
        },
        "NodeId": {
          "format": "uuid",
          "type": "string"
        },
        "ConfigType": {
          "type": "string"
        },
        "CacheState": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.NCM.BaselineViolations": {
      "type": "object",
      "properties": {
        "BaselineId": {
          "type": "number"
        },
        "NodeId": {
          "format": "uuid",
          "type": "string"
        },
        "ConfigID": {
          "format": "uuid",
          "type": "string"
        },
        "ConfigType": {
          "type": "string"
        },
        "IsViolation": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.NCM.FirmwareOperations": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string"
        },
        "RunAt": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "EmailSettings": {
          "type": "string"
        },
        "DefinitionID": {
          "type": "number"
        },
        "UserName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.NCM.FirmwareOperationNodes": {
      "type": "object",
      "properties": {
        "OperationID": {
          "type": "number"
        },
        "CoreNodeID": {
          "type": "number"
        },
        "NodeOptionsXml": {
          "type": "string"
        },
        "IsComplete": {
          "type": "boolean"
        },
        "Log": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.NCM.FirmwareUpgradeImages": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "FileName": {
          "type": "string"
        },
        "RelativePath": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CoreNodeID": {
          "type": "number"
        },
        "DateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "MD5Hash": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.NCM.FirmwareUpgradeMachineTypes": {
      "type": "object",
      "properties": {
        "ImageID": {
          "type": "number"
        },
        "MachineType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.NCM.ConfigTypeVendors": {
      "type": "object",
      "properties": {
        "ConfigTypeId": {
          "type": "number"
        },
        "Vendor": {
          "type": "string"
        },
        "Operation": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cirrus.IgnoredNodes": {
      "description": "Nodes to be ignored during discovery.\n        Creating, reading and deleting valid for Orion users with manage node permissions and at least WebViewer NCM role. ",
      "type": "object",
      "properties": {
        "CoreNodeID": {
          "description": "Orion node ID.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "NCM.Baselines": {
      "description": "Multinode baselines.\n        Reading valid for Orion users with at least WebViewer NCM role.\n        Creating, updating and deleting valid for Orion administrators with at least WebViewer NCM role.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Unique identifier and primary key of the baseline.",
          "type": "number"
        },
        "Name": {
          "description": "Name of the baseline.",
          "type": "string"
        },
        "Content": {
          "description": "The content of the baseline.",
          "type": "string"
        },
        "Description": {
          "description": "More comments and description about the baseline.",
          "type": "string"
        },
        "ExactMatching": {
          "description": "Indicates if the exact matching is enabled.",
          "type": "boolean"
        },
        "UseComparisonCriterias": {
          "description": "Indicates if comparision criteria should be taken into consideration.",
          "type": "boolean"
        },
        "IgnoredLines": {
          "description": "List of ignored lines.",
          "type": "string"
        },
        "Disabled": {
          "description": "Indicates if the baseline is disabled.",
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "NCM.BaselineNodeMap": {
      "description": "Assignment of baselines to nodes.\n        Reading valid for Orion users with at least WebViewer NCM role.\n        Creating, updating and deleting valid for Orion administrators with at least WebViewer NCM role.",
      "type": "object",
      "properties": {
        "BaselineId": {
          "description": "The baseline ID. Part of the primary key.",
          "type": "number"
        },
        "NodeId": {
          "format": "uuid",
          "description": "The NCM node ID. Part of the primary key.",
          "type": "string"
        },
        "ConfigType": {
          "description": "Config type. Part of the primary key.",
          "type": "string"
        },
        "CacheState": {
          "description": "The state of internal cache. Values:\n        * 0 - Needs recalculation\n        * 1 - Calculating now\n        * 2 - Done and cached succesfully\n        * 3 - Error",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "NCM.BaselineViolations": {
      "description": "Baseline violations latest data.\n        Reading valid for Orion users with at least WebViewer NCM role. Read-only.",
      "type": "object",
      "properties": {
        "BaselineId": {
          "description": "The baseline ID. Part of the primary key.",
          "type": "number"
        },
        "NodeId": {
          "format": "uuid",
          "description": "The NCM node ID. Part of the primary key.",
          "type": "string"
        },
        "ConfigID": {
          "format": "uuid",
          "description": "The baseline ID. Part of the primary key.",
          "type": "string"
        },
        "ConfigType": {
          "description": "Config type.",
          "type": "string"
        },
        "IsViolation": {
          "description": "Indicates if the baseline is violated.",
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "NCM.FirmwareOperations": {
      "description": "Firmware operations data.\n        Reading valid for Orion users with at least WebViewer NCM role.\n        Creating, updating and deleting valid for Orion administrators with at least WebViewer NCM role.",
      "type": "object",
      "properties": {
        "ID": {
          "description": "Unique identifier and primary key of a firmware operation.",
          "type": "number"
        },
        "Name": {
          "description": "Name of firmware operation.",
          "type": "string"
        },
        "CreationDate": {
          "format": "date-time",
          "description": "Date and time marker indicating when firmware operation was created.",
          "type": "string"
        },
        "RunAt": {
          "format": "date-time",
          "description": "Date and time marker indicating when firmware operation was previously run.",
          "type": "string"
        },
        "Status": {
          "description": "Status of firmware operation\nPossible values:\n* Unknown (0)\n* Error (1)\n* CollectingData (2)\n* NeedsReview (3)\n* Queued (4)\n* Upgrading (5)\n* Complete (6)\n* Scheduled (7)",
          "type": "number"
        },
        "ErrorMessage": {
          "description": "Error message when firmware operation has failed.",
          "type": "string"
        },
        "Log": {
          "description": "Log messages.",
          "type": "string"
        },
        "EmailSettings": {
          "description": "Xml serialized object with email settings. Full type: SolarWinds.NCM.Contracts.InformationService.EmailSettings",
          "type": "string"
        },
        "DefinitionID": {
          "description": "ID of firmware definition related to the operation",
          "type": "number"
        },
        "UserName": {
          "description": "An Orion user who created a firmware operation",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "NCM.FirmwareOperationNodes": {
      "description": "Nodes associated with firmware operations.\n        Reading valid for Orion users with at least WebViewer NCM role.\n        Creating, updating and deleting valid for Orion administrators with at least WebViewer NCM role.",
      "type": "object",
      "properties": {
        "OperationID": {
          "description": "Id of firmware operation node is associated with.",
          "type": "number"
        },
        "CoreNodeID": {
          "description": "The Orion NodeID (int) of a node.",
          "type": "number"
        },
        "NodeOptionsXml": {
          "description": "Xml serialized object with options related to this particular node. Full type: SolarWinds.NCM.Contracts.InformationService.UpgradeNodeOptions",
          "type": "string"
        },
        "IsComplete": {
          "description": "True/false indicator if firmware operation has finished on this particular node.",
          "type": "boolean"
        },
        "Log": {
          "description": "Log messages.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "NCM.FirmwareUpgradeImages": {
      "description": "Firmware upgrade images data.\n        Reading valid for Orion users with at least WebViewer NCM role.\n        Creating, updating and deleting valid for Orion administrators with at least WebViewer NCM role.",
      "type": "object",
      "properties": {
        "ID": {
          "description": "Unique identifier of a firmware upgrade image and primary key.",
          "type": "number"
        },
        "FileName": {
          "description": "Filename of a firmware upgrade image.",
          "type": "string"
        },
        "RelativePath": {
          "description": "Relative path from used firmware storage path.",
          "type": "string"
        },
        "Description": {
          "description": "Description of a firmware upgrade image.",
          "type": "string"
        },
        "CoreNodeID": {
          "description": "The Orion NodeID (int) of a node to which upgrade this image was used.",
          "type": "number"
        },
        "DateTimeUtc": {
          "format": "date-time",
          "description": "Date and time marker indicating when firmware upgrade was backuped.",
          "type": "string"
        },
        "MD5Hash": {
          "description": "MD5 hash of a firmware upgrade image.",
          "type": "string"
        },
        "Size": {
          "description": "Size of a firmware upgrade image.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "NCM.FirmwareUpgradeMachineTypes": {
      "description": "Data indicating which images may be applicable for which machine types.\n        Reading valid for Orion users with at least WebViewer NCM role.\n        Creating, updating and deleting valid for Orion administrators with at least WebViewer NCM role.",
      "type": "object",
      "properties": {
        "ImageID": {
          "description": "ID of firmware upgrade image",
          "type": "number"
        },
        "MachineType": {
          "description": "Machine type of nodes to which image may be applicable.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "NCM.ConfigTypeVendors": {
      "description": "Data about available config type vendors.\n        Valid for Orion manage node users with at least WebUploader NCM role.",
      "type": "object",
      "properties": {
        "ConfigTypeId": {
          "description": "Config type ID.",
          "type": "number"
        },
        "Vendor": {
          "description": "Vendor name.",
          "type": "string"
        },
        "Operation": {
          "description": "Vendor operation. Possible values:\n        * 0 - EqualsTo\n        * 1 - DifferentFrom\n        ",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cli.DeviceTemplates": {
      "description": "Device templates. For valid Orion Platform users with manage node permissions.",
      "type": "object",
      "properties": {
        "ID": {
          "description": "The unique identifier and primary key of a device template.",
          "type": "number"
        },
        "TemplateName": {
          "description": "Name of the device template.",
          "type": "string"
        },
        "SystemOID": {
          "description": "The system OID which will be used for auto detection.",
          "type": "string"
        },
        "SystemDescriptionRegex": {
          "description": "Regex which will be used for auto detection.",
          "type": "string"
        },
        "TemplateXml": {
          "description": "The XML device template.",
          "type": "string"
        },
        "Comments": {
          "description": "Just some comments.",
          "type": "string"
        },
        "UseForAutoDetect": {
          "description": "Indicates if auto detect is enabled.",
          "type": "boolean"
        },
        "IsDefault": {
          "description": "Indicates if the device template is built-in and managed by SolarWinds. If it is, access is read-only.",
          "type": "boolean"
        },
        "Author": {
          "description": "Who created it.",
          "type": "string"
        },
        "AutoDetectType": {
          "description": "The type of the auto detection used. 0 uses the system OID; 1 uses the system description.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cli.DeviceTemplatesNodes": {
      "description": "Manually assign device templates to nodes.\nEach node can have only one device template assigned.\nWhen a device template is assigned manually, auto detection is not triggered.\nFor valid Orion Platform users with manage node permissions.",
      "type": "object",
      "properties": {
        "TemplateId": {
          "description": "Device template ID.",
          "type": "number"
        },
        "NodeId": {
          "description": "Orion node ID. It's also the primary key and unique identifier for the assignment.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cli.CliSessionSettings": {
      "description": "Settings used by the CLI component.\nFor valid Orion Platform users with manage node permissions.\nSome settings:\n* ConnectionTimeout - CLI connection timeout\n* PromptTimeout - CLI prompt timeout\n* SessionTracePath - Directory where session traces are stored\n* SessionTraceEnabled - Indicates if session traces are enabled\n* LoginAttemptsCount - Number of login attempts",
      "type": "object",
      "properties": {
        "SettingName": {
          "description": "The setting name. It's also the primary key and unique identifier.",
          "type": "string"
        },
        "SettingValue": {
          "description": "Device template ID.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.Accounts": {
      "description": "\n            This entity presents the Cloud account information.\n        ",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation of cloud account.",
          "type": "number"
        },
        "Name": {
          "description": "The string value that contains the name of the cloud account.",
          "type": "string"
        },
        "CredentialId": {
          "description": "The unique integer representation of shared credential.",
          "type": "number"
        },
        "AutoMonitoring": {
          "description": "The boolean value that specifies if cloud account is monitored.",
          "type": "boolean"
        },
        "DisableMonitorApiRequests": {
          "description": "The boolean value that specifies if polling for this cloud account is disabled.",
          "type": "boolean"
        },
        "PollingIntervalInSeconds": {
          "description": "Polling interval in seconds.",
          "type": "number"
        },
        "Description": {
          "description": "The string value containing description of the credentials related with this cloud account.",
          "type": "string"
        },
        "MonitorApiRequestsMadePerMonth": {
          "description": "Approximate amount of free requests made by our polling using given account in current month.",
          "type": "number"
        },
        "DetailsUrl": {
          "description": "Relative address of Edit Properties page for given account.",
          "type": "string"
        },
        "ProviderId": {
          "type": "number"
        },
        "MonitorResourceType": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.Regions": {
      "description": "\n            This entity presents the region.\n        ",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation of region.",
          "type": "number"
        },
        "SystemName": {
          "description": "The string value that contains the name of AWS region.",
          "type": "string"
        },
        "DisplayName": {
          "description": "The string value that contains AWS region display name.",
          "type": "string"
        },
        "Enabled": {
          "description": "The boolean value that specifies if AWS region is enabled.",
          "type": "boolean"
        },
        "ProviderID": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.Aws.Regions": {
      "description": "\n            This entity presents the AWS region.\n        ",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation of AWS region.",
          "type": "number"
        },
        "SystemName": {
          "description": "The string value that contains the name of AWS region.",
          "type": "string"
        },
        "DisplayName": {
          "description": "The string value that contains AWS region display name.",
          "type": "string"
        },
        "Enabled": {
          "description": "The boolean value that specifies if AWS region is enabled.",
          "type": "boolean"
        },
        "ProviderID": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.Azure.Regions": {
      "description": "\n            This entity presents the Azure region.\n        ",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation of Azure region.",
          "type": "number"
        },
        "SystemName": {
          "description": "The string value that contains the name of Azure region.",
          "type": "string"
        },
        "DisplayName": {
          "description": "The string value that contains Azure region display name.",
          "type": "string"
        },
        "Enabled": {
          "description": "The boolean value that specifies if Azure region is enabled.",
          "type": "boolean"
        },
        "ProviderID": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.Aws.Accounts": {
      "description": "\n            This entity presents the Aws Cloud account information.\n        ",
      "type": "object",
      "properties": {
        "DisableCloudWatch": {
          "description": "The boolean value that specifies if CloudWatch is polled for this cloud account.",
          "type": "boolean"
        },
        "CloudWatchRequestsMadeThisMonth": {
          "description": "Approximate amount of CloudWatch requests made by our polling using given account in current month.",
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "CredentialId": {
          "type": "number"
        },
        "AutoMonitoring": {
          "type": "boolean"
        },
        "DisableMonitorApiRequests": {
          "type": "boolean"
        },
        "PollingIntervalInSeconds": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "MonitorApiRequestsMadePerMonth": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "ProviderId": {
          "type": "number"
        },
        "MonitorResourceType": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.Azure.Accounts": {
      "description": "\n            This entity presents the Azure Cloud account information.\n        ",
      "type": "object",
      "properties": {
        "SubscriptionName": {
          "type": "string"
        },
        "Id": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "CredentialId": {
          "type": "number"
        },
        "AutoMonitoring": {
          "type": "boolean"
        },
        "DisableMonitorApiRequests": {
          "type": "boolean"
        },
        "PollingIntervalInSeconds": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "MonitorApiRequestsMadePerMonth": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "ProviderId": {
          "type": "number"
        },
        "MonitorResourceType": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.SelectedCloudRegions": {
      "description": "This entity presents selected cloud regions.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation of selected cloud region.",
          "type": "number"
        },
        "CloudJobSettingId": {
          "description": "The unique integer representation of cloud job setting.",
          "type": "number"
        },
        "CloudRegionId": {
          "description": "The unique integer representation of cloud region.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.CloudJobSettings": {
      "description": "This entity presents cloud job setting.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation of selected cloud region.",
          "type": "number"
        },
        "CloudAccountId": {
          "description": "The unique integer representation of cloud job setting.",
          "type": "number"
        },
        "NetworkScanInterval": {
          "description": "The integer value that specifies interval of network scan.",
          "type": "number"
        },
        "DnsScanInterval": {
          "description": "The integer value that specifies interval of DNS scan.",
          "type": "number"
        },
        "NetworkScanEnabled": {
          "description": "The boolean value that specifies if network scan is enabled.",
          "type": "boolean"
        },
        "DnsScanEnabled": {
          "description": "The boolean value that specifies if DNS scan is enabled.",
          "type": "boolean"
        },
        "VirtualNetworkGatewaysPollingEnabled": {
          "description": "The boolean value that specifies if virtual network gateways polling is enabled.",
          "type": "boolean"
        },
        "LoadBalancersPollingEnabled": {
          "description": "The boolean value that specifies if load balancer polling is enabled.",
          "type": "boolean"
        },
        "AzureSqlDatabasesPollingEnabled": {
          "description": "The boolean value that specifies if Azure SQL databases polling is enabled.",
          "type": "boolean"
        },
        "AwsSqlDatabasesPollingEnabled": {
          "description": "The boolean value that specifies if AWS SQL databases polling is enabled.",
          "type": "boolean"
        },
        "SelectedAllRegions": {
          "description": "The boolean value that specifies if all regions are selected.",
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.TagFilter": {
      "description": "Tags are assigned to cloud job settings to filter polled cloud resources.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation of selected cloud region.",
          "type": "number"
        },
        "CloudJobSettingId": {
          "description": "The integer representation of cloud job setting.",
          "type": "number"
        },
        "Key": {
          "description": "The string representing the tag's key.",
          "type": "string"
        },
        "Value": {
          "description": "The string representing the tag's value.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.ResourseTags": {
      "description": "This entity presents the tags associated with cloud resources",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation of a tag.",
          "type": "number"
        },
        "ResourceType": {
          "description": "The string representation of resource type.",
          "type": "string"
        },
        "ResourceId": {
          "description": "The string representation of resource id.",
          "type": "string"
        },
        "Key": {
          "description": "The string representing the tag's key.",
          "type": "string"
        },
        "Value": {
          "description": "The string representing the tag's value.",
          "type": "string"
        },
        "ProviderId": {
          "description": "The integer representation of provider id.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.Azure.ResourseTags": {
      "description": "\n            This entity presents the tags associated with Azure resources.\n        ",
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "ResourceType": {
          "type": "string"
        },
        "ResourceId": {
          "type": "string"
        },
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "ProviderId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cloud.Aws.ResourseTags": {
      "description": "\n            This entity presents the tags associated with AWS resources.\n        ",
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "ResourceType": {
          "type": "string"
        },
        "ResourceId": {
          "type": "string"
        },
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "ProviderId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cman.Container": {
      "description": "\n\t\tThis entity presents Container properties\n\t",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation id of the Container",
          "type": "number"
        },
        "DetailsUrl": {
          "description": "The string representation details url of the Container",
          "type": "string"
        },
        "DisplayName": {
          "description": "The string representation display name of the Container",
          "type": "string"
        },
        "Name": {
          "description": "The string representation name of the Container",
          "type": "string"
        },
        "ContainerId": {
          "description": "The string representation container id of the Container",
          "type": "string"
        },
        "NodeId": {
          "description": "The integer representation node id of node",
          "type": "number"
        },
        "ContainerImageId": {
          "description": "The integer representation image id of image",
          "type": "number"
        },
        "ContainerAgentId": {
          "description": "The integer representation agent id of agent",
          "type": "number"
        },
        "IpAddresses": {
          "description": "The string representation ip addresses of the Container",
          "type": "string"
        },
        "State": {
          "description": "The string representation state of the Container",
          "type": "string"
        },
        "Status": {
          "description": "The integer representation status of the Container",
          "type": "number"
        },
        "StatusDescription": {
          "description": "The string representation status description of the Container",
          "type": "string"
        },
        "TimeCreated": {
          "format": "date-time",
          "description": "The date and time representation time created of the Container",
          "type": "string"
        },
        "Command": {
          "description": "The string representation command of the Container",
          "type": "string"
        },
        "RestartCount": {
          "description": "The integer representation restart count of the Container",
          "type": "number"
        },
        "TimeDeleted": {
          "format": "date-time",
          "description": "The date and time representation time deleted of the Container",
          "type": "string"
        },
        "StartedAt": {
          "format": "date-time",
          "description": "The date and time representation started at of the Container",
          "type": "string"
        },
        "StatusLED": {
          "description": "The string representation status LED of the Container",
          "type": "string"
        },
        "Image": {
          "description": "The string representation image of the Container",
          "type": "string"
        },
        "Cpu": {
          "description": "The double value representing cpu usage of the Container",
          "type": "number"
        },
        "Memory": {
          "description": "The double value representing memory usage of the Container",
          "type": "number"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cman.ContainerAgent": {
      "description": "\n\t\tThis entity presents Container Agent properties\n\t",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation id of the Container Agent",
          "type": "number"
        },
        "Orchestrator": {
          "description": "The string representation orchestrator of the Container Agent",
          "type": "string"
        },
        "UniqueIdentifier": {
          "format": "uuid",
          "description": "The GUID representation unique identifier of the Container Agent",
          "type": "string"
        },
        "Name": {
          "description": "The string representation name of the Container Agent",
          "type": "string"
        },
        "NodeId": {
          "description": "The integer representation node id of the Container Agent",
          "type": "number"
        },
        "UpdateAt": {
          "format": "date-time",
          "description": "The date and time representation update at of the Container Agent",
          "type": "string"
        },
        "Status": {
          "description": "The integer representation status of the Container Agent",
          "type": "number"
        },
        "PollingInterval": {
          "description": "The string representation ip addresses of the Container Agent",
          "type": "number"
        },
        "CredentialsId": {
          "description": "The unique integer representation of the credentials",
          "type": "number"
        },
        "CredentialsType": {
          "description": "The string value representing the credentials type",
          "type": "string"
        },
        "EngineID": {
          "description": "The unique integer representation of the polling engine",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Cman.ContainerImage": {
      "description": "\n\t\tThis entity presents Container Image properties\n\t",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The unique integer representation id of the Container Image",
          "type": "number"
        },
        "ImageId": {
          "description": "The string representation image id of the Container Image",
          "type": "string"
        },
        "Name": {
          "description": "The string representation name of the Container Image",
          "type": "string"
        },
        "Version": {
          "description": "The string representation version of the Container Image",
          "type": "string"
        },
        "Size": {
          "description": "The string representation size of the Container Image",
          "type": "string"
        },
        "VirtualSize": {
          "description": "The string representation virtual suze of the Container Image",
          "type": "string"
        },
        "NodeId": {
          "description": "The integer representation node id of the Container Image",
          "type": "number"
        },
        "TimeDeleted": {
          "format": "date-time",
          "description": "The date and time representation time deleted of the Container Image",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.System.Policy": {
      "type": "object",
      "properties": {
        "PolicyName": {
          "type": "string"
        },
        "Priority": {
          "type": "number"
        },
        "ResultProperties_Value": {
          "type": "number"
        },
        "ResultProperties": {
          "type": "string"
        },
        "MatchingElementType": {
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.CiscoAci.Apic": {
      "type": "object",
      "properties": {
        "OrionNodeId": {
          "type": "number"
        },
        "PollInterval": {
          "type": "number"
        },
        "UpStatusThreshold": {
          "type": "number"
        },
        "CriticalStatusThreshold": {
          "type": "number"
        },
        "MonitoredClusterControllersWarningMessageIpAddresses": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedCredential": {
          "type": "number"
        },
        "RelatedNode": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.CiscoAci.ApplicationProfile": {
      "type": "object",
      "properties": {
        "ApicId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "DistinguishedName": {
          "type": "string"
        },
        "HealthScore": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedApic": {
          "type": "number"
        },
        "RelatedTenant": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.CiscoAci.CiscoAciCredential": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "OrionId": {
          "type": "number"
        },
        "Owner": {
          "type": "string"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.CiscoAci.EndpointGroup": {
      "type": "object",
      "properties": {
        "ApicId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "DistinguishedName": {
          "type": "string"
        },
        "HealthScore": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedApic": {
          "type": "number"
        },
        "RelatedApplicationProfile": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.CiscoAci.Fabric": {
      "type": "object",
      "properties": {
        "ApicId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "HealthScore": {
          "type": "number"
        },
        "ActualStatus": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedApic": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.CiscoAci.PhysicalEntity": {
      "type": "object",
      "properties": {
        "ApicId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "DistinguishedName": {
          "type": "string"
        },
        "PhysicalEntityRole_Value": {
          "type": "number"
        },
        "PhysicalEntityRole": {
          "type": "string"
        },
        "HealthScore": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedApic": {
          "type": "number"
        },
        "RelatedFabric": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.CiscoAci.Tenant": {
      "type": "object",
      "properties": {
        "ApicId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "DistinguishedName": {
          "type": "string"
        },
        "HealthScore": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedApic": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.NetMan.CloudMonitoring.AzureMonitoringCredential": {
      "type": "object",
      "properties": {
        "TenantId": {
          "type": "string"
        },
        "SubscriptionId": {
          "type": "string"
        },
        "ClientId": {
          "type": "string"
        },
        "ApplicationSecretKey": {
          "type": "string"
        },
        "RelatedCloudAccount": {
          "type": "number"
        },
        "OrionId": {
          "type": "number"
        },
        "Owner": {
          "type": "string"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.NetMan.CloudMonitoring.CloudAccount": {
      "type": "object",
      "properties": {
        "OrionCloudAccountId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatisticsPollingInterval": {
          "type": "number"
        },
        "UnprocessedRequestCost": {
          "type": "number"
        },
        "VirtualNetworkGatewaysPollingEnabled": {
          "type": "boolean"
        },
        "MonitorApiRequestsEnabled": {
          "type": "boolean"
        },
        "CloudAccountType": {
          "type": "number"
        },
        "PollingFlags": {
          "type": "number"
        },
        "PollingStatus": {
          "type": "boolean"
        },
        "LastSuccessfulPoll": {
          "format": "date-time",
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedCloudMonitoringCentralizedSettings": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.NetMan.CloudMonitoring.CloudMonitoringCentralizedSettings": {
      "type": "object",
      "properties": {
        "DiscoveryPollingInterval": {
          "type": "number"
        },
        "AzureHostName": {
          "type": "string"
        },
        "LongestStatisticalPollingTimespan": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.NetMan.CloudMonitoring.VirtualNetwork": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Region": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "InternalId": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedCloudAccount": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.NetMan.CloudMonitoring.VirtualNetworkConnection": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "ResourceGroup": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "SourceIp": {
          "type": "string"
        },
        "TargetIp": {
          "type": "string"
        },
        "EncryptionAlgorithm": {
          "type": "string"
        },
        "IntegrityAlgorithm": {
          "type": "string"
        },
        "ConnectionType": {
          "type": "number"
        },
        "InternalId": {
          "type": "string"
        },
        "TunnelTrafficBytesIn": {
          "type": "number"
        },
        "TunnelTrafficBytesOut": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "ConnectionStatus": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "Availability": {
          "type": "number"
        },
        "PollingFlags": {
          "type": "number"
        },
        "PollingStatus": {
          "type": "boolean"
        },
        "LastSuccessfulPoll": {
          "format": "date-time",
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedSourceVirtualNetworkGateway": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.NetMan.CloudMonitoring.VirtualNetworkGateway": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "PublicIp": {
          "type": "string"
        },
        "Subnet": {
          "type": "string"
        },
        "GatewayType": {
          "type": "number"
        },
        "InternalId": {
          "type": "string"
        },
        "TunnelTrafficBytesIn": {
          "type": "number"
        },
        "TunnelTrafficBytesOut": {
          "type": "number"
        },
        "PollingFlags": {
          "type": "number"
        },
        "PollingStatus": {
          "type": "boolean"
        },
        "LastSuccessfulPoll": {
          "format": "date-time",
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "Availability": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedCloudAccount": {
          "type": "number"
        },
        "RelatedVirtualNetwork": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.NetMan.Firewalls.Firewall": {
      "type": "object",
      "properties": {
        "OrionNodeId": {
          "type": "number"
        },
        "PollInterval": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "Availability": {
          "type": "number"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedFirewallCentralizedSettings": {
          "type": "number"
        },
        "RelatedNode": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.NetMan.Firewalls.FirewallCentralizedSettings": {
      "type": "object",
      "properties": {
        "PaloAltoGlobalProtectTrafficEnabled": {
          "type": "boolean"
        },
        "PaloAltoGlobalProtectTrafficRetryCount": {
          "type": "number"
        },
        "PaloAltoGlobalProtectTrafficDelay": {
          "type": "number"
        },
        "PaloAltoSiteToSiteTunnelIssuesEnabled": {
          "type": "boolean"
        },
        "PaloAltoSiteToSiteTunnelIssuesRetryCount": {
          "type": "number"
        },
        "PaloAltoSiteToSiteTunnelIssuesDelay": {
          "type": "number"
        },
        "PaloAltoSiteToSiteTunnelIssuesMessageFilter": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.NetMan.Firewalls.RemoteAccess": {
      "type": "object",
      "properties": {
        "Domain": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "ConnectTime": {
          "format": "date-time",
          "type": "string"
        },
        "DisconnectTime": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "Lifetime": {
          "$ref": "#/definitions/System.Decimal"
        },
        "ComputerName": {
          "type": "string"
        },
        "VpnType": {
          "type": "string"
        },
        "TunnelType": {
          "type": "string"
        },
        "VirtualIp": {
          "type": "string"
        },
        "PublicIp": {
          "type": "string"
        },
        "BpsIn": {
          "type": "number"
        },
        "BpsOut": {
          "type": "number"
        },
        "MbpsIn": {
          "type": "number"
        },
        "MbpsOut": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedFirewall": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "System.Decimal": {
      "type": "object"
    },
    "Cortex.Orion.NetMan.Firewalls.SiteToSiteTunnel": {
      "type": "object",
      "properties": {
        "LocalIp": {
          "type": "string"
        },
        "RemoteIp": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "TunnelId": {
          "$ref": "#/definitions/System.Decimal"
        },
        "BpsIn": {
          "type": "number"
        },
        "MbpsIn": {
          "type": "number"
        },
        "BpsOut": {
          "type": "number"
        },
        "MbpsOut": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "Availability": {
          "type": "number"
        },
        "EncryptionCipher": {
          "type": "string"
        },
        "HashAlgorithm": {
          "type": "string"
        },
        "InterfaceName": {
          "type": "string"
        },
        "SecurityZone": {
          "type": "string"
        },
        "VirtualFirewall": {
          "type": "string"
        },
        "RemoteNodeId": {
          "type": "number"
        },
        "LastStatusChanged": {
          "format": "date-time",
          "type": "string"
        },
        "IssueMessage": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "RelatedFirewall": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Interface": {
      "type": "object",
      "properties": {
        "InterfaceId": {
          "type": "number"
        },
        "InterfaceIndex": {
          "type": "number"
        },
        "Unpluggable": {
          "type": "boolean"
        },
        "InterfaceSpeed": {
          "$ref": "#/definitions/System.Decimal"
        },
        "Caption": {
          "type": "string"
        },
        "Use64BitCounters": {
          "type": "boolean"
        },
        "Status_Value": {
          "type": "number"
        },
        "Status": {
          "type": "string"
        },
        "ReceiveBps": {
          "type": "number"
        },
        "TransmitBps": {
          "type": "number"
        },
        "ReceiveUtilizationPercent": {
          "type": "number"
        },
        "TransmitUtilizationPercent": {
          "type": "number"
        },
        "ReceiveErrors": {
          "type": "number"
        },
        "TransmitErrors": {
          "type": "number"
        },
        "ReceiveDiscards": {
          "type": "number"
        },
        "TransmitDiscards": {
          "type": "number"
        },
        "CustomBandwidth": {
          "type": "boolean"
        },
        "InBandwidth": {
          "type": "number"
        },
        "OutBandwidth": {
          "type": "number"
        },
        "RelatedNode": {
          "type": "number"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Cpu": {
      "type": "object",
      "properties": {
        "Index": {
          "type": "number"
        },
        "PercentUtilization": {
          "type": "number"
        },
        "RelatedNode": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Node": {
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        },
        "IpAddress": {
          "type": "string"
        },
        "Caption": {
          "type": "string"
        },
        "ObjectSubType": {
          "type": "string"
        },
        "Vendor": {
          "type": "string"
        },
        "SnmpPort": {
          "type": "number"
        },
        "SnmpVersion": {
          "type": "number"
        },
        "Fqdn": {
          "type": "string"
        },
        "OsVersion": {
          "type": "string"
        },
        "Uptime": {
          "type": "number"
        },
        "DiscoveryProfileId": {
          "type": "number"
        },
        "StatCollection": {
          "type": "number"
        },
        "PollInterval": {
          "type": "number"
        },
        "SysObjectId": {
          "type": "string"
        },
        "Status_Value": {
          "type": "number"
        },
        "Status": {
          "type": "string"
        },
        "ResponseTime": {
          "type": "number"
        },
        "RelatedHost": {
          "type": "number"
        },
        "RelatedVCenter": {
          "type": "number"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.ScsiInformation": {
      "type": "object",
      "properties": {
        "ScsiTargetId": {
          "type": "number"
        },
        "ScsiLunId": {
          "type": "number"
        },
        "ScsiPortId": {
          "type": "number"
        },
        "ScsiControllerId": {
          "type": "string"
        },
        "ScsiPortOffset": {
          "type": "number"
        },
        "RelatedVolume": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Volume": {
      "type": "object",
      "properties": {
        "VolumeId": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "Caption": {
          "type": "string"
        },
        "RawCaption": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "StatCollection": {
          "type": "number"
        },
        "VolumeIndex": {
          "type": "number"
        },
        "VolumeType_Value": {
          "type": "number"
        },
        "VolumeType": {
          "type": "string"
        },
        "PollingType_Value": {
          "type": "number"
        },
        "PollingType": {
          "type": "string"
        },
        "VolumeDescription": {
          "type": "string"
        },
        "DeviceId": {
          "type": "string"
        },
        "DiskSerialNumber": {
          "type": "string"
        },
        "InterfaceType": {
          "type": "string"
        },
        "VolumeSize": {
          "type": "number"
        },
        "VolumeSpaceUsed": {
          "type": "number"
        },
        "DiskQueueLength": {
          "type": "number"
        },
        "DiskTransfer": {
          "type": "number"
        },
        "DiskReads": {
          "type": "number"
        },
        "DiskWrites": {
          "type": "number"
        },
        "TotalDiskIops": {
          "type": "number"
        },
        "RelatedNode": {
          "type": "number"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Virtualization.Alarm": {
      "type": "object",
      "properties": {
        "ManagedObjectId": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "SystemName": {
          "type": "string"
        },
        "IsDeleted": {
          "type": "boolean"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "RelatedHost": {
          "type": "number"
        },
        "RelatedVCenter": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Virtualization.PhysicalDisk": {
      "type": "object",
      "properties": {
        "PhysicalDiskId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "IsSsd": {
          "type": "boolean"
        },
        "ScsiDiskType_Value": {
          "type": "number"
        },
        "ScsiDiskType": {
          "type": "string"
        },
        "Capacity": {
          "type": "number"
        },
        "Health": {
          "type": "string"
        },
        "RelatedVSanDiskGroup": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Virtualization.StoragePool": {
      "type": "object",
      "properties": {
        "StoragePoolUuid": {
          "type": "string"
        },
        "StoragePoolIdentifier": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Capacity": {
          "type": "number"
        },
        "UsageBytes": {
          "type": "number"
        },
        "RelatedCluster": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Virtualization.TriggeredAlarmState": {
      "type": "object",
      "properties": {
        "Acknowledged": {
          "type": "boolean"
        },
        "AcknowledgedByUser": {
          "type": "string"
        },
        "AcknowledgedTime": {
          "format": "date-time",
          "type": "string"
        },
        "Status_Value": {
          "type": "number"
        },
        "Status": {
          "type": "string"
        },
        "Timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "IsResolved": {
          "type": "boolean"
        },
        "ResolvedTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "RelatedAlarm": {
          "type": "number"
        },
        "RelatedCluster": {
          "type": "number"
        },
        "RelatedDataCenter": {
          "type": "number"
        },
        "RelatedDatastore": {
          "type": "number"
        },
        "RelatedHost": {
          "type": "number"
        },
        "RelatedVirtualMachine": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Virtualization.VSan": {
      "type": "object",
      "properties": {
        "VsanIdentifier": {
          "type": "string"
        },
        "ClusterId": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "TotalCapacity": {
          "type": "number"
        },
        "UsedSpace": {
          "type": "number"
        },
        "UsedSpacePercentage": {
          "type": "number"
        },
        "UsedByVms": {
          "type": "number"
        },
        "IsDedupEnabled": {
          "type": "boolean"
        },
        "DedupRatio": {
          "type": "number"
        },
        "DedupUsedSpaceBefore": {
          "type": "number"
        },
        "DedupUsedSpaceAfter": {
          "type": "number"
        },
        "IOPSTotal": {
          "type": "number"
        },
        "IOPSRead": {
          "type": "number"
        },
        "IOPSWrite": {
          "type": "number"
        },
        "ThroughputTotal": {
          "type": "number"
        },
        "ThroughputRead": {
          "type": "number"
        },
        "ThroughputWrite": {
          "type": "number"
        },
        "LatencyTotal": {
          "type": "number"
        },
        "LatencyRead": {
          "type": "number"
        },
        "LatencyWrite": {
          "type": "number"
        },
        "Congestions": {
          "type": "number"
        },
        "OutstandingIO": {
          "type": "number"
        },
        "RelatedCluster": {
          "type": "number"
        },
        "RelatedDatastore": {
          "type": "number"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Virtualization.VSanDiskGroup": {
      "type": "object",
      "properties": {
        "VsanDiskGroupId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "RelatedHost": {
          "type": "number"
        },
        "RelatedVSan": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Virtualization.VSanHealthGroup": {
      "type": "object",
      "properties": {
        "HealthGroupName": {
          "type": "string"
        },
        "HealthGroupId": {
          "type": "string"
        },
        "HealthStatus_Value": {
          "type": "number"
        },
        "HealthStatus": {
          "type": "string"
        },
        "RelatedVSan": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Virtualization.VSanObjectSpaceSummary": {
      "type": "object",
      "properties": {
        "ObjectType_Value": {
          "type": "number"
        },
        "ObjectType": {
          "type": "string"
        },
        "UsedCapacity": {
          "type": "number"
        },
        "RelatedVSan": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.Virtualization.VSanResyncInfo": {
      "type": "object",
      "properties": {
        "ResyncingElementsCount": {
          "type": "number"
        },
        "RemainingBytes": {
          "type": "number"
        },
        "Eta": {
          "format": "date-time",
          "type": "string"
        },
        "RelatedHost": {
          "type": "number"
        },
        "RelatedVSan": {
          "type": "number"
        },
        "Id": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Dashboards.Instances": {
      "description": "An Orion dashboard instance.",
      "type": "object",
      "properties": {
        "DashboardID": {
          "description": "Unique ID for the Dashboard.",
          "type": "number"
        },
        "ParentID": {
          "description": "ID of the dashboard from which given dashboard was cloned.",
          "type": "number"
        },
        "Feature": {
          "description": "The feature this Dashboard belongs to.",
          "type": "string"
        },
        "IsActive": {
          "description": "It's build-in dashboard belonging to an active feature.",
          "type": "boolean"
        },
        "GroupId": {
          "description": "Unique Id used to group multiple dashboards together.",
          "type": "string"
        },
        "GroupRank": {
          "description": "Used to order the tabs within a group of dashboards.",
          "type": "number"
        },
        "GroupMemberName": {
          "description": "The name used for this dashboard when displayed on a dashboard group tab.",
          "type": "string"
        },
        "Configuration": {
          "description": "Configuration for dashboard commands and other functions.",
          "type": "string"
        },
        "Owner": {
          "description": "The owner of the Dashboard.",
          "type": "string"
        },
        "UniqueKey": {
          "description": "Unique key for the Dashboard used for navigation and CUD operations.",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Information about last update of dashboard.",
          "type": "string"
        },
        "Private": {
          "description": "The flag tells if dashboard is public or private (available only to the owner).",
          "type": "boolean"
        },
        "IsSystem": {
          "description": "It's built-in dashboard created by SolarWinds.",
          "type": "boolean"
        },
        "DisplayName": {
          "description": "The title of the Dashboard.",
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Dashboards.Widgets": {
      "description": "A Widget which can be displayed on a Dashboard.",
      "type": "object",
      "properties": {
        "WidgetID": {
          "description": "Unique ID for the Widget.",
          "type": "number"
        },
        "Subtitle": {
          "description": "The Subtitle of the Widget.",
          "type": "string"
        },
        "Type": {
          "description": "The Type of the Widget.",
          "type": "string"
        },
        "Configuration": {
          "description": "Configuration for widget (setup for datasources etc.).",
          "type": "string"
        },
        "Owner": {
          "description": "The owner of the Dashboard.",
          "type": "string"
        },
        "UniqueKey": {
          "description": "Unique key for the Widget used for CUD operations.",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Information about last update of dashboard.",
          "type": "string"
        },
        "Private": {
          "description": "The flag tells if dashboard is public or private (available only to the owner).",
          "type": "boolean"
        },
        "IsSystem": {
          "description": "It's built-in widget created by SolarWinds.",
          "type": "boolean"
        },
        "DisplayName": {
          "description": "The Title of the Widget.",
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Dashboards.DashboardGroup": {
      "description": "Provides details about dashboard group",
      "type": "object",
      "properties": {
        "GroupID": {
          "description": "Unique ID for the Group.",
          "type": "string"
        },
        "GroupName": {
          "description": "Name used for title in dashboards sharing the same GroupID.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Dashboards.DashboardRoute": {
      "type": "object",
      "properties": {
        "UniqueKeyPath": {
          "type": "string"
        },
        "DashboardID": {
          "type": "number"
        },
        "ParentUniqueKey": {
          "type": "string"
        },
        "RouteID": {
          "type": "string"
        },
        "UniqueKey": {
          "type": "string"
        },
        "RouteIdPath": {
          "type": "string"
        },
        "Depth": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPA.DatabaseInstanceData": {
      "description": "Relationship between DPA Database Instance and Orion Node",
      "type": "object",
      "properties": {
        "GlobalDatabaseInstanceID": {
          "description": "Unique ID of database instance in Orion",
          "type": "number"
        },
        "NodeID": {
          "description": "ID of Node (Orion.Nodes)",
          "type": "number"
        },
        "UserDefined": {
          "description": "Flag if the relationship is defined by user",
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPA.DatabaseInstanceApplicationRelationship": {
      "description": "All relationships between Orion Application and Database Instance",
      "type": "object",
      "properties": {
        "GlobalDatabaseInstanceID": {
          "description": "Unique ID of database instance in Orion",
          "type": "number"
        },
        "ApplicationID": {
          "description": "ID of SAM Application (Orion.APM.Application)",
          "type": "number"
        },
        "RelationshipType": {
          "description": "Numeric value for type of relationship",
          "type": "number"
        },
        "RelationshipTypeName": {
          "description": "Text representation of relationship type",
          "type": "string"
        },
        "NoRelationship": {
          "description": "Flag if the relationship was removed",
          "type": "boolean"
        },
        "UserDefined": {
          "description": "Flag if the relationship is defined by user",
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPA.DatabaseInstanceApplication": {
      "description": "All relationships between Orion Application and Database Instance, where both are monitoring the same db instance",
      "type": "object",
      "properties": {
        "GlobalDatabaseInstanceID": {
          "type": "number"
        },
        "ApplicationID": {
          "type": "number"
        },
        "RelationshipType": {
          "type": "number"
        },
        "RelationshipTypeName": {
          "type": "string"
        },
        "NoRelationship": {
          "type": "boolean"
        },
        "UserDefined": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPA.DatabaseInstanceClientApplication": {
      "description": "All relationships between Orion Application and Database Instance, where application is client and database instance is server",
      "type": "object",
      "properties": {
        "GlobalDatabaseInstanceID": {
          "type": "number"
        },
        "ApplicationID": {
          "type": "number"
        },
        "RelationshipType": {
          "type": "number"
        },
        "RelationshipTypeName": {
          "type": "string"
        },
        "NoRelationship": {
          "type": "boolean"
        },
        "UserDefined": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPA.DatabaseInstanceApplicationNoRelationship": {
      "description": "All removed relationships between Orion Application and Database Instance",
      "type": "object",
      "properties": {
        "GlobalDatabaseInstanceID": {
          "type": "number"
        },
        "ApplicationID": {
          "type": "number"
        },
        "RelationshipType": {
          "type": "number"
        },
        "RelationshipTypeName": {
          "type": "string"
        },
        "NoRelationship": {
          "type": "boolean"
        },
        "UserDefined": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPA.DatabaseInstanceLun": {
      "description": "All relationships between Orion LUN and Database Instance",
      "type": "object",
      "properties": {
        "LunId": {
          "description": "ID of LUN",
          "type": "number"
        },
        "GlobalDatabaseInstanceID": {
          "description": "Unique ID of database instance in Orion",
          "type": "number"
        },
        "UserDefined": {
          "description": "Flag if the relationship is defined by user",
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPA.DpaServer": {
      "description": "Integrated DPA server",
      "type": "object",
      "properties": {
        "DpaServerId": {
          "description": "ID of DPA server",
          "type": "number"
        },
        "DisplayName": {
          "description": "Name of DPA server",
          "type": "string"
        },
        "JSwisAddress": {
          "description": "Address of jSwis endpoint",
          "type": "string"
        },
        "JSwisObjectUriBase": {
          "description": "Scheme and hostname for URIs of entities from this DPA server",
          "type": "string"
        },
        "JSwisCredentialId": {
          "description": "ID of credentials (SQL table Credential) to DPA jSwis",
          "type": "number"
        },
        "OrionHostname": {
          "description": "IP/Address of Orion, which was used for integration with DPA",
          "type": "string"
        },
        "OrionHostnameSetByUser": {
          "description": "Flag if OrionHostname was changed by user during the integration",
          "type": "boolean"
        },
        "DpaServiceUserAccountId": {
          "description": "ID of account in Orion for DPA",
          "type": "string"
        },
        "IntegrationStatus": {
          "description": "Integration status",
          "type": "number"
        },
        "IntegrationStatusDescription": {
          "description": "Description of integration status",
          "type": "string"
        },
        "Status": {
          "description": "Status of DPA server",
          "type": "number"
        },
        "StatusDescription": {
          "description": "Description of status",
          "type": "string"
        },
        "FeaturesCatalogDiff": {
          "type": "string"
        },
        "DetailsUrl": {
          "description": "URL to details view of DPA server",
          "type": "string"
        },
        "ModernIcon": {
          "description": "Nova icon name for the entity.",
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPI.Applications": {
      "type": "object",
      "properties": {
        "ApplicationID": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "DiscoveryMode": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ProtocolID": {
          "type": "string"
        },
        "CategoryID": {
          "type": "number"
        },
        "RiskLevel": {
          "type": "number"
        },
        "RiskLevelDescription": {
          "type": "string"
        },
        "ProductivityRating": {
          "type": "number"
        },
        "ProductivityRatingDescription": {
          "type": "string"
        },
        "Filter": {
          "type": "string"
        },
        "AdminStatus": {
          "type": "number"
        },
        "FilterSyntax": {
          "type": "string"
        },
        "LastDiscoveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "LastDiscoveryProbeID": {
          "type": "number"
        },
        "WebUri": {
          "type": "string"
        },
        "ART": {
          "type": "number"
        },
        "NRT": {
          "type": "number"
        },
        "Ingress": {
          "type": "number"
        },
        "IngressPerSec": {
          "type": "number"
        },
        "Egress": {
          "type": "number"
        },
        "EgressPerSec": {
          "type": "number"
        },
        "DataVolume": {
          "type": "number"
        },
        "DataVolumePerSec": {
          "type": "number"
        },
        "Transactions": {
          "type": "number"
        },
        "TransactionsPerMin": {
          "type": "number"
        },
        "ModernIcon": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.DPI.ApplicationAssignments": {
      "type": "object",
      "properties": {
        "ApplicationID": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "NodeID": {
          "type": "number"
        },
        "ART": {
          "type": "number"
        },
        "NRT": {
          "type": "number"
        },
        "Ingress": {
          "type": "number"
        },
        "IngressPerSec": {
          "type": "number"
        },
        "Egress": {
          "type": "number"
        },
        "EgressPerSec": {
          "type": "number"
        },
        "DataVolume": {
          "type": "number"
        },
        "DataVolumePerSec": {
          "type": "number"
        },
        "Transactions": {
          "type": "number"
        },
        "TransactionsPerMin": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPI.ApplicationSettings": {
      "type": "object",
      "properties": {
        "SettingID": {
          "type": "number"
        },
        "ApplicationID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPI.Probes": {
      "type": "object",
      "properties": {
        "ProbeID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "AgentID": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "Mode": {
          "type": "number"
        },
        "Enabled": {
          "type": "boolean"
        },
        "Status": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.DPI.ProbeAssignments": {
      "type": "object",
      "properties": {
        "ProbeID": {
          "type": "number"
        },
        "NodeID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPI.ProbeSettings": {
      "type": "object",
      "properties": {
        "SettingID": {
          "type": "number"
        },
        "ProbeID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DPI.ProbeProperties": {
      "type": "object",
      "properties": {
        "PropertyID": {
          "type": "number"
        },
        "ProbeID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.EOC.Sites": {
      "type": "object",
      "properties": {
        "EocSiteID": {
          "type": "number"
        },
        "SiteID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Host": {
          "type": "string"
        },
        "Website": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "PlatformVersion": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.EOC.SiteAccounts": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "EocSiteID": {
          "type": "number"
        },
        "AccountName": {
          "type": "string"
        },
        "CredentialID": {
          "type": "number"
        },
        "CredentialType": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "LastChecked": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.EOC.SiteAccess": {
      "type": "object",
      "properties": {
        "EocSiteID": {
          "type": "number"
        },
        "AccountID": {
          "type": "string"
        },
        "SiteAccountID": {
          "type": "number"
        },
        "SiteAccountName": {
          "type": "string"
        },
        "AllowUseDefaultAccount": {
          "type": "boolean"
        },
        "AccessDisabled": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.ESI.IncidentService": {
      "description": "Holds the information about integrated incident management services.",
      "type": "object",
      "properties": {
        "InstanceID": {
          "format": "uuid",
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        },
        "CredentialID": {
          "type": "number"
        },
        "OperationalState": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "CustomData": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "SWISf.RemoteSWIS": {
      "type": "object",
      "properties": {
        "SwisUri": {
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "AlwaysIncludeEntities": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.HA.Pools": {
      "description": "High Availability pools. Pool unites pool members of the same type to provide high availability of Orion servers.",
      "type": "object",
      "properties": {
        "PoolId": {
          "description": "ID of pool",
          "type": "number"
        },
        "PoolMasterMemberId": {
          "description": "ID of pool member which acts as a pool master",
          "type": "number"
        },
        "PoolType": {
          "description": "Type of pool (0 - main poller, 1 - additional poller)",
          "type": "string"
        },
        "DisplayName": {
          "description": "Name of a pool",
          "type": "string"
        },
        "Enabled": {
          "description": "Pool is enabled or disabled",
          "type": "boolean"
        },
        "CurrentStatus": {
          "description": "Current status of a pool",
          "type": "number"
        },
        "CurrentStatusTimestamp": {
          "format": "date-time",
          "description": "Timestamp of current status",
          "type": "string"
        },
        "PoolMasterChangeTimestamp": {
          "format": "date-time",
          "description": "Timestamp of pool master role change",
          "type": "string"
        },
        "IntervalMemberDown": {
          "description": "Interval after which is member considered as down",
          "type": "number"
        },
        "IntervalPoolTask": {
          "description": "Pool task interval in seconds. In this interval HA service performs regular tasks e.g. services status monitoring",
          "type": "number"
        },
        "IntervalSuicideRule": {
          "description": "Interval after which member releases its resource if it cannot reach other member of a pool do database",
          "type": "number"
        },
        "VirtualHostName": {
          "description": "Virtual Host name assigned to a pool",
          "type": "string"
        },
        "VirtualIpAddress": {
          "description": "Virtual IP Address assigned to a pool",
          "type": "string"
        },
        "DnsIpAddress": {
          "description": "IP Address of DNS server hosting primary zone used by virtual host name",
          "type": "string"
        },
        "DnsZone": {
          "description": "A name of forward lookup DNS zone where virtual host name record is stored",
          "type": "string"
        },
        "DnsType": {
          "description": "Type of DNS server (Microsoft, BIND, Other)",
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.HA.ResourcesInstances": {
      "description": "Resources which belongs to pool members. Resource is a responsibility of Orion server which can be switched to another server in a pool e.g. \"Main poller responsibility\" or \"Virtual IP\".",
      "type": "object",
      "properties": {
        "PoolId": {
          "description": "ID of pool",
          "type": "number"
        },
        "RefId": {
          "description": "Reference ID of resource",
          "type": "string"
        },
        "PoolMemberId": {
          "description": "ID of pool member",
          "type": "number"
        },
        "CurrentStatus": {
          "description": "Current status of resource",
          "type": "number"
        },
        "PreferredStatus": {
          "description": "Preferred status of member - the status HA service want resource to be",
          "type": "number"
        },
        "Config": {
          "description": "Resource configuration",
          "type": "string"
        },
        "ActionExecutionParameters": {
          "description": "Resource actions execution arguments",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.HA.PoolMemberInterfacesInfo": {
      "description": "IP addresses present on interfaces of pool members.",
      "type": "object",
      "properties": {
        "PoolMemberId": {
          "description": "ID of pool member",
          "type": "number"
        },
        "InterfaceType": {
          "description": "Type of interface (1 - primary, 2 - other)",
          "type": "number"
        },
        "IPAddress": {
          "description": "IP address",
          "type": "string"
        },
        "SubnetPrefixLength": {
          "description": "Length of subnet prefix",
          "type": "string"
        },
        "IsDynamic": {
          "description": "Static or dynamic IPv4 address flag (true - dynamic IP address). ",
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.NPM.Interfaces": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "InterfaceID": {
          "type": "number"
        },
        "ObjectSubType": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Index": {
          "type": "number"
        },
        "Icon": {
          "type": "string"
        },
        "Type": {
          "type": "number"
        },
        "TypeName": {
          "type": "string"
        },
        "TypeDescription": {
          "type": "string"
        },
        "Speed": {
          "type": "number"
        },
        "MTU": {
          "type": "number"
        },
        "LastChange": {
          "format": "date-time",
          "type": "string"
        },
        "PhysicalAddress": {
          "type": "string"
        },
        "AdminStatus": {
          "type": "number"
        },
        "OperStatus": {
          "type": "number"
        },
        "StatusIcon": {
          "type": "string"
        },
        "InBandwidth": {
          "type": "number"
        },
        "OutBandwidth": {
          "type": "number"
        },
        "Caption": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "Outbps": {
          "type": "number"
        },
        "Inbps": {
          "type": "number"
        },
        "Bps": {
          "type": "number"
        },
        "OutPercentUtil": {
          "type": "number"
        },
        "InPercentUtil": {
          "type": "number"
        },
        "PercentUtil": {
          "type": "number"
        },
        "OutPps": {
          "type": "number"
        },
        "InPps": {
          "type": "number"
        },
        "InPktSize": {
          "type": "number"
        },
        "OutPktSize": {
          "type": "number"
        },
        "OutUcastPps": {
          "type": "number"
        },
        "OutMcastPps": {
          "type": "number"
        },
        "InUcastPps": {
          "type": "number"
        },
        "InMcastPps": {
          "type": "number"
        },
        "InDiscardsThisHour": {
          "type": "number"
        },
        "InDiscardsToday": {
          "type": "number"
        },
        "InErrorsThisHour": {
          "type": "number"
        },
        "InErrorsToday": {
          "type": "number"
        },
        "OutDiscardsThisHour": {
          "type": "number"
        },
        "OutDiscardsToday": {
          "type": "number"
        },
        "OutErrorsThisHour": {
          "type": "number"
        },
        "OutErrorsToday": {
          "type": "number"
        },
        "CRCAlignErrorsThisHour": {
          "type": "number"
        },
        "CRCAlignErrorsToday": {
          "type": "number"
        },
        "LateCollisionsThisHour": {
          "type": "number"
        },
        "LateCollisionsToday": {
          "type": "number"
        },
        "MaxInBpsToday": {
          "type": "number"
        },
        "MaxInBpsTime": {
          "format": "date-time",
          "type": "string"
        },
        "MaxOutBpsToday": {
          "type": "number"
        },
        "MaxOutBpsTime": {
          "format": "date-time",
          "type": "string"
        },
        "Counter64": {
          "$ref": "#/definitions/System.Char"
        },
        "LastSync": {
          "format": "date-time",
          "type": "string"
        },
        "Alias": {
          "type": "string"
        },
        "IfName": {
          "type": "string"
        },
        "Severity": {
          "type": "number"
        },
        "CustomBandwidth": {
          "type": "boolean"
        },
        "CustomPollerLastStatisticsPoll": {
          "format": "date-time",
          "type": "string"
        },
        "PollInterval": {
          "type": "number"
        },
        "NextPoll": {
          "format": "date-time",
          "type": "string"
        },
        "RediscoveryInterval": {
          "type": "number"
        },
        "NextRediscovery": {
          "format": "date-time",
          "type": "string"
        },
        "StatCollection": {
          "type": "number"
        },
        "UnPluggable": {
          "type": "boolean"
        },
        "InterfaceSpeed": {
          "type": "number"
        },
        "InterfaceCaption": {
          "type": "string"
        },
        "InterfaceType": {
          "type": "number"
        },
        "InterfaceSubType": {
          "type": "number"
        },
        "MAC": {
          "type": "string"
        },
        "InterfaceName": {
          "type": "string"
        },
        "InterfaceIcon": {
          "type": "string"
        },
        "InterfaceTypeName": {
          "type": "string"
        },
        "AdminStatusLED": {
          "type": "string"
        },
        "OperStatusLED": {
          "type": "string"
        },
        "InterfaceAlias": {
          "type": "string"
        },
        "InterfaceIndex": {
          "type": "number"
        },
        "InterfaceLastChange": {
          "format": "date-time",
          "type": "string"
        },
        "InterfaceMTU": {
          "type": "number"
        },
        "InterfaceTypeDescription": {
          "type": "string"
        },
        "OrionIdPrefix": {
          "type": "string"
        },
        "OrionIdColumn": {
          "type": "string"
        },
        "DuplexMode": {
          "type": "number"
        },
        "SkippedPollingCycles": {
          "type": "number"
        },
        "MinutesSinceLastSync": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "InterfaceResponding": {
          "type": "boolean"
        },
        "Description": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "ObsoleteDataCurrentSettingValue": {
          "type": "number"
        },
        "ObsoleteDataFeatureStatus": {
          "type": "number"
        },
        "HasObsoleteData": {
          "type": "boolean"
        },
        "ModernIcon": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.NPM.Interfaces": {
      "description": "This entity presents information about Node interfaces",
      "type": "object",
      "properties": {
        "NodeID": {
          "description": "ID of parent node.",
          "type": "number"
        },
        "InterfaceID": {
          "description": "Interface ID. Primary key.",
          "type": "number"
        },
        "ObjectSubType": {
          "description": "String representation of object sub type: None, SNMP, WMI, ICMP, Agent.",
          "type": "string"
        },
        "Name": {
          "description": "String value that contains the name of the agent.",
          "type": "string"
        },
        "Index": {
          "description": "Number value that uniquely identifies the interface.",
          "type": "number"
        },
        "Icon": {
          "description": "String value containing a file name of interface Icon. Example:6.gif.",
          "type": "string"
        },
        "Type": {
          "description": "Integer value indicating interface type, stored in system in table InterfaceTypes.",
          "type": "number"
        },
        "TypeName": {
          "description": "String value indicating interface type name. Example:ethernetCsmacd.",
          "type": "string"
        },
        "TypeDescription": {
          "description": "String value indicating interface type description. Example:Ethernet.",
          "type": "string"
        },
        "Speed": {
          "description": "Interface's current bandwidth in bits per second.",
          "type": "number"
        },
        "MTU": {
          "description": "The size of the largest packet that can be sent or received on the interface, specified in octets.\n      For interfaces that are used for transmitting network datagrams,\n      this is the size of the largest network datagram that can be sent on the interface.",
          "type": "number"
        },
        "LastChange": {
          "format": "date-time",
          "description": "Timestamp when interface state changed last time.",
          "type": "string"
        },
        "PhysicalAddress": {
          "description": "String value of physical (MAC) address of interface.",
          "type": "string"
        },
        "AdminStatus": {
          "description": "Integer value indicating the desired state of the interface.\n      The testing(3) state indicates that no operational packets can be passed.\n      When a managed system initializes, all interfaces start with AdminStatus in the down(2) state.\n      As a result of either explicit management action or per configuration information retained by the managed system,\n      AdminStatus is then changed to either the up (1) or testing (3) states (or remains in the down (2) state).\n      Possible Values:\n      * Unknown = 0\n      * Up = 1\n      * Down = 2\n      * Testing = 3.",
          "type": "number"
        },
        "OperStatus": {
          "description": "The current operational state of the interface.\n      The testing (3) state indicates that no operational packets can be passed.\n      If AdminStatus is down (2) then OperStatus should be down (2).\n      If AdminStatus is changed to up (1) then OperStatus should change to up (1) if the interface is ready to transmit and receive network traffic;\n      it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection);\n      it should remain in the down (2) state if and only if there is a fault that prevents it from going to the up (1) state.\n      Possible Values:\n      * Up = 1\n      * Down = 2\n      * Testing = 3\n      * Unknown = 4\n      * Dormant = 5\n      * NotPresent = 6\n      * LowerLayerDown = 7",
          "type": "number"
        },
        "StatusIcon": {
          "description": "String value containing a file name of interface status Icon. Example:Unknown.gif.",
          "type": "string"
        },
        "InBandwidth": {
          "description": "Interface's current IN bandwidth in bits per second that can be set manually.",
          "type": "number"
        },
        "OutBandwidth": {
          "description": "Interface's current Out bandwidth in bits per second that can be set manually.",
          "type": "number"
        },
        "Caption": {
          "description": "The string value that contains interface caption. Example:Local Netflow Source.",
          "type": "string"
        },
        "FullName": {
          "description": "The string value that contains interface full name.",
          "type": "string"
        },
        "Outbps": {
          "description": "Current Outbound traffic, bits per second.",
          "type": "number"
        },
        "Inbps": {
          "description": "Current Inbound traffic, bits per second.",
          "type": "number"
        },
        "Bps": {
          "description": "Current traffic, bits per second.",
          "type": "number"
        },
        "OutPercentUtil": {
          "description": "Outbound interface utilization in percents.",
          "type": "number"
        },
        "InPercentUtil": {
          "description": "Inbound interface utilization in percents.",
          "type": "number"
        },
        "PercentUtil": {
          "description": "Interface utilization in percents.",
          "type": "number"
        },
        "OutPps": {
          "description": "Current Outbound traffic, packets per second.",
          "type": "number"
        },
        "InPps": {
          "description": "Current Inbound traffic, packets per second.",
          "type": "number"
        },
        "InPktSize": {
          "description": "Inbound packet size in bytes.",
          "type": "number"
        },
        "OutPktSize": {
          "description": "Outbound packet size in bytes.",
          "type": "number"
        },
        "OutUcastPps": {
          "description": "Current outbound unicast traffic, packets per second.",
          "type": "number"
        },
        "OutMcastPps": {
          "description": "Current outbound multicast traffic, packets per second.",
          "type": "number"
        },
        "InUcastPps": {
          "description": "Current inbound unicast traffic, packets per second.",
          "type": "number"
        },
        "InMcastPps": {
          "description": "Current inbound multicast traffic, packets per second.",
          "type": "number"
        },
        "InDiscardsThisHour": {
          "description": "Count of discarded inbound packets for this hour.",
          "type": "number"
        },
        "InDiscardsToday": {
          "description": "Count of discarded inbound packets for today.",
          "type": "number"
        },
        "InErrorsThisHour": {
          "description": "Count of inbound packets with errors for this hour.",
          "type": "number"
        },
        "InErrorsToday": {
          "description": "Count of inbound packets with errors for today.",
          "type": "number"
        },
        "OutDiscardsThisHour": {
          "description": "Count of discarded outbound packets for this hour.",
          "type": "number"
        },
        "OutDiscardsToday": {
          "description": "Count of discarded outbound packets for today.",
          "type": "number"
        },
        "OutErrorsThisHour": {
          "description": "Count of outbound packets with errors for this hour.",
          "type": "number"
        },
        "OutErrorsToday": {
          "description": "Count of outbound packets with errors for today.",
          "type": "number"
        },
        "CRCAlignErrorsThisHour": {
          "description": "Count of CRCAlignErrors (Cyclic Redundancy Check) on interface for this hour.",
          "type": "number"
        },
        "CRCAlignErrorsToday": {
          "description": "Count of CRCAlignError (Cyclic Redundancy Check) on interface for today.",
          "type": "number"
        },
        "LateCollisionsThisHour": {
          "description": "Count of LateCollisions on interface for this hour..",
          "type": "number"
        },
        "LateCollisionsToday": {
          "description": "Count of LateCollisions on interface for today..",
          "type": "number"
        },
        "MaxInBpsToday": {
          "description": "Max value of Inbound traffic for interface for today, bits per second..",
          "type": "number"
        },
        "MaxInBpsTime": {
          "format": "date-time",
          "description": "Max value of Inbound traffic for interface, bits per second..",
          "type": "string"
        },
        "MaxOutBpsToday": {
          "description": "Max value of Outbound traffic for today, bits per second.",
          "type": "number"
        },
        "MaxOutBpsTime": {
          "format": "date-time",
          "description": "Timestamp when maximum value of Outbound traffic was reached.",
          "type": "string"
        },
        "Counter64": {
          "$ref": "#/definitions/System.Char"
        },
        "LastSync": {
          "format": "date-time",
          "description": "Timestamp when interface data was sync.",
          "type": "string"
        },
        "Alias": {
          "description": "This object is an 'alias' name for the interface as specified by a network manager, and provides a non-volatile 'handle' for the interface.",
          "type": "string"
        },
        "IfName": {
          "description": "The textual name of the interface. The value of this object should be the name of the interface as assigned by the local\n      device and should be suitable for use in commands entered at the device's 'console'.\n      This might be a text name, such as 'le0' or a simple port number, such as '1', depending on the interface naming syntax of the device.\n      If several entries in the ifTable together represent a single interface as named by the device, then each entry has the same value of ifName.\n      If there is no local name, or this object is otherwise not applicable, then this object contains a 0-length string..",
          "type": "string"
        },
        "Severity": {
          "description": "Severity of Interface. When the Status property is changed on the Interface,\n      Severity is also affected. If status is Down, Severity is 1000 (Down),\n      when status is Unknows or Warning, Severity is 1 (Warning),\n      everything else Severity is 0.",
          "type": "number"
        },
        "CustomBandwidth": {
          "description": "Indicates if interface is configured to use custom bandwidth value.",
          "type": "boolean"
        },
        "CustomPollerLastStatisticsPoll": {
          "format": "date-time",
          "description": "Timestamp when interface statistics was polled last time by custom poller.",
          "type": "string"
        },
        "PollInterval": {
          "description": "Interval of polling interface in seconds.",
          "type": "number"
        },
        "NextPoll": {
          "format": "date-time",
          "description": "Timestamp when interface will be polled next time.",
          "type": "string"
        },
        "RediscoveryInterval": {
          "description": "Interval of rediscovery interface in minutes.",
          "type": "number"
        },
        "NextRediscovery": {
          "format": "date-time",
          "description": "Timestamp when interface will be rediscovered next time.",
          "type": "string"
        },
        "StatCollection": {
          "description": "Interval of collecting statistics for interface in minutes.",
          "type": "number"
        },
        "UnPluggable": {
          "description": "Indicates if interface is unpluggable.",
          "type": "boolean"
        },
        "InterfaceSpeed": {
          "description": "Interface's current bandwidth in bits per second.",
          "type": "number"
        },
        "InterfaceCaption": {
          "description": "The string value that contains interface caption.",
          "type": "string"
        },
        "InterfaceType": {
          "description": "Integer value indicating interface type, stored in system in table InterfaceTypes.",
          "type": "number"
        },
        "InterfaceSubType": {
          "description": "Integer value indicating interface SUB type, stored in system in table InterfaceTypes.",
          "type": "number"
        },
        "MAC": {
          "description": "MAC address of interface.",
          "type": "string"
        },
        "InterfaceName": {
          "description": "Name of interface.",
          "type": "string"
        },
        "InterfaceIcon": {
          "description": "String value containing a file name of interface Icon. Example:6.gif.",
          "type": "string"
        },
        "InterfaceTypeName": {
          "description": "String value indicating interface type name.",
          "type": "string"
        },
        "AdminStatusLED": {
          "description": "String value containing a file name of interface Admin status Icon. Example:'Up.gif'.",
          "type": "string"
        },
        "OperStatusLED": {
          "description": "String value containing a file name of interface Oper status Icon. Example:'Up.gif'.",
          "type": "string"
        },
        "InterfaceAlias": {
          "description": "This object is an 'alias' name for the interface as specified by a network manager, and provides a non-volatile\n      'handle' for the interface. Aligns with Alias field.",
          "type": "string"
        },
        "InterfaceIndex": {
          "description": "Number value that uniquely identifies the interface. Aligns with Index field.",
          "type": "number"
        },
        "InterfaceLastChange": {
          "format": "date-time",
          "description": "Timestamp when interface state changed last time by Collector.",
          "type": "string"
        },
        "InterfaceMTU": {
          "description": "The size of the largest packet that can be sent or received on the interface, specified in octets.\n      For interfaces that are used for transmitting network datagrams,\n      this is the size of the largest network datagram that can be sent on the interface.",
          "type": "number"
        },
        "InterfaceTypeDescription": {
          "description": "String value indicating interface type description.",
          "type": "string"
        },
        "OrionIdPrefix": {
          "description": "Orion id prefix. Example:'I:'.",
          "type": "string"
        },
        "OrionIdColumn": {
          "description": "Column name that contains Orion object ID InterfaceID.",
          "type": "string"
        },
        "DuplexMode": {
          "description": "Specifies if interface supports duplex mode.",
          "type": "number"
        },
        "SkippedPollingCycles": {
          "description": "Number of skipped polling cycles.",
          "type": "number"
        },
        "MinutesSinceLastSync": {
          "description": "Number of minutes since last sync.",
          "type": "number"
        },
        "Status": {
          "description": "Status of interface. Status is calculated from the AdminStatus and OperStatus properties.\n      Possible Values:\n      * Unknown = 0\n      * Up = 1\n      * Down = 2\n      * Warning = 3\n      * Shutdown = 4\n      * Unmanaged = 9\n      * Unplugged = 10\n      * Unreachable = 12.",
          "type": "number"
        },
        "InterfaceResponding": {
          "description": "States if interface is responding. If status is Unknown, then 0 else 1.",
          "type": "boolean"
        },
        "Description": {
          "description": "Description of interface.",
          "type": "string"
        },
        "DetailsUrl": {
          "description": "Url of interface details page.",
          "type": "string"
        },
        "ObsoleteDataCurrentSettingValue": {
          "description": "Number of polling intervals before Interfaces data is considered obsolete. Default value is 3.",
          "type": "number"
        },
        "ObsoleteDataFeatureStatus": {
          "description": "Enables to turn the feature Obsolete Interface data on or off. Default value is 1 (on).",
          "type": "number"
        },
        "HasObsoleteData": {
          "description": "Indicator that states if interface data is obsolete: 1 if interfase data is obsolete, otherwise 0.",
          "type": "boolean"
        },
        "ModernIcon": {
          "description": "Nova icon name for the entity.",
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "IPAM.GroupNodeAttr": {
      "type": "object",
      "properties": {
        "GroupId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "IPAM.IPNodeAttr": {
      "type": "object",
      "properties": {
        "IPNodeId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.IPAM.IPNode": {
      "type": "object",
      "properties": {
        "IpNodeId": {
          "type": "number"
        },
        "SubnetId": {
          "type": "number"
        },
        "IPOrdinal": {
          "type": "number"
        },
        "IPAddress": {
          "type": "string"
        },
        "IPAddressN": {
          "format": "uuid",
          "type": "string"
        },
        "IPMapped": {
          "type": "string"
        },
        "IPMappedN": {
          "format": "uuid",
          "type": "string"
        },
        "Alias": {
          "type": "string"
        },
        "MAC": {
          "type": "string"
        },
        "DnsBackward": {
          "type": "string"
        },
        "DhcpClientName": {
          "type": "string"
        },
        "SysName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Contact": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "SysObjectID": {
          "type": "string"
        },
        "Vendor": {
          "type": "string"
        },
        "VendorIcon": {
          "type": "string"
        },
        "MachineType": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "ResponseTime": {
          "type": "number"
        },
        "LastBoot": {
          "format": "date-time",
          "type": "string"
        },
        "LastSync": {
          "format": "date-time",
          "type": "string"
        },
        "LastCredential": {
          "format": "uuid",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "AllocPolicy": {
          "type": "number"
        },
        "SkipScan": {
          "type": "boolean"
        },
        "LeaseExpires": {
          "format": "date-time",
          "type": "string"
        },
        "DnsBy": {
          "type": "number"
        },
        "MacBy": {
          "type": "number"
        },
        "StatusBy": {
          "type": "number"
        },
        "SystemDataBy": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.IPAM.Subnet": {
      "type": "object",
      "properties": {
        "SubnetId": {
          "type": "number"
        },
        "ParentId": {
          "type": "number"
        },
        "Address": {
          "type": "string"
        },
        "AddressN": {
          "format": "uuid",
          "type": "string"
        },
        "AddressMask": {
          "type": "string"
        },
        "CIDR": {
          "type": "number"
        },
        "AllocSize": {
          "type": "number"
        },
        "AllocSizeN": {
          "$ref": "#/definitions/System.Decimal"
        },
        "FriendlyName": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "VLAN": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "LastDiscovery": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "ScanInterval": {
          "type": "number"
        },
        "PercentUsed": {
          "$ref": "#/definitions/System.Decimal"
        },
        "TotalCount": {
          "type": "number"
        },
        "UsedCount": {
          "type": "number"
        },
        "AvailableCount": {
          "type": "number"
        },
        "ReservedCount": {
          "type": "number"
        },
        "TransientCount": {
          "type": "number"
        },
        "HasLicenceOverflow": {
          "type": "boolean"
        },
        "GroupIconPrefix": {
          "type": "string"
        },
        "StatusName": {
          "type": "string"
        },
        "StatusShortDescription": {
          "type": "string"
        },
        "StatusRanking": {
          "type": "number"
        },
        "StatusIconPostfix": {
          "type": "string"
        },
        "GroupTypeText": {
          "type": "string"
        },
        "AccountID": {
          "type": "string"
        },
        "Role": {
          "type": "string"
        },
        "GroupType": {
          "type": "number"
        },
        "Distance": {
          "type": "number"
        },
        "SubnetStructureChanged": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.IPAM.Setting": {
      "type": "object",
      "properties": {
        "AssignedTo": {
          "type": "string"
        },
        "Category": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "ValueType": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.IPAM.IPRequests": {
      "type": "object",
      "properties": {
        "IPRequestId": {
          "type": "number"
        },
        "RequestAccountId": {
          "type": "number"
        },
        "RequestDate": {
          "format": "date-time",
          "type": "string"
        },
        "RequestAddressCount": {
          "type": "number"
        },
        "ResolutionAccountId": {
          "type": "number"
        },
        "ResolutionDate": {
          "format": "date-time",
          "type": "string"
        },
        "State": {
          "type": "number"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "Subnet": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "GroupId": {
          "type": "number"
        },
        "IsLegacy": {
          "type": "boolean"
        },
        "AdminComment": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.IPAM.IPRequestAddresses": {
      "type": "object",
      "properties": {
        "IPRequestAddressId": {
          "type": "number"
        },
        "IPRequestId": {
          "type": "number"
        },
        "Address": {
          "type": "string"
        },
        "HostName": {
          "type": "string"
        },
        "MacAddress": {
          "type": "string"
        },
        "State": {
          "type": "number"
        },
        "IsScanDisabled": {
          "type": "boolean"
        },
        "IPNodeId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.IPAM.GroupsCustomProperties": {
      "type": "object",
      "properties": {
        "GroupId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.IPAM.NodesCustomProperties": {
      "type": "object",
      "properties": {
        "IPNodeId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.IPAM.RequesterDetailsFieldsMetadata": {
      "type": "object",
      "properties": {
        "RequesterDetailsFieldsMetadataId": {
          "type": "number"
        },
        "FieldName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsRequired": {
          "type": "boolean"
        },
        "FieldType": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.IPAM.RequesterDetailsFieldsValues": {
      "type": "object",
      "properties": {
        "RequesterDetailsFieldsValuesId": {
          "type": "number"
        },
        "IPRequestId": {
          "type": "number"
        },
        "RequesterDetailsFieldsMetadataId": {
          "type": "number"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "IPAM.IPNode": {
      "type": "object",
      "properties": {
        "IpNodeId": {
          "type": "number"
        },
        "SubnetId": {
          "type": "number"
        },
        "IPOrdinal": {
          "type": "number"
        },
        "IPAddress": {
          "type": "string"
        },
        "IPAddressN": {
          "format": "uuid",
          "type": "string"
        },
        "IPMapped": {
          "type": "string"
        },
        "IPMappedN": {
          "format": "uuid",
          "type": "string"
        },
        "Alias": {
          "type": "string"
        },
        "MAC": {
          "type": "string"
        },
        "DnsBackward": {
          "type": "string"
        },
        "DhcpClientName": {
          "type": "string"
        },
        "SysName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Contact": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "SysObjectID": {
          "type": "string"
        },
        "Vendor": {
          "type": "string"
        },
        "VendorIcon": {
          "type": "string"
        },
        "MachineType": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "ResponseTime": {
          "type": "number"
        },
        "LastBoot": {
          "format": "date-time",
          "type": "string"
        },
        "LastSync": {
          "format": "date-time",
          "type": "string"
        },
        "LastCredential": {
          "format": "uuid",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "AllocPolicy": {
          "type": "number"
        },
        "SkipScan": {
          "type": "boolean"
        },
        "LeaseExpires": {
          "format": "date-time",
          "type": "string"
        },
        "DnsBy": {
          "type": "number"
        },
        "MacBy": {
          "type": "number"
        },
        "StatusBy": {
          "type": "number"
        },
        "SystemDataBy": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "IPAM.Subnet": {
      "type": "object",
      "properties": {
        "SubnetId": {
          "type": "number"
        },
        "ParentId": {
          "type": "number"
        },
        "Address": {
          "type": "string"
        },
        "AddressN": {
          "format": "uuid",
          "type": "string"
        },
        "AddressMask": {
          "type": "string"
        },
        "CIDR": {
          "type": "number"
        },
        "AllocSize": {
          "type": "number"
        },
        "AllocSizeN": {
          "$ref": "#/definitions/System.Decimal"
        },
        "FriendlyName": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "VLAN": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "LastDiscovery": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "ScanInterval": {
          "type": "number"
        },
        "PercentUsed": {
          "$ref": "#/definitions/System.Decimal"
        },
        "TotalCount": {
          "type": "number"
        },
        "UsedCount": {
          "type": "number"
        },
        "AvailableCount": {
          "type": "number"
        },
        "ReservedCount": {
          "type": "number"
        },
        "TransientCount": {
          "type": "number"
        },
        "HasLicenceOverflow": {
          "type": "boolean"
        },
        "GroupIconPrefix": {
          "type": "string"
        },
        "StatusName": {
          "type": "string"
        },
        "StatusShortDescription": {
          "type": "string"
        },
        "StatusRanking": {
          "type": "number"
        },
        "StatusIconPostfix": {
          "type": "string"
        },
        "GroupTypeText": {
          "type": "string"
        },
        "AccountID": {
          "type": "string"
        },
        "Role": {
          "type": "string"
        },
        "GroupType": {
          "type": "number"
        },
        "Distance": {
          "type": "number"
        },
        "SubnetStructureChanged": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "IPAM.Setting": {
      "type": "object",
      "properties": {
        "AssignedTo": {
          "type": "string"
        },
        "Category": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "ValueType": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "IPAM.IPRequests": {
      "type": "object",
      "properties": {
        "IPRequestId": {
          "type": "number"
        },
        "RequestAccountId": {
          "type": "number"
        },
        "RequestDate": {
          "format": "date-time",
          "type": "string"
        },
        "RequestAddressCount": {
          "type": "number"
        },
        "ResolutionAccountId": {
          "type": "number"
        },
        "ResolutionDate": {
          "format": "date-time",
          "type": "string"
        },
        "State": {
          "type": "number"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "Subnet": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "GroupId": {
          "type": "number"
        },
        "IsLegacy": {
          "type": "boolean"
        },
        "AdminComment": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "IPAM.IPRequestAddresses": {
      "type": "object",
      "properties": {
        "IPRequestAddressId": {
          "type": "number"
        },
        "IPRequestId": {
          "type": "number"
        },
        "Address": {
          "type": "string"
        },
        "HostName": {
          "type": "string"
        },
        "MacAddress": {
          "type": "string"
        },
        "State": {
          "type": "number"
        },
        "IsScanDisabled": {
          "type": "boolean"
        },
        "IPNodeId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "IPAM.GroupsCustomProperties": {
      "type": "object",
      "properties": {
        "GroupId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "IPAM.NodesCustomProperties": {
      "type": "object",
      "properties": {
        "IPNodeId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "IPAM.RequesterDetailsFieldsMetadata": {
      "type": "object",
      "properties": {
        "RequesterDetailsFieldsMetadataId": {
          "type": "number"
        },
        "FieldName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsRequired": {
          "type": "boolean"
        },
        "FieldType": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "IPAM.RequesterDetailsFieldsValues": {
      "type": "object",
      "properties": {
        "RequesterDetailsFieldsValuesId": {
          "type": "number"
        },
        "IPRequestId": {
          "type": "number"
        },
        "RequesterDetailsFieldsMetadataId": {
          "type": "number"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Licensing.LicenseFilters": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "LicenseVersion": {
          "type": "string"
        },
        "ProductName": {
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "LicenseType": {
          "type": "string"
        },
        "ApplicationMode": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Maps.Projects": {
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "ProjectID": {
          "type": "string"
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "Favorite": {
          "type": "boolean"
        },
        "TrackHistory": {
          "type": "boolean"
        },
        "Data": {
          "type": "string"
        },
        "GraphDefinition": {
          "type": "string"
        },
        "EntityCount": {
          "type": "number"
        },
        "GraphOPID": {
          "type": "string"
        },
        "CommitId": {
          "type": "number"
        },
        "PublicVisibility": {
          "type": "boolean"
        },
        "ImportedFromNAId": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Maps.ProjectHistory": {
      "description": "\n      This entity tracks the edit history for a Project.\n    ",
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "ProjectID": {
          "type": "string"
        },
        "CommitId": {
          "type": "number"
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "Favorite": {
          "type": "boolean"
        },
        "Data": {
          "type": "string"
        },
        "GraphDefinition": {
          "type": "string"
        },
        "EntityCount": {
          "type": "number"
        },
        "GraphOPID": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Maps.GraphHistory": {
      "description": "\n      This entity tracks changes to the underlying graph for an Orion Map.\n    ",
      "type": "object",
      "properties": {
        "SnapshotID": {
          "type": "number"
        },
        "ProjectID": {
          "type": "string"
        },
        "CommitId": {
          "type": "number"
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "ContainerID": {
          "type": "number"
        },
        "EventID": {
          "type": "number"
        },
        "EventType": {
          "type": "number"
        },
        "GraphSnapshot": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Maps.Edges": {
      "type": "object",
      "properties": {
        "ProjectID": {
          "type": "string"
        },
        "EdgeID": {
          "type": "number"
        },
        "SourceEntityOPID": {
          "type": "string"
        },
        "SourceEntityID": {
          "type": "number"
        },
        "DestinationEntityOPID": {
          "type": "string"
        },
        "DestinationEntityID": {
          "type": "number"
        },
        "EdgeType": {
          "type": "number"
        },
        "DynamicEdgeCompatible": {
          "type": "boolean"
        },
        "SourceMetricEntityOPID": {
          "type": "string"
        },
        "SourceMetricEntityID": {
          "type": "number"
        },
        "SourceMetricsInverted": {
          "type": "boolean"
        },
        "DestinationMetricEntityOPID": {
          "type": "string"
        },
        "DestinationMetricEntityID": {
          "type": "number"
        },
        "DestinationMetricsInverted": {
          "type": "boolean"
        },
        "LastUpdateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "AccountID": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Maps.Assets": {
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "AssetID": {
          "type": "number"
        },
        "ID": {
          "type": "string"
        },
        "ProjectID": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "AssetType": {
          "type": "string"
        },
        "FileType": {
          "type": "string"
        },
        "FilePath": {
          "type": "string"
        },
        "Persisted": {
          "type": "boolean"
        },
        "Height": {
          "type": "number"
        },
        "Width": {
          "type": "number"
        },
        "Content": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "Thumbnail": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Maps.AssetUsage": {
      "type": "object",
      "properties": {
        "ProjectID": {
          "type": "string"
        },
        "AssetID": {
          "type": "number"
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Maps.Projects": {
      "description": "\n      This entity represents the view of a Orion Maps Project, that the user\n      can store, reload or share with others, used in the development and display of a Diagram or Map.\n    ",
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "ProjectID": {
          "type": "string"
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "Favorite": {
          "type": "boolean"
        },
        "TrackHistory": {
          "type": "boolean"
        },
        "Data": {
          "type": "string"
        },
        "GraphDefinition": {
          "type": "string"
        },
        "EntityCount": {
          "type": "number"
        },
        "GraphOPID": {
          "type": "string"
        },
        "CommitId": {
          "type": "number"
        },
        "PublicVisibility": {
          "type": "boolean"
        },
        "ImportedFromNAId": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Maps.Edges": {
      "description": "\n      This entity represents the manual edges created from Orion Maps Editor between two managed entities.\n      Each edge can also include Source/Destination metric entities (e.g. Interfaces) to show metrics associated with the edge.\n    ",
      "type": "object",
      "properties": {
        "ProjectID": {
          "type": "string"
        },
        "EdgeID": {
          "type": "number"
        },
        "SourceEntityOPID": {
          "type": "string"
        },
        "SourceEntityID": {
          "type": "number"
        },
        "DestinationEntityOPID": {
          "type": "string"
        },
        "DestinationEntityID": {
          "type": "number"
        },
        "EdgeType": {
          "type": "number"
        },
        "DynamicEdgeCompatible": {
          "type": "boolean"
        },
        "SourceMetricEntityOPID": {
          "type": "string"
        },
        "SourceMetricEntityID": {
          "type": "number"
        },
        "SourceMetricsInverted": {
          "type": "boolean"
        },
        "DestinationMetricEntityOPID": {
          "type": "string"
        },
        "DestinationMetricEntityID": {
          "type": "number"
        },
        "DestinationMetricsInverted": {
          "type": "boolean"
        },
        "LastUpdateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "AccountID": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Maps.Assets": {
      "description": "\n      This entity represents the images uploaded by users using Maps editor. Each image asset can be used as the background image of the map, \n      or to represent the external entity connected by manual edge.\n    ",
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "AssetID": {
          "type": "number"
        },
        "ID": {
          "type": "string"
        },
        "ProjectID": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "AssetType": {
          "type": "string"
        },
        "FileType": {
          "type": "string"
        },
        "FilePath": {
          "type": "string"
        },
        "Persisted": {
          "type": "boolean"
        },
        "Height": {
          "type": "number"
        },
        "Width": {
          "type": "number"
        },
        "Content": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "Thumbnail": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Maps.AssetUsage": {
      "description": "\n      This entity tracks the usage of assets in projects, allowing the system to remove unused assets.\n    ",
      "type": "object",
      "properties": {
        "ProjectID": {
          "type": "string"
        },
        "AssetID": {
          "type": "number"
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Netflow.Diagnostics.Partitions": {
      "type": "object",
      "properties": {
        "PartitionNumber": {
          "type": "number"
        },
        "PartitionBoundary": {
          "format": "date-time",
          "type": "string"
        },
        "RowCount": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Netflow.Diagnostics.Tables": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "RowCount": {
          "type": "number"
        },
        "TotalSpaceMB": {
          "type": "number"
        },
        "UsedSpaceMB": {
          "type": "number"
        },
        "UnusedSpaceMB": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Netflow.Diagnostics.Database": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "TotalSpaceMB": {
          "type": "number"
        },
        "UsedSpaceMB": {
          "type": "number"
        },
        "UnusedSpaceMB": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Netflow.Diagnostics.Partitions": {
      "type": "object",
      "properties": {
        "PartitionNumber": {
          "type": "number"
        },
        "PartitionBoundary": {
          "format": "date-time",
          "type": "string"
        },
        "RowCount": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Netflow.Diagnostics.Tables": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "RowCount": {
          "type": "number"
        },
        "TotalSpaceMB": {
          "type": "number"
        },
        "UsedSpaceMB": {
          "type": "number"
        },
        "UnusedSpaceMB": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Netflow.Diagnostics.Database": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "TotalSpaceMB": {
          "type": "number"
        },
        "UsedSpaceMB": {
          "type": "number"
        },
        "UnusedSpaceMB": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Netflow.IPAddressGroupsManagement": {
      "type": "object",
      "properties": {
        "IPAddressGroupID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Netflow.IPGroupExternalRelation": {
      "type": "object",
      "properties": {
        "RelationID": {
          "type": "number"
        },
        "IPGroupID": {
          "type": "number"
        },
        "ExternalIPGroupID": {
          "type": "number"
        },
        "ExternalIPGroupName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Netflow.NodeProperties": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "FlowVersion": {
          "type": "number"
        },
        "FlowType": {
          "type": "number"
        },
        "FlowVersionFormatted": {
          "type": "string"
        },
        "IsAARCapable": {
          "type": "boolean"
        },
        "IsAARMainDevice": {
          "type": "boolean"
        },
        "ManualSamplingRate": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Netflow.IPAddressGroupsManagement": {
      "type": "object",
      "properties": {
        "IPAddressGroupID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Netflow.IPGroupExternalRelation": {
      "type": "object",
      "properties": {
        "RelationID": {
          "type": "number"
        },
        "IPGroupID": {
          "type": "number"
        },
        "ExternalIPGroupID": {
          "type": "number"
        },
        "ExternalIPGroupName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Netflow.NodeProperties": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "FlowVersion": {
          "type": "number"
        },
        "FlowType": {
          "type": "number"
        },
        "FlowVersionFormatted": {
          "type": "string"
        },
        "IsAARCapable": {
          "type": "boolean"
        },
        "IsAARMainDevice": {
          "type": "boolean"
        },
        "ManualSamplingRate": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.NetPath.EndpointServicesBase": {
      "description": "Contains configuration information for services to monitor.",
      "type": "object",
      "properties": {
        "EndpointServiceID": {
          "type": "number"
        },
        "SourceModule": {
          "type": "number"
        },
        "CreationTime": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "HostName": {
          "type": "string"
        },
        "Protocol": {
          "type": "string"
        },
        "Port": {
          "type": "number"
        },
        "ProbeIntervalInMinutes": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        }
      }
    },
    "Orion.NetPath.ProbesBase": {
      "description": "Contains probe information. The probing is done from probes. A user can install multiple probes at various locations to probe the same service.",
      "type": "object",
      "properties": {
        "ProbeID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "SourceModule": {
          "type": "number"
        },
        "AgentID": {
          "type": "number"
        },
        "EngineID": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "Status": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.NetPath.EndpointServiceAssignments": {
      "description": "Contains the assignments between probes and the services they monitor. A probe can monitor multiple services, and a service can be monitored by multiple probes.",
      "type": "object",
      "properties": {
        "ProbeID": {
          "type": "number"
        },
        "EndpointServiceID": {
          "type": "number"
        },
        "Enabled": {
          "type": "boolean"
        },
        "LastStatus": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "LastProbeTime": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.NetPath.EndpointServiceProperties": {
      "description": "Table holds settings for Probe and particular EndpointService if specified. Values are inherited from less specific (ProbeId only) to concrete (ProbeId and EndpointServiceId)",
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "ProbeID": {
          "type": "number"
        },
        "EndpointServiceID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.NetPath.Thresholds": {
      "description": "Contains custom status threshold values for a probe and service assignment.",
      "type": "object",
      "properties": {
        "ProbeID": {
          "type": "number"
        },
        "EndpointServiceID": {
          "type": "number"
        },
        "ThresholdTypeID": {
          "type": "number"
        },
        "ObjectTypeID": {
          "type": "number"
        },
        "Critical": {
          "type": "number"
        },
        "Warning": {
          "type": "number"
        },
        "Benign": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.NetPath.Networks": {
      "description": "Contains BGP information about the nodes and endpoints discovered during probing. This includes the autonomous system the node belongs to, the network address block, and the contact information associated with it.",
      "type": "object",
      "properties": {
        "CidrBlockFrom": {
          "type": "string"
        },
        "CidrBlockTo": {
          "type": "string"
        },
        "CidrBlockPrefix": {
          "type": "string"
        },
        "CidrBlockLength": {
          "type": "number"
        },
        "OrganizationName": {
          "type": "string"
        },
        "AbusePocs": {
          "type": "string"
        },
        "OriginAs": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.NPM.CustomPollerAssignmentOnNode": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "CustomPollerAssignmentID": {
          "format": "uuid",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "AssignmentName": {
          "type": "string"
        },
        "CustomPollerID": {
          "format": "uuid",
          "type": "string"
        },
        "InterfaceID": {
          "type": "number"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "CustomPollerDescription": {
          "type": "string"
        },
        "CustomPollerOid": {
          "type": "string"
        },
        "CurrentValue": {
          "type": "string"
        },
        "ID": {
          "type": "number"
        },
        "CustomPollerMIB": {
          "type": "string"
        },
        "CustomPollerName": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.Orion.NPM.CustomPollerAssignmentOnInterface": {
      "type": "object",
      "properties": {
        "CustomPollerAssignmentID": {
          "format": "uuid",
          "type": "string"
        },
        "InterfaceID": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "AssignmentName": {
          "type": "string"
        },
        "CustomPollerID": {
          "format": "uuid",
          "type": "string"
        },
        "NodeID": {
          "type": "number"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "CustomPollerDescription": {
          "type": "string"
        },
        "CustomPollerOid": {
          "type": "string"
        },
        "CurrentValue": {
          "type": "string"
        },
        "ID": {
          "type": "number"
        },
        "CustomPollerMIB": {
          "type": "string"
        },
        "CustomPollerName": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.NPM.CustomPollerAssignmentOnNode": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "CustomPollerAssignmentID": {
          "format": "uuid",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "AssignmentName": {
          "type": "string"
        },
        "CustomPollerID": {
          "format": "uuid",
          "type": "string"
        },
        "InterfaceID": {
          "type": "number"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "CustomPollerDescription": {
          "type": "string"
        },
        "CustomPollerOid": {
          "type": "string"
        },
        "CurrentValue": {
          "type": "string"
        },
        "ID": {
          "type": "number"
        },
        "CustomPollerMIB": {
          "type": "string"
        },
        "CustomPollerName": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.NPM.CustomPollerAssignmentOnInterface": {
      "type": "object",
      "properties": {
        "CustomPollerAssignmentID": {
          "format": "uuid",
          "type": "string"
        },
        "InterfaceID": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "AssignmentName": {
          "type": "string"
        },
        "CustomPollerID": {
          "format": "uuid",
          "type": "string"
        },
        "NodeID": {
          "type": "number"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "CustomPollerDescription": {
          "type": "string"
        },
        "CustomPollerOid": {
          "type": "string"
        },
        "CurrentValue": {
          "type": "string"
        },
        "ID": {
          "type": "number"
        },
        "CustomPollerMIB": {
          "type": "string"
        },
        "CustomPollerName": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.Orion.OLM.MessageSources": {
      "type": "object",
      "properties": {
        "MessageSourceID": {
          "type": "number"
        },
        "NodeID": {
          "type": "number"
        },
        "EngineID": {
          "type": "number"
        },
        "Caption": {
          "type": "string"
        },
        "IPAddress": {
          "type": "string"
        },
        "MachineType": {
          "type": "string"
        },
        "Vendor": {
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.OLM.LogProfile": {
      "type": "object",
      "properties": {
        "LogProfileID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Filepath": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.Orion.OLM.LogProfileAgentAssignment": {
      "type": "object",
      "properties": {
        "LogProfileID": {
          "type": "number"
        },
        "AgentId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.OLM.HealthIssues": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "NodeID": {
          "type": "number"
        },
        "LogProfileID": {
          "type": "number"
        },
        "MessageKey": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "Severity": {
          "type": "string"
        },
        "Priority": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.OLM.MessageSources": {
      "description": "\nMessage sources are IP addresses from which Log Viewer received a message or event.\nThey can be licensed, unlicensed, unmonitored message sources and so on.\n\nMessage sources can be duplicated for various reasons: \n * message sources per engine,\n * dynamically assigned IP addresses, \n * ...\n\nIf there is more message sources with the same NodeID, they still count as one Orion node, see Orion.OLM.Nodes entity.\n    ",
      "type": "object",
      "properties": {
        "MessageSourceID": {
          "description": "Identifier of message source.",
          "type": "number"
        },
        "NodeID": {
          "description": "Identifier of mapped Orion node. Can be empty if message source was not recognized. Such nodes are treated as Unmonitored.",
          "type": "number"
        },
        "EngineID": {
          "description": "Identifier of an engine on which the message was received.",
          "type": "number"
        },
        "Caption": {
          "description": "Caption of mapped node copied from node.",
          "type": "string"
        },
        "IPAddress": {
          "description": "Primary IP address of mapped node.",
          "type": "string"
        },
        "MachineType": {
          "description": "Machine type of mapped node copied from node.",
          "type": "string"
        },
        "Vendor": {
          "description": "Vendor of mapped node copied from node.",
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "description": "Date and time when first message was recevied from this IP address.",
          "type": "string"
        },
        "Status": {
          "description": "License status of the message source.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.OLM.LogProfile": {
      "description": "Profiles used for configuring log file collection.",
      "type": "object",
      "properties": {
        "LogProfileID": {
          "description": "Identifier of log profile.",
          "type": "number"
        },
        "Name": {
          "description": "Name of log profile.",
          "type": "string"
        },
        "Description": {
          "description": "Description of log profile.",
          "type": "string"
        },
        "Filepath": {
          "description": "Filepath or mask to specify monitored files.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.OLM.LogProfileAgentAssignment": {
      "description": "Relation between log profiles and agents.",
      "type": "object",
      "properties": {
        "LogProfileID": {
          "description": "Identifier of log profile.",
          "type": "number"
        },
        "AgentId": {
          "description": "Identifier of agent.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.OLM.HealthIssues": {
      "description": "Stores health information related to Log node, agent assigned to node and Log profile on that node.",
      "type": "object",
      "properties": {
        "ID": {
          "description": "Identifier of message on agent and profile.",
          "type": "number"
        },
        "NodeID": {
          "description": "Identifier of node the health info relates to.",
          "type": "number"
        },
        "LogProfileID": {
          "description": "Identifier of log profile the health info relates to.",
          "type": "number"
        },
        "MessageKey": {
          "description": "Identifier of the health message.",
          "type": "string"
        },
        "Message": {
          "description": "Health message content.",
          "type": "string"
        },
        "Severity": {
          "description": "General categorization of the message based on level of importance (examples: warn, error).",
          "type": "string"
        },
        "Priority": {
          "description": "The urgency of the message (greater number means more urgent).",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.AlertStatus": {
      "type": "object",
      "properties": {
        "AlertDefID": {
          "format": "uuid",
          "type": "string"
        },
        "ActiveObject": {
          "type": "string"
        },
        "ObjectType": {
          "type": "string"
        },
        "State": {
          "type": "number"
        },
        "WorkingState": {
          "type": "number"
        },
        "ObjectName": {
          "type": "string"
        },
        "AlertMessage": {
          "type": "string"
        },
        "TriggerTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "TriggerTimeOffset": {
          "type": "number"
        },
        "TriggerCount": {
          "type": "number"
        },
        "ResetTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "Acknowledged": {
          "type": "number"
        },
        "AcknowledgedBy": {
          "type": "string"
        },
        "AcknowledgedTime": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "AlertNotes": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "AlertObjectID": {
          "type": "number"
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.AlertConfigurations": {
      "type": "object",
      "properties": {
        "AlertID": {
          "type": "number"
        },
        "AlertMessage": {
          "type": "string"
        },
        "AlertRefID": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ObjectType": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "Frequency": {
          "type": "number"
        },
        "Trigger": {
          "type": "string"
        },
        "Reset": {
          "type": "string"
        },
        "Severity": {
          "type": "number"
        },
        "NotifyEnabled": {
          "type": "boolean"
        },
        "NotificationSettings": {
          "type": "string"
        },
        "LastEdit": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "Category": {
          "type": "string"
        },
        "Canned": {
          "type": "boolean"
        },
        "LicenseFeatureName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.Orion.AlertDefinitions": {
      "type": "object",
      "properties": {
        "AlertDefID": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "StartTime": {
          "format": "date-time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "type": "string"
        },
        "DOW": {
          "type": "string"
        },
        "TriggerQuery": {
          "type": "string"
        },
        "TriggerQueryDesign": {
          "type": "string"
        },
        "ResetQuery": {
          "type": "string"
        },
        "ResetQueryDesign": {
          "type": "string"
        },
        "SuppressionQuery": {
          "type": "string"
        },
        "SuppressionQueryDesign": {
          "type": "string"
        },
        "TriggerSustained": {
          "type": "number"
        },
        "ResetSustained": {
          "type": "number"
        },
        "LastExecuteTime": {
          "format": "date-time",
          "type": "string"
        },
        "ExecuteInterval": {
          "type": "number"
        },
        "BlockUntil": {
          "format": "date-time",
          "type": "string"
        },
        "ResponseTime": {
          "type": "number"
        },
        "LastErrorTime": {
          "format": "date-time",
          "type": "string"
        },
        "LastError": {
          "type": "string"
        },
        "ObjectType": {
          "type": "string"
        },
        "Reverted": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Actions": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "number"
        },
        "ActionTypeID": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "SortOrder": {
          "type": "number"
        },
        "Approved": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.Orion.ActionsProperties": {
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "number"
        },
        "PropertyName": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.ActionAssignmentProperties": {
      "type": "object",
      "properties": {
        "ActionAssignmentPropertyID": {
          "type": "number"
        },
        "ActionAssignmentID": {
          "type": "number"
        },
        "PropertyName": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.ActionsAssignments": {
      "type": "object",
      "properties": {
        "ActionAssignmentID": {
          "type": "number"
        },
        "ActionID": {
          "type": "number"
        },
        "ParentID": {
          "type": "number"
        },
        "EnvironmentType": {
          "type": "string"
        },
        "CategoryType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.ActionSchedules": {
      "type": "object",
      "properties": {
        "FrequencyID": {
          "type": "number"
        },
        "ActionID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.AlertSchedules": {
      "type": "object",
      "properties": {
        "FrequencyID": {
          "type": "number"
        },
        "AlertConfigurationID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AlertStatus": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "AlertDefID": {
          "format": "uuid",
          "type": "string"
        },
        "ActiveObject": {
          "type": "string"
        },
        "ObjectType": {
          "type": "string"
        },
        "State": {
          "type": "number"
        },
        "WorkingState": {
          "type": "number"
        },
        "ObjectName": {
          "type": "string"
        },
        "AlertMessage": {
          "type": "string"
        },
        "TriggerTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "TriggerTimeOffset": {
          "type": "number"
        },
        "TriggerCount": {
          "type": "number"
        },
        "ResetTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "Acknowledged": {
          "type": "number"
        },
        "AcknowledgedBy": {
          "type": "string"
        },
        "AcknowledgedTime": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "AlertNotes": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "AlertObjectID": {
          "type": "number"
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AlertConfigurations": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "AlertID": {
          "type": "number"
        },
        "AlertMessage": {
          "type": "string"
        },
        "AlertRefID": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ObjectType": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "Frequency": {
          "type": "number"
        },
        "Trigger": {
          "type": "string"
        },
        "Reset": {
          "type": "string"
        },
        "Severity": {
          "type": "number"
        },
        "NotifyEnabled": {
          "type": "boolean"
        },
        "NotificationSettings": {
          "type": "string"
        },
        "LastEdit": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "Category": {
          "type": "string"
        },
        "Canned": {
          "type": "boolean"
        },
        "LicenseFeatureName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.AlertDefinitions": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "AlertDefID": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "StartTime": {
          "format": "date-time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "type": "string"
        },
        "DOW": {
          "type": "string"
        },
        "TriggerQuery": {
          "type": "string"
        },
        "TriggerQueryDesign": {
          "type": "string"
        },
        "ResetQuery": {
          "type": "string"
        },
        "ResetQueryDesign": {
          "type": "string"
        },
        "SuppressionQuery": {
          "type": "string"
        },
        "SuppressionQueryDesign": {
          "type": "string"
        },
        "TriggerSustained": {
          "type": "number"
        },
        "ResetSustained": {
          "type": "number"
        },
        "LastExecuteTime": {
          "format": "date-time",
          "type": "string"
        },
        "ExecuteInterval": {
          "type": "number"
        },
        "BlockUntil": {
          "format": "date-time",
          "type": "string"
        },
        "ResponseTime": {
          "type": "number"
        },
        "LastErrorTime": {
          "format": "date-time",
          "type": "string"
        },
        "LastError": {
          "type": "string"
        },
        "ObjectType": {
          "type": "string"
        },
        "Reverted": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.Actions": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "number"
        },
        "ActionTypeID": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "SortOrder": {
          "type": "number"
        },
        "Approved": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.ActionsProperties": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "ActionID": {
          "type": "number"
        },
        "PropertyName": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.ActionAssignmentProperties": {
      "description": "Action properties per assignment to store values for shared actions",
      "type": "object",
      "properties": {
        "ActionAssignmentPropertyID": {
          "type": "number"
        },
        "ActionAssignmentID": {
          "type": "number"
        },
        "PropertyName": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.ActionsAssignments": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "ActionAssignmentID": {
          "type": "number"
        },
        "ActionID": {
          "type": "number"
        },
        "ParentID": {
          "type": "number"
        },
        "EnvironmentType": {
          "type": "string"
        },
        "CategoryType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.ActionSchedules": {
      "description": "Cross-reference entity between Frequencies and Actions",
      "type": "object",
      "properties": {
        "FrequencyID": {
          "type": "number"
        },
        "ActionID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.AlertSchedules": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "FrequencyID": {
          "type": "number"
        },
        "AlertConfigurationID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.APIPoller.ApiPoller": {
      "description": "\n      This entity presents Api Poller properties\n    ",
      "type": "object",
      "properties": {
        "ID": {
          "description": "The unique integer representation of the Api Poller",
          "type": "number"
        },
        "Name": {
          "description": "The string value representing name of the Api Poller",
          "type": "string"
        },
        "DisplayName": {
          "description": "The string value representing displayed name of the Api Poller",
          "type": "string"
        },
        "TemplateId": {
          "description": "The unique integer representation of the Api Poller template",
          "type": "number"
        },
        "LastPollTimestamp": {
          "format": "date-time",
          "description": "The date and time of last poll of the Api Poller",
          "type": "string"
        },
        "RelatedEntityId": {
          "description": "The unique integer representing the related entity",
          "type": "number"
        },
        "RelatedEntityType": {
          "description": "The string value representing the related entity type",
          "type": "string"
        },
        "DetailsUrl": {
          "description": "The string value representing details url of the Api Poller",
          "type": "string"
        },
        "Status": {
          "description": "The integer representing status of the Api Poller",
          "type": "number"
        },
        "StatusDescription": {
          "description": "The string value representing description of status of the Api Poller",
          "type": "string"
        },
        "StatusLED": {
          "description": "The string value representing status LED of the Api Poller",
          "type": "string"
        },
        "Image": {
          "description": "The string value representing image of the Api Poller",
          "type": "string"
        },
        "Description": {
          "description": "The string value representing description of the Api Poller",
          "type": "string"
        },
        "ModernIcon": {
          "description": "Nova icon name for the entity.",
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        }
      }
    },
    "Orion.APIPoller.PollingConfiguration": {
      "description": "\n      This entity presents Api Poller Polling Configuraton properties\n    ",
      "type": "object",
      "properties": {
        "ApiPollerId": {
          "description": "The unique integer representation of the Api Poller",
          "type": "number"
        },
        "PollingInterval": {
          "description": "The polling interval time in minutes between two consecutive polls",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.APIPoller.RequestDetails": {
      "description": "\n      This entity presents request details used by Api Poller\n    ",
      "type": "object",
      "properties": {
        "ID": {
          "description": "The unique integer representation of the request details",
          "type": "number"
        },
        "ApiPollerId": {
          "description": "The unique integer representation of the Api Poller",
          "type": "number"
        },
        "Url": {
          "description": "The string value representing url of the request details",
          "type": "string"
        },
        "Body": {
          "description": "The string value representing body of the request details",
          "type": "string"
        },
        "HttpVerb": {
          "description": "The string value representing http verb of the request details",
          "type": "string"
        },
        "CredentialsId": {
          "description": "The unique integer representation of the credentails",
          "type": "number"
        },
        "CredentialsType": {
          "description": "The string value representing the credentails type",
          "type": "string"
        },
        "VerifySslCertificate": {
          "description": "The boolean value representing the verification of ssl certificate",
          "type": "boolean"
        },
        "UseProxy": {
          "description": "The boolean value representing the usage of proxy",
          "type": "boolean"
        },
        "RequestDetailsOrder": {
          "description": "The integer value representing the order of the request details",
          "type": "number"
        },
        "RequestTimeout": {
          "description": "The integer value representing the request timeout",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.APIPoller.RequestHeader": {
      "description": "\n      This entity presents request header used by Api Poller\n    ",
      "type": "object",
      "properties": {
        "ID": {
          "description": "The unique integer representation of the request header",
          "type": "number"
        },
        "Name": {
          "description": "The string value representing name of the request header",
          "type": "string"
        },
        "RequestDetailsId": {
          "description": "The unique integer representation of the request details",
          "type": "number"
        },
        "Value": {
          "description": "The string value representing value of the request header",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.APIPoller.RequestVariable": {
      "description": "\n      This entity presents request variable used by Api Poller\n    ",
      "type": "object",
      "properties": {
        "ID": {
          "description": "The unique integer representation of the request variable",
          "type": "number"
        },
        "RequestDetailsId": {
          "description": "The unique integer representation of the request details",
          "type": "number"
        },
        "Path": {
          "description": "The string value representing path of the request variable ",
          "type": "string"
        },
        "DisplayName": {
          "description": "The string value representing display name of the request variable",
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.APIPoller.ValueToMonitor": {
      "description": "\n      This entity presents value to monitor details used by Api Poller\n    ",
      "type": "object",
      "properties": {
        "ID": {
          "description": "The unique integer representation of the value to monitor",
          "type": "number"
        },
        "RequestDetailsId": {
          "description": "The unique integer representation of the request details",
          "type": "number"
        },
        "DisplayName": {
          "description": "The string value representing displayed name of the value to monitor",
          "type": "string"
        },
        "Path": {
          "description": "The string value representing path of the value to monitor",
          "type": "string"
        },
        "WarningThreshold": {
          "description": "The double value representing warning threshold of the value to monitor",
          "type": "number"
        },
        "CriticalThreshold": {
          "description": "The double value representing critical threshold of the value to monitor",
          "type": "number"
        },
        "ThresholdRule": {
          "description": "The string value representing threshold rule of the value to monitor",
          "type": "string"
        },
        "Type": {
          "description": "The string value representing type of the value to monitor",
          "type": "string"
        },
        "StringToNumberTransformationOtherValues": {
          "description": "The double value representing string to number transformation of the value to monitor",
          "type": "number"
        },
        "DetailsUrl": {
          "description": "The string value representing details url of the value to monitor",
          "type": "string"
        },
        "Status": {
          "description": "The integer value representing status of the value to monitor",
          "type": "number"
        },
        "Metric": {
          "description": "The double value representing metric of the value to monitor",
          "type": "number"
        },
        "StatusDescription": {
          "description": "The string value representing status description of the value to monitor",
          "type": "string"
        },
        "StatusLED": {
          "description": "The string value representing status LED of the value to monitor",
          "type": "string"
        },
        "Image": {
          "description": "The string value representing image of the value to monitor",
          "type": "string"
        },
        "ApiPollerId": {
          "description": "The unique integer representation of the Api Poller",
          "type": "number"
        },
        "Description": {
          "description": "The string value representing description of the value to monitor",
          "type": "string"
        },
        "ModernIcon": {
          "description": "Nova icon name for the entity.",
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        }
      }
    },
    "Orion.APIPoller.StringToNumberTransformationRule": {
      "description": "\n      This entity presents string to number transformation rule used by Api Poller\n    ",
      "type": "object",
      "properties": {
        "ID": {
          "description": "The unique integer representation of the string to number transformation rule",
          "type": "number"
        },
        "Text": {
          "description": "The string value representing text of the string to number transformation rule",
          "type": "string"
        },
        "Number": {
          "description": "The integer value representing number of the string to number transformation rule",
          "type": "number"
        },
        "ValueToMonitorId": {
          "description": "The unique integer value representing value to monitor",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.APIPoller.Templates": {
      "description": "\n      This entity presents template details used by API Poller\n    ",
      "type": "object",
      "properties": {
        "ID": {
          "description": "The unique integer representation of the template",
          "type": "number"
        },
        "Guid": {
          "format": "uuid",
          "description": "The unique GUID of the template",
          "type": "string"
        },
        "Name": {
          "description": "The string value representing unique name of the template",
          "type": "string"
        },
        "Version": {
          "description": "The integer value representing version number of the template",
          "type": "number"
        },
        "DisplayName": {
          "description": "The string value representing the displayed name of the template",
          "type": "string"
        },
        "Description": {
          "description": "The string value representing description of the template",
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "description": "The date and time when template was created",
          "type": "string"
        },
        "Updated": {
          "format": "date-time",
          "description": "The date and time when template was last modified",
          "type": "string"
        },
        "TemplateData": {
          "description": "The xml data representing content of the template",
          "type": "string"
        },
        "RequestsCount": {
          "description": "The integer value representing the number of the requests in the template",
          "type": "number"
        },
        "MetricsCount": {
          "description": "The integer value representing the number of the metrics in the template",
          "type": "number"
        },
        "IsCustom": {
          "description": "The bit value representing whether the template is customly created",
          "type": "boolean"
        }
      }
    },
    "Local.Orion.DiscoveryLogs": {
      "type": "object",
      "properties": {
        "DiscoveryLogID": {
          "type": "number"
        },
        "ProfileID": {
          "type": "number"
        },
        "FinishedTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "AutoImport": {
          "type": "boolean"
        },
        "Result": {
          "type": "number"
        },
        "ResultDescription": {
          "type": "string"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "BatchID": {
          "format": "uuid",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.DiscoveryLogs": {
      "type": "object",
      "properties": {
        "DiscoveryLogID": {
          "type": "number"
        },
        "ProfileID": {
          "type": "number"
        },
        "FinishedTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "AutoImport": {
          "type": "boolean"
        },
        "Result": {
          "type": "number"
        },
        "ResultDescription": {
          "type": "string"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "BatchID": {
          "format": "uuid",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.PasswordHistory": {
      "description": "This entity represents password history for user accounts",
      "type": "object",
      "properties": {
        "PasswordHistoryID": {
          "type": "number"
        },
        "AccountID": {
          "type": "string"
        },
        "PasswordHash": {
          "type": "string"
        },
        "PasswordSalt": {
          "type": "string"
        },
        "PasswordProtocol": {
          "type": "number"
        },
        "TimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Dependencies": {
      "type": "object",
      "properties": {
        "DependencyId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "ParentUri": {
          "type": "string"
        },
        "ChildUri": {
          "type": "string"
        },
        "LastUpdateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "AutoManaged": {
          "type": "boolean"
        },
        "IncludeInStatusCalculation": {
          "type": "boolean"
        },
        "EngineID": {
          "type": "number"
        },
        "Category": {
          "type": "number"
        },
        "ParentEntityType": {
          "type": "string"
        },
        "ParentNetObjectID": {
          "type": "number"
        },
        "ChildEntityType": {
          "type": "string"
        },
        "ChildNetObjectID": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "Owner": {
          "type": "string"
        },
        "FoundAsAutoManaged": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.Orion.DeletedAutoDependencies": {
      "type": "object",
      "properties": {
        "DependencyId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "ParentUri": {
          "type": "string"
        },
        "ChildUri": {
          "type": "string"
        },
        "LastUpdateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "AutoManaged": {
          "type": "boolean"
        },
        "IncludeInStatusCalculation": {
          "type": "boolean"
        },
        "EngineID": {
          "type": "number"
        },
        "Category": {
          "type": "number"
        },
        "ParentEntityType": {
          "type": "string"
        },
        "ParentNetObjectID": {
          "type": "number"
        },
        "ChildEntityType": {
          "type": "string"
        },
        "ChildNetObjectID": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "Owner": {
          "type": "string"
        },
        "FoundAsAutoManaged": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.Engines": {
      "description": "This entity contains main poller and all additional pollers list.",
      "type": "object",
      "properties": {
        "EngineID": {
          "type": "number"
        },
        "ServerName": {
          "type": "string"
        },
        "IP": {
          "type": "string"
        },
        "ServerType": {
          "type": "string"
        },
        "PrimaryServers": {
          "type": "string"
        },
        "KeepAlive": {
          "format": "date-time",
          "type": "string"
        },
        "FailOverActive": {
          "format": "date-time",
          "type": "string"
        },
        "SysLogKeepAlive": {
          "format": "date-time",
          "type": "string"
        },
        "TrapsKeepAlive": {
          "format": "date-time",
          "type": "string"
        },
        "Restart": {
          "format": "date-time",
          "type": "string"
        },
        "Elements": {
          "type": "number"
        },
        "Nodes": {
          "type": "number"
        },
        "Interfaces": {
          "type": "number"
        },
        "Volumes": {
          "type": "number"
        },
        "Pollers": {
          "type": "number"
        },
        "MaxPollsPerSecond": {
          "type": "number"
        },
        "MaxStatPollsPerSecond": {
          "type": "number"
        },
        "NodePollInterval": {
          "type": "number"
        },
        "InterfacePollInterval": {
          "type": "number"
        },
        "VolumePollInterval": {
          "type": "number"
        },
        "NodeStatPollInterval": {
          "type": "number"
        },
        "InterfaceStatPollInterval": {
          "type": "number"
        },
        "VolumeStatPollInterval": {
          "type": "number"
        },
        "LicensedElements": {
          "type": "number"
        },
        "SerialNumber": {
          "type": "string"
        },
        "LicenseKey": {
          "type": "string"
        },
        "StartTime": {
          "format": "date-time",
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "CustomerID": {
          "type": "string"
        },
        "Evaluation": {
          "type": "string"
        },
        "EvalDaysLeft": {
          "type": "number"
        },
        "PackageName": {
          "type": "string"
        },
        "EngineVersion": {
          "type": "string"
        },
        "WindowsVersion": {
          "type": "string"
        },
        "ServicePack": {
          "type": "string"
        },
        "AvgCPUUtil": {
          "type": "number"
        },
        "MemoryUtil": {
          "type": "number"
        },
        "PollingCompletion": {
          "type": "number"
        },
        "StatPollInterval": {
          "type": "number"
        },
        "BusinessLayerPort": {
          "type": "number"
        },
        "FIPSModeEnabled": {
          "type": "boolean"
        },
        "MinutesSinceKeepAlive": {
          "type": "number"
        },
        "MinutesSinceFailOverActive": {
          "type": "number"
        },
        "MinutesSinceSysLogKeepAlive": {
          "type": "number"
        },
        "MinutesSinceTrapsKeepAlive": {
          "type": "number"
        },
        "MinutesSinceRestart": {
          "type": "number"
        },
        "MinutesSinceStartTime": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "MasterEngineID": {
          "type": "number"
        },
        "IsFree": {
          "type": "boolean"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.EngineProperties": {
      "description": "Property and their values for each engine.",
      "type": "object",
      "properties": {
        "EngineID": {
          "type": "number"
        },
        "PropertyName": {
          "type": "string"
        },
        "PropertyType": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Events": {
      "type": "object",
      "properties": {
        "EventID": {
          "type": "number"
        },
        "EventTime": {
          "format": "date-time",
          "type": "string"
        },
        "NetObjectValue": {
          "type": "string"
        },
        "EngineID": {
          "type": "number"
        },
        "EventType": {
          "type": "number"
        },
        "Message": {
          "type": "string"
        },
        "Acknowledged": {
          "type": "boolean"
        },
        "TimeStamp": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.MapStudioFiles": {
      "type": "object",
      "properties": {
        "FileId": {
          "format": "uuid",
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "FileData": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "Timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "Owner": {
          "type": "string"
        },
        "UpdateUser": {
          "type": "string"
        },
        "IsDeleted": {
          "type": "boolean"
        },
        "LockUser": {
          "type": "string"
        },
        "FileType": {
          "type": "number"
        },
        "LockDate": {
          "format": "date-time",
          "type": "string"
        },
        "ComputerName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.NodeNotes": {
      "type": "object",
      "properties": {
        "NodeNoteID": {
          "type": "number"
        },
        "Note": {
          "type": "string"
        },
        "NodeID": {
          "type": "number"
        },
        "AccountID": {
          "type": "string"
        },
        "TimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Nodes": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "ObjectSubType": {
          "type": "string"
        },
        "IPAddress": {
          "type": "string"
        },
        "IPAddressType": {
          "type": "string"
        },
        "DynamicIP": {
          "type": "boolean"
        },
        "Caption": {
          "type": "string"
        },
        "NodeDescription": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DNS": {
          "type": "string"
        },
        "SysName": {
          "type": "string"
        },
        "Vendor": {
          "type": "string"
        },
        "SysObjectID": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "Contact": {
          "type": "string"
        },
        "VendorIcon": {
          "type": "string"
        },
        "Icon": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "PolledStatus": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "NodeStatusRootCause": {
          "type": "string"
        },
        "NodeStatusRootCauseWithLinks": {
          "type": "string"
        },
        "CustomStatus": {
          "type": "boolean"
        },
        "IOSImage": {
          "type": "string"
        },
        "IOSVersion": {
          "type": "string"
        },
        "GroupStatus": {
          "type": "string"
        },
        "StatusIcon": {
          "type": "string"
        },
        "LastBoot": {
          "format": "date-time",
          "type": "string"
        },
        "SystemUpTime": {
          "type": "number"
        },
        "ResponseTime": {
          "type": "number"
        },
        "PercentLoss": {
          "type": "number"
        },
        "AvgResponseTime": {
          "type": "number"
        },
        "MinResponseTime": {
          "type": "number"
        },
        "MaxResponseTime": {
          "type": "number"
        },
        "CPUCount": {
          "type": "number"
        },
        "CPULoad": {
          "type": "number"
        },
        "MemoryUsed": {
          "type": "number"
        },
        "LoadAverage1": {
          "type": "number"
        },
        "LoadAverage5": {
          "type": "number"
        },
        "LoadAverage15": {
          "type": "number"
        },
        "MemoryAvailable": {
          "type": "number"
        },
        "PercentMemoryUsed": {
          "type": "number"
        },
        "PercentMemoryAvailable": {
          "type": "number"
        },
        "LastSync": {
          "format": "date-time",
          "type": "string"
        },
        "LastSystemUpTimePollUtc": {
          "format": "date-time",
          "type": "string"
        },
        "MachineType": {
          "type": "string"
        },
        "IsServer": {
          "type": "boolean"
        },
        "Severity": {
          "type": "number"
        },
        "UiSeverity": {
          "type": "number"
        },
        "ChildStatus": {
          "type": "number"
        },
        "Allow64BitCounters": {
          "type": "boolean"
        },
        "AgentPort": {
          "type": "string"
        },
        "TotalMemory": {
          "type": "number"
        },
        "CMTS": {
          "$ref": "#/definitions/System.Char"
        },
        "CustomPollerLastStatisticsPoll": {
          "format": "date-time",
          "type": "string"
        },
        "CustomPollerLastStatisticsPollSuccess": {
          "format": "date-time",
          "type": "string"
        },
        "SNMPVersion": {
          "type": "number"
        },
        "PollInterval": {
          "type": "number"
        },
        "EngineID": {
          "type": "number"
        },
        "RediscoveryInterval": {
          "type": "number"
        },
        "NextPoll": {
          "format": "date-time",
          "type": "string"
        },
        "NextRediscovery": {
          "format": "date-time",
          "type": "string"
        },
        "StatCollection": {
          "type": "number"
        },
        "External": {
          "type": "boolean"
        },
        "Community": {
          "type": "string"
        },
        "RWCommunity": {
          "type": "string"
        },
        "IP": {
          "type": "string"
        },
        "IP_Address": {
          "type": "string"
        },
        "IPAddressGUID": {
          "format": "uuid",
          "type": "string"
        },
        "NodeName": {
          "type": "string"
        },
        "BlockUntil": {
          "format": "date-time",
          "type": "string"
        },
        "BufferNoMemThisHour": {
          "type": "number"
        },
        "BufferNoMemToday": {
          "type": "number"
        },
        "BufferSmMissThisHour": {
          "type": "number"
        },
        "BufferSmMissToday": {
          "type": "number"
        },
        "BufferMdMissThisHour": {
          "type": "number"
        },
        "BufferMdMissToday": {
          "type": "number"
        },
        "BufferBgMissThisHour": {
          "type": "number"
        },
        "BufferBgMissToday": {
          "type": "number"
        },
        "BufferLgMissThisHour": {
          "type": "number"
        },
        "BufferLgMissToday": {
          "type": "number"
        },
        "BufferHgMissThisHour": {
          "type": "number"
        },
        "BufferHgMissToday": {
          "type": "number"
        },
        "OrionIdPrefix": {
          "type": "string"
        },
        "OrionIdColumn": {
          "type": "string"
        },
        "SkippedPollingCycles": {
          "type": "number"
        },
        "MinutesSinceLastSync": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Category": {
          "type": "number"
        },
        "IsOrionServer": {
          "type": "boolean"
        },
        "ModernIcon": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Pollers": {
      "type": "object",
      "properties": {
        "PollerID": {
          "type": "number"
        },
        "PollerType": {
          "type": "string"
        },
        "NetObject": {
          "type": "string"
        },
        "NetObjectType": {
          "type": "string"
        },
        "NetObjectID": {
          "type": "number"
        },
        "Enabled": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Settings": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "SettingID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Units": {
          "type": "string"
        },
        "Minimum": {
          "type": "number"
        },
        "Maximum": {
          "type": "number"
        },
        "CurrentValue": {
          "type": "number"
        },
        "DefaultValue": {
          "type": "number"
        },
        "Hint": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.Orion.ResourceProperties": {
      "type": "object",
      "properties": {
        "ResourceID": {
          "type": "number"
        },
        "PropertyName": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Resources": {
      "type": "object",
      "properties": {
        "ResourceID": {
          "type": "number"
        },
        "ViewID": {
          "type": "number"
        },
        "ViewColumn": {
          "type": "number"
        },
        "Position": {
          "type": "number"
        },
        "ResourceName": {
          "type": "string"
        },
        "ResourceFile": {
          "type": "string"
        },
        "ResourceTitle": {
          "type": "string"
        },
        "ResourceSubTitle": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Views": {
      "description": "Orion's UI Views",
      "type": "object",
      "properties": {
        "ViewID": {
          "type": "number"
        },
        "ViewKey": {
          "type": "string"
        },
        "ViewTitle": {
          "type": "string"
        },
        "ViewGroupName": {
          "type": "string"
        },
        "ViewGroup": {
          "type": "number"
        },
        "ViewType": {
          "type": "string"
        },
        "ViewGroupPosition": {
          "type": "number"
        },
        "ViewIcon": {
          "type": "string"
        },
        "Columns": {
          "type": "number"
        },
        "Column1Width": {
          "type": "number"
        },
        "Column2Width": {
          "type": "number"
        },
        "Column3Width": {
          "type": "number"
        },
        "Column4Width": {
          "type": "number"
        },
        "Column5Width": {
          "type": "number"
        },
        "Column6Width": {
          "type": "number"
        },
        "System": {
          "type": "string"
        },
        "Customizable": {
          "type": "string"
        },
        "LimitationID": {
          "type": "number"
        },
        "NOCView": {
          "type": "boolean"
        },
        "NOCViewRotationInterval": {
          "type": "number"
        },
        "Feature": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Volumes": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "VolumeID": {
          "type": "number"
        },
        "Icon": {
          "type": "string"
        },
        "Index": {
          "type": "number"
        },
        "Caption": {
          "type": "string"
        },
        "PollInterval": {
          "type": "number"
        },
        "StatCollection": {
          "type": "number"
        },
        "RediscoveryInterval": {
          "type": "number"
        },
        "StatusIcon": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Responding": {
          "$ref": "#/definitions/System.Char"
        },
        "FullName": {
          "type": "string"
        },
        "LastSync": {
          "format": "date-time",
          "type": "string"
        },
        "VolumePercentUsed": {
          "type": "number"
        },
        "VolumeAllocationFailuresThisHour": {
          "type": "number"
        },
        "VolumeIndex": {
          "type": "number"
        },
        "VolumeTypeID": {
          "type": "number"
        },
        "VolumeType": {
          "type": "string"
        },
        "VolumeDescription": {
          "type": "string"
        },
        "VolumeSize": {
          "type": "number"
        },
        "VolumeSpaceUsed": {
          "type": "number"
        },
        "VolumeAllocationFailuresToday": {
          "type": "number"
        },
        "VolumeResponding": {
          "$ref": "#/definitions/System.Char"
        },
        "VolumeSpaceAvailable": {
          "type": "number"
        },
        "VolumeTypeIcon": {
          "type": "string"
        },
        "OrionIdPrefix": {
          "type": "string"
        },
        "OrionIdColumn": {
          "type": "string"
        },
        "DiskQueueLength": {
          "type": "number"
        },
        "DiskTransfer": {
          "type": "number"
        },
        "DiskReads": {
          "type": "number"
        },
        "DiskWrites": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "TotalDiskIOPS": {
          "type": "number"
        },
        "VolumePercentAvailable": {
          "type": "number"
        },
        "MinutesSinceLastSync": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "SkippedPollingCycles": {
          "type": "number"
        },
        "VolumeSpaceAvailableExp": {
          "type": "number"
        },
        "NextPoll": {
          "format": "date-time",
          "type": "string"
        },
        "NextRediscovery": {
          "format": "date-time",
          "type": "string"
        },
        "DeviceId": {
          "type": "string"
        },
        "DiskSerialNumber": {
          "type": "string"
        },
        "InterfaceType": {
          "type": "string"
        },
        "SCSITargetId": {
          "type": "number"
        },
        "SCSILunId": {
          "type": "number"
        },
        "SCSIPortId": {
          "type": "number"
        },
        "SCSIControllerId": {
          "type": "string"
        },
        "SCSIPortOffset": {
          "type": "number"
        },
        "ModernIcon": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.WebUserSettings": {
      "description": "There are important setting which belongs to Web Console and some user.",
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "SettingName": {
          "type": "string"
        },
        "SettingValue": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.UserSettings": {
      "description": "There are important setting which belongs to orion user and they are store per orion site.",
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "SettingName": {
          "type": "string"
        },
        "SettingValue": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Environment": {
      "type": "object",
      "properties": {
        "MachineName": {
          "type": "string"
        },
        "OSVersion": {
          "type": "string"
        },
        "TimeZone": {
          "type": "string"
        },
        "SqlServer": {
          "type": "string"
        },
        "SqlDatabase": {
          "type": "string"
        },
        "SqlLogin": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.NodeSettings": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "SettingName": {
          "type": "string"
        },
        "SettingValue": {
          "type": "string"
        },
        "NodeSettingID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Credential": {
      "description": "Entity represents Orion Credential objects that are used in discovery and polling processes",
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CredentialType": {
          "type": "string"
        },
        "CredentialOwner": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.CredentialRelation": {
      "description": "Relation to Orion.Credential. Serve for reuse same credentials for different Entity type.",
      "type": "object",
      "properties": {
        "CredentialRelationID": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "EntityID": {
          "type": "number"
        },
        "EntityUri": {
          "type": "string"
        },
        "CredentialID": {
          "type": "number"
        },
        "Use": {
          "type": "string"
        },
        "ConnectionProfile": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.WorldMap.Point": {
      "type": "object",
      "properties": {
        "PointId": {
          "type": "number"
        },
        "Instance": {
          "type": "string"
        },
        "InstanceID": {
          "type": "string"
        },
        "Latitude": {
          "type": "number"
        },
        "Longitude": {
          "type": "number"
        },
        "AutoAdded": {
          "type": "boolean"
        },
        "StreetAddress": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.WorldMap.PointLabel": {
      "type": "object",
      "properties": {
        "LabelId": {
          "type": "number"
        },
        "Title": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.FavoriteProperties": {
      "description": "Selected favorite user properties entity ",
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "EntityName": {
          "type": "string"
        },
        "Property": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SMTPServers": {
      "type": "object",
      "properties": {
        "SMTPServerID": {
          "type": "number"
        },
        "BackupServerID": {
          "type": "number"
        },
        "Address": {
          "type": "string"
        },
        "Port": {
          "type": "number"
        },
        "CredentialID": {
          "type": "number"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "EnabledSSL": {
          "type": "boolean"
        },
        "SMTPEmailSendExecutionTimeout": {
          "type": "number"
        },
        "SMTPClient": {
          "type": "string"
        },
        "ExtendedSmtpOptions": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.NetObjectDowntime": {
      "type": "object",
      "properties": {
        "EntityId": {
          "type": "string"
        },
        "NodeId": {
          "type": "number"
        },
        "DateTimeFrom": {
          "format": "date-time",
          "type": "string"
        },
        "DateTimeUntil": {
          "format": "date-time",
          "type": "string"
        },
        "DateTimeUntilNow": {
          "format": "date-time",
          "type": "string"
        },
        "State": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "TotalDurationMin": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.FavoriteMacroVariables": {
      "description": "Favorite macro variables.",
      "type": "object",
      "properties": {
        "MacroVariableID": {
          "type": "string"
        },
        "PluginID": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.ForecastMetrics": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "SourceDataEntityName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UsePeakValues": {
          "type": "boolean"
        },
        "ThresholdType": {
          "type": "number"
        },
        "Icon": {
          "type": "string"
        },
        "WarningThresholdSettingID": {
          "type": "string"
        },
        "CriticalThresholdSettingID": {
          "type": "string"
        },
        "CapacityThresholdSettingID": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.ForecastCapacitySettings": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "type": "number"
        },
        "MetricId": {
          "type": "number"
        },
        "Enabled": {
          "type": "boolean"
        },
        "UsePeakValues": {
          "type": "boolean"
        },
        "WarningThreshold": {
          "type": "number"
        },
        "CriticalThreshold": {
          "type": "number"
        },
        "CapacityThreshold": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.MaintenancePlan": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "AccountID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Reason": {
          "type": "string"
        },
        "KeepPolling": {
          "type": "boolean"
        },
        "Favorite": {
          "type": "boolean"
        },
        "Enabled": {
          "type": "boolean"
        },
        "UnmanageDate": {
          "format": "date-time",
          "type": "string"
        },
        "RemanageDate": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.MaintenancePlanAssignment": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "EntityID": {
          "type": "number"
        },
        "EntityUri": {
          "type": "string"
        },
        "MaintenancePlanID": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Web.FavoriteResource": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "AccountID": {
          "type": "string"
        },
        "ResourcePath": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Web.ViewGroup": {
      "description": "Defines web site view group types",
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "DefaultTitle": {
          "type": "string"
        },
        "Tags": {
          "type": "string"
        },
        "SortOrder": {
          "type": "number"
        },
        "OrionFeatureName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Web.View": {
      "description": "Defines web site view types",
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "ParentID": {
          "type": "number"
        },
        "LimitationID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "DefaultTitle": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "TemplateUrl": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        },
        "Icon": {
          "type": "string"
        },
        "IsCustom": {
          "type": "boolean"
        },
        "OpenInNewWindow": {
          "type": "boolean"
        },
        "SortOrder": {
          "type": "number"
        },
        "FeatureDependencies": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Web.Resource": {
      "description": "Defines web site resource types",
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "Type": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Web.ResourceSetting": {
      "description": "Defines web site resource default configuration",
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "WebResourceID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Web.ResourceUserSetting": {
      "description": "Defines web site resource user configuration",
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "AccountID": {
          "type": "string"
        },
        "WebResourceID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.Web.UserWebView": {
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "WebViewID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Sites": {
      "description": "Represents Sites to be used by SWIS(f) to fetch data from.",
      "type": "object",
      "properties": {
        "SiteID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Host": {
          "type": "string"
        },
        "Website": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "IsLocal": {
          "type": "boolean"
        },
        "Tag": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.OrionServers": {
      "description": "Represents Orion servers (MPE, APE, AW).",
      "type": "object",
      "properties": {
        "OrionServerID": {
          "type": "number"
        },
        "ServerType": {
          "type": "string"
        },
        "HostName": {
          "type": "string"
        },
        "NodeID": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "AgentAutoDeploy": {
          "type": "boolean"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "SWAKeepAlive": {
          "format": "date-time",
          "type": "string"
        },
        "SWAVersion": {
          "type": "string"
        },
        "Details": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.IdentityProviders": {
      "description": "Defines settings of configured Single Sign-On identity providers.",
      "type": "object",
      "properties": {
        "IdentityProviderId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "IssuerEntityId": {
          "type": "string"
        },
        "IssuerServiceUrl": {
          "type": "string"
        },
        "IssuerCertificate": {
          "type": "string"
        },
        "TestKey": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Dependencies": {
      "description": "This entity contains dependencies defined by user and generated automatically",
      "type": "object",
      "properties": {
        "DependencyId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "ParentUri": {
          "type": "string"
        },
        "ChildUri": {
          "type": "string"
        },
        "LastUpdateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "AutoManaged": {
          "type": "boolean"
        },
        "IncludeInStatusCalculation": {
          "type": "boolean"
        },
        "EngineID": {
          "type": "number"
        },
        "Category": {
          "type": "number"
        },
        "ParentEntityType": {
          "type": "string"
        },
        "ParentNetObjectID": {
          "type": "number"
        },
        "ChildEntityType": {
          "type": "string"
        },
        "ChildNetObjectID": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "Owner": {
          "type": "string"
        },
        "FoundAsAutoManaged": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.DeletedAutoDependencies": {
      "description": "This entity contains Auto Dependencies ignored by user",
      "type": "object",
      "properties": {
        "DependencyId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "ParentUri": {
          "type": "string"
        },
        "ChildUri": {
          "type": "string"
        },
        "LastUpdateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "AutoManaged": {
          "type": "boolean"
        },
        "IncludeInStatusCalculation": {
          "type": "boolean"
        },
        "EngineID": {
          "type": "number"
        },
        "Category": {
          "type": "number"
        },
        "ParentEntityType": {
          "type": "string"
        },
        "ParentNetObjectID": {
          "type": "number"
        },
        "ChildEntityType": {
          "type": "string"
        },
        "ChildNetObjectID": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "Owner": {
          "type": "string"
        },
        "FoundAsAutoManaged": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.Events": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "EventID": {
          "type": "number"
        },
        "EventTime": {
          "format": "date-time",
          "type": "string"
        },
        "NetObjectValue": {
          "type": "string"
        },
        "EngineID": {
          "type": "number"
        },
        "EventType": {
          "type": "number"
        },
        "Message": {
          "type": "string"
        },
        "Acknowledged": {
          "type": "boolean"
        },
        "TimeStamp": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "NetworkNode": {
          "type": "number"
        },
        "NetObjectID": {
          "type": "number"
        },
        "NetObjectType": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.MapStudioFiles": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "FileId": {
          "format": "uuid",
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "FileData": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "Timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "Owner": {
          "type": "string"
        },
        "UpdateUser": {
          "type": "string"
        },
        "IsDeleted": {
          "type": "boolean"
        },
        "LockUser": {
          "type": "string"
        },
        "FileType": {
          "type": "number"
        },
        "LockDate": {
          "format": "date-time",
          "type": "string"
        },
        "ComputerName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.NodeNotes": {
      "description": "Notes associated to the nodes.",
      "type": "object",
      "properties": {
        "NodeNoteID": {
          "type": "number"
        },
        "Note": {
          "type": "string"
        },
        "NodeID": {
          "type": "number"
        },
        "AccountID": {
          "type": "string"
        },
        "TimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Nodes": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "ObjectSubType": {
          "type": "string"
        },
        "IPAddress": {
          "type": "string"
        },
        "IPAddressType": {
          "type": "string"
        },
        "DynamicIP": {
          "type": "boolean"
        },
        "Caption": {
          "type": "string"
        },
        "NodeDescription": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DNS": {
          "type": "string"
        },
        "SysName": {
          "type": "string"
        },
        "Vendor": {
          "type": "string"
        },
        "SysObjectID": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "Contact": {
          "type": "string"
        },
        "VendorIcon": {
          "type": "string"
        },
        "Icon": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "PolledStatus": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "NodeStatusRootCause": {
          "type": "string"
        },
        "NodeStatusRootCauseWithLinks": {
          "type": "string"
        },
        "CustomStatus": {
          "type": "boolean"
        },
        "IOSImage": {
          "type": "string"
        },
        "IOSVersion": {
          "type": "string"
        },
        "GroupStatus": {
          "type": "string"
        },
        "StatusIcon": {
          "type": "string"
        },
        "LastBoot": {
          "format": "date-time",
          "type": "string"
        },
        "SystemUpTime": {
          "type": "number"
        },
        "ResponseTime": {
          "type": "number"
        },
        "PercentLoss": {
          "type": "number"
        },
        "AvgResponseTime": {
          "type": "number"
        },
        "MinResponseTime": {
          "type": "number"
        },
        "MaxResponseTime": {
          "type": "number"
        },
        "CPUCount": {
          "type": "number"
        },
        "CPULoad": {
          "type": "number"
        },
        "MemoryUsed": {
          "type": "number"
        },
        "LoadAverage1": {
          "type": "number"
        },
        "LoadAverage5": {
          "type": "number"
        },
        "LoadAverage15": {
          "type": "number"
        },
        "MemoryAvailable": {
          "type": "number"
        },
        "PercentMemoryUsed": {
          "type": "number"
        },
        "PercentMemoryAvailable": {
          "type": "number"
        },
        "LastSync": {
          "format": "date-time",
          "type": "string"
        },
        "LastSystemUpTimePollUtc": {
          "format": "date-time",
          "type": "string"
        },
        "MachineType": {
          "type": "string"
        },
        "IsServer": {
          "type": "boolean"
        },
        "Severity": {
          "type": "number"
        },
        "UiSeverity": {
          "type": "number"
        },
        "ChildStatus": {
          "type": "number"
        },
        "Allow64BitCounters": {
          "type": "boolean"
        },
        "AgentPort": {
          "type": "string"
        },
        "TotalMemory": {
          "type": "number"
        },
        "CMTS": {
          "$ref": "#/definitions/System.Char"
        },
        "CustomPollerLastStatisticsPoll": {
          "format": "date-time",
          "type": "string"
        },
        "CustomPollerLastStatisticsPollSuccess": {
          "format": "date-time",
          "type": "string"
        },
        "SNMPVersion": {
          "type": "number"
        },
        "PollInterval": {
          "type": "number"
        },
        "EngineID": {
          "type": "number"
        },
        "RediscoveryInterval": {
          "type": "number"
        },
        "NextPoll": {
          "format": "date-time",
          "type": "string"
        },
        "NextRediscovery": {
          "format": "date-time",
          "type": "string"
        },
        "StatCollection": {
          "type": "number"
        },
        "External": {
          "type": "boolean"
        },
        "Community": {
          "type": "string"
        },
        "RWCommunity": {
          "type": "string"
        },
        "IP": {
          "type": "string"
        },
        "IP_Address": {
          "type": "string"
        },
        "IPAddressGUID": {
          "format": "uuid",
          "type": "string"
        },
        "NodeName": {
          "type": "string"
        },
        "BlockUntil": {
          "format": "date-time",
          "type": "string"
        },
        "BufferNoMemThisHour": {
          "type": "number"
        },
        "BufferNoMemToday": {
          "type": "number"
        },
        "BufferSmMissThisHour": {
          "type": "number"
        },
        "BufferSmMissToday": {
          "type": "number"
        },
        "BufferMdMissThisHour": {
          "type": "number"
        },
        "BufferMdMissToday": {
          "type": "number"
        },
        "BufferBgMissThisHour": {
          "type": "number"
        },
        "BufferBgMissToday": {
          "type": "number"
        },
        "BufferLgMissThisHour": {
          "type": "number"
        },
        "BufferLgMissToday": {
          "type": "number"
        },
        "BufferHgMissThisHour": {
          "type": "number"
        },
        "BufferHgMissToday": {
          "type": "number"
        },
        "OrionIdPrefix": {
          "type": "string"
        },
        "OrionIdColumn": {
          "type": "string"
        },
        "SkippedPollingCycles": {
          "type": "number"
        },
        "MinutesSinceLastSync": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Category": {
          "type": "number"
        },
        "IsOrionServer": {
          "type": "boolean"
        },
        "ModernIcon": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        }
      }
    },
    "Orion.Pollers": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "PollerID": {
          "type": "number"
        },
        "PollerType": {
          "type": "string"
        },
        "NetObject": {
          "type": "string"
        },
        "NetObjectType": {
          "type": "string"
        },
        "NetObjectID": {
          "type": "number"
        },
        "Enabled": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.ResourceProperties": {
      "description": "All properties of resources added to the Orion views.",
      "type": "object",
      "properties": {
        "ResourceID": {
          "type": "number"
        },
        "PropertyName": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Resources": {
      "description": "All resources added to the Orion views.",
      "type": "object",
      "properties": {
        "ResourceID": {
          "type": "number"
        },
        "ViewID": {
          "type": "number"
        },
        "ViewColumn": {
          "type": "number"
        },
        "Position": {
          "type": "number"
        },
        "ResourceName": {
          "type": "string"
        },
        "ResourceFile": {
          "type": "string"
        },
        "ResourceTitle": {
          "type": "string"
        },
        "ResourceSubTitle": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Volumes": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "Status": {
          "type": "number"
        },
        "StatusLED": {
          "type": "string"
        },
        "VolumeID": {
          "type": "number"
        },
        "Icon": {
          "type": "string"
        },
        "Index": {
          "type": "number"
        },
        "Caption": {
          "type": "string"
        },
        "PollInterval": {
          "type": "number"
        },
        "StatCollection": {
          "type": "number"
        },
        "RediscoveryInterval": {
          "type": "number"
        },
        "StatusIcon": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Size": {
          "type": "number"
        },
        "Responding": {
          "$ref": "#/definitions/System.Char"
        },
        "FullName": {
          "type": "string"
        },
        "LastSync": {
          "format": "date-time",
          "type": "string"
        },
        "VolumePercentUsed": {
          "type": "number"
        },
        "VolumeAllocationFailuresThisHour": {
          "type": "number"
        },
        "VolumeIndex": {
          "type": "number"
        },
        "VolumeTypeID": {
          "type": "number"
        },
        "VolumeType": {
          "type": "string"
        },
        "VolumeDescription": {
          "type": "string"
        },
        "VolumeSize": {
          "type": "number"
        },
        "VolumeSpaceUsed": {
          "type": "number"
        },
        "VolumeAllocationFailuresToday": {
          "type": "number"
        },
        "VolumeResponding": {
          "$ref": "#/definitions/System.Char"
        },
        "VolumeSpaceAvailable": {
          "type": "number"
        },
        "VolumeTypeIcon": {
          "type": "string"
        },
        "OrionIdPrefix": {
          "type": "string"
        },
        "OrionIdColumn": {
          "type": "string"
        },
        "DiskQueueLength": {
          "type": "number"
        },
        "DiskTransfer": {
          "type": "number"
        },
        "DiskReads": {
          "type": "number"
        },
        "DiskWrites": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "TotalDiskIOPS": {
          "type": "number"
        },
        "VolumePercentAvailable": {
          "type": "number"
        },
        "MinutesSinceLastSync": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "SkippedPollingCycles": {
          "type": "number"
        },
        "VolumeSpaceAvailableExp": {
          "type": "number"
        },
        "NextPoll": {
          "format": "date-time",
          "type": "string"
        },
        "NextRediscovery": {
          "format": "date-time",
          "type": "string"
        },
        "DeviceId": {
          "type": "string"
        },
        "DiskSerialNumber": {
          "type": "string"
        },
        "InterfaceType": {
          "type": "string"
        },
        "SCSITargetId": {
          "type": "number"
        },
        "SCSILunId": {
          "type": "number"
        },
        "SCSIPortId": {
          "type": "number"
        },
        "SCSIControllerId": {
          "type": "string"
        },
        "SCSIPortOffset": {
          "type": "number"
        },
        "ModernIcon": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Environment": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "MachineName": {
          "type": "string"
        },
        "OSVersion": {
          "type": "string"
        },
        "TimeZone": {
          "type": "string"
        },
        "SqlServer": {
          "type": "string"
        },
        "SqlDatabase": {
          "type": "string"
        },
        "SqlLogin": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.NodeSettings": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "SettingName": {
          "type": "string"
        },
        "SettingValue": {
          "type": "string"
        },
        "NodeSettingID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.WorldMap.Point": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "PointId": {
          "type": "number"
        },
        "Instance": {
          "type": "string"
        },
        "InstanceID": {
          "type": "string"
        },
        "Latitude": {
          "type": "number"
        },
        "Longitude": {
          "type": "number"
        },
        "AutoAdded": {
          "type": "boolean"
        },
        "StreetAddress": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.WorldMap.PointLabel": {
      "description": "Location name for World Map point.",
      "type": "object",
      "properties": {
        "LabelId": {
          "type": "number"
        },
        "Title": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SMTPServers": {
      "description": "ToDo",
      "type": "object",
      "properties": {
        "SMTPServerID": {
          "type": "number"
        },
        "BackupServerID": {
          "type": "number"
        },
        "Address": {
          "type": "string"
        },
        "Port": {
          "type": "number"
        },
        "CredentialID": {
          "type": "number"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "EnabledSSL": {
          "type": "boolean"
        },
        "SMTPEmailSendExecutionTimeout": {
          "type": "number"
        },
        "SMTPClient": {
          "type": "string"
        },
        "ExtendedSmtpOptions": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.NetObjectDowntime": {
      "description": "Downtime object for Downtime Monitoring.",
      "type": "object",
      "properties": {
        "EntityId": {
          "type": "string"
        },
        "NodeId": {
          "type": "number"
        },
        "DateTimeFrom": {
          "format": "date-time",
          "type": "string"
        },
        "DateTimeUntil": {
          "format": "date-time",
          "type": "string"
        },
        "DateTimeUntilNow": {
          "format": "date-time",
          "type": "string"
        },
        "State": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "TotalDurationMin": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.ForecastMetrics": {
      "description": "Global settings for forecasting entities (e.g. CPULoad). Global settings include global thresholds, UsePeakValue flag, etc. ",
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "SourceDataEntityName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "UsePeakValues": {
          "type": "boolean"
        },
        "ThresholdType": {
          "type": "number"
        },
        "Icon": {
          "type": "string"
        },
        "WarningThresholdSettingID": {
          "type": "string"
        },
        "CriticalThresholdSettingID": {
          "type": "string"
        },
        "CapacityThresholdSettingID": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.ForecastCapacitySettings": {
      "description": "Per NetObject settings for forecasting entities. These takes precedence over the global settings from ForecastMetrics.",
      "type": "object",
      "properties": {
        "InstanceId": {
          "type": "number"
        },
        "MetricId": {
          "type": "number"
        },
        "Enabled": {
          "type": "boolean"
        },
        "UsePeakValues": {
          "type": "boolean"
        },
        "WarningThreshold": {
          "type": "number"
        },
        "CriticalThreshold": {
          "type": "number"
        },
        "CapacityThreshold": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.MaintenancePlan": {
      "description": "Plan defining maintenance schedule for entities being unmanaged.",
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "AccountID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Reason": {
          "type": "string"
        },
        "KeepPolling": {
          "type": "boolean"
        },
        "Favorite": {
          "type": "boolean"
        },
        "Enabled": {
          "type": "boolean"
        },
        "UnmanageDate": {
          "format": "date-time",
          "type": "string"
        },
        "RemanageDate": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.MaintenancePlanAssignment": {
      "description": "Defines entity which is included in maintenance plan.",
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "EntityID": {
          "type": "number"
        },
        "EntityUri": {
          "type": "string"
        },
        "MaintenancePlanID": {
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "Enabled": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Web.FavoriteResource": {
      "description": "All resources marked as favorite by a user account.",
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "AccountID": {
          "type": "string"
        },
        "ResourcePath": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Web.UserWebView": {
      "description": "Represents relation between Users and WebViews.",
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "WebViewID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.PerfStack.Projects": {
      "description": "\n      This entity represents the view of a Performance Analysis Project, that the user\n      can store, reload or share with others.\n    ",
      "type": "object",
      "properties": {
        "AccountID": {
          "type": "string"
        },
        "ProjectID": {
          "type": "string"
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "Favorite": {
          "type": "boolean"
        },
        "Data": {
          "type": "string"
        },
        "ChartCount": {
          "type": "number"
        },
        "MetricCount": {
          "type": "number"
        },
        "MetricTypes": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.PerfStack.StatisticsEntity": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "ObservationTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "Value": {
          "type": "number"
        },
        "ObservationFrequency": {
          "format": "date-time",
          "type": "string"
        },
        "Weight": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.PolicyEngine.RuleWaiver": {
      "type": "object",
      "properties": {
        "RuleWaiverID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "LastModified": {
          "format": "date-time",
          "type": "string"
        },
        "LastModifiedBy": {
          "type": "string"
        },
        "OriginalStatuses": {
          "type": "string"
        },
        "OriginalStatusesNames": {
          "type": "string"
        },
        "Approver": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Local.Orion.PolicyEngine.AssignedRuleWaiver": {
      "type": "object",
      "properties": {
        "RuleWaiverID": {
          "type": "number"
        },
        "RuleID": {
          "type": "number"
        },
        "EntityName": {
          "type": "string"
        },
        "EntityIDs": {
          "type": "string"
        },
        "NodeID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.PolicyEngine.RuleWaiver": {
      "description": "This entity represents a waiver.",
      "type": "object",
      "properties": {
        "RuleWaiverID": {
          "description": "ID of the waiver.",
          "type": "number"
        },
        "Name": {
          "description": "Name of the waiver.",
          "type": "string"
        },
        "Description": {
          "description": "Description (optional) of the waiver.",
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "description": "Date until waiver is valid and applied.",
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "description": "Date when waiver was created.",
          "type": "string"
        },
        "CreatedBy": {
          "description": "Name of user (AccountID) who created waiver.",
          "type": "string"
        },
        "LastModified": {
          "format": "date-time",
          "description": "Date when waiver was modified last time. It can return NULL when waiver was not modified.",
          "type": "string"
        },
        "LastModifiedBy": {
          "description": "Name of user (AccountID) who modified waiver last time. It can return NULL when waiver was not modified.",
          "type": "string"
        },
        "OriginalStatuses": {
          "description": "List of comma separated statuses of rule when waiver is applied. Options are: 0 (unknown), 2 (failed).",
          "type": "string"
        },
        "OriginalStatusesNames": {
          "description": "List of comma separated localized names of statuses of rule when waiver is applied.",
          "type": "string"
        },
        "Approver": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.PolicyEngine.AssignedRuleWaiver": {
      "description": "This entity represents a waiver for one rule and one entity assignment.",
      "type": "object",
      "properties": {
        "RuleWaiverID": {
          "description": "ID of the waiver.",
          "type": "number"
        },
        "RuleID": {
          "description": "ID of the rule this assignment is part of.",
          "type": "number"
        },
        "EntityName": {
          "description": "Name of target entity. SCM uses only \"Orion.Nodes\".",
          "type": "string"
        },
        "EntityIDs": {
          "description": "IDs of the target entity separated by underscore. SCM uses only NodeID.",
          "type": "string"
        },
        "NodeID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Cortex.Orion.PowerControlUnit": {
      "type": "object",
      "properties": {
        "PcuId": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "OrionNodeId": {
          "type": "number"
        },
        "Model": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "FirmwareVersion": {
          "type": "string"
        },
        "ManufactureDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "PollInterval": {
          "type": "number"
        },
        "BatteryPackCount": {
          "type": "number"
        },
        "BatteryCapacity": {
          "type": "number"
        },
        "BatteryTemperature": {
          "type": "number"
        },
        "TimeOnBattery": {
          "type": "number"
        },
        "ReplaceIndicator_Value": {
          "type": "number"
        },
        "ReplaceIndicator": {
          "type": "string"
        },
        "BasicBatteryStatus_Value": {
          "type": "number"
        },
        "BasicBatteryStatus": {
          "type": "string"
        },
        "OutputStatus_Value": {
          "type": "number"
        },
        "OutputStatus": {
          "type": "string"
        },
        "OutputPercentLoad": {
          "type": "number"
        },
        "RunTimeRemaining": {
          "type": "number"
        },
        "LastFailCause_Value": {
          "type": "number"
        },
        "LastFailCause": {
          "type": "string"
        },
        "RequestInventory": {
          "type": "boolean"
        },
        "PollState_Value": {
          "type": "number"
        },
        "PollState": {
          "type": "string"
        },
        "AgentId": {
          "type": "number"
        },
        "AgentOsType": {
          "type": "string"
        },
        "EngineId": {
          "type": "number"
        },
        "ID": {
          "type": "number"
        },
        "RelatedNode": {
          "type": "number"
        },
        "ModernIcon": {
          "type": "string"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Remoting.RemoteExecutionPackage": {
      "description": "Enityt stores packages that can be executed remotely on given node.",
      "type": "object",
      "properties": {
        "RemoteExecutableId": {
          "description": "The unique integer representation of a package",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SamAppOptics.ApmService.Configuration": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "CredentialsId": {
          "type": "number"
        },
        "CredentialsType": {
          "type": "string"
        },
        "TenantId": {
          "type": "number"
        },
        "LastSuccessPollTime": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SamAppOptics.ApmService.ServiceHost": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "ExternalId": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "IPAddresses": {
          "type": "string"
        },
        "MACAddresses": {
          "type": "string"
        },
        "NodeID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SamAppOptics.ApmService.Configuration": {
      "description": "This entity contains configuration to connect with AppOptics portal.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Each Settings has this unique integer representation",
          "type": "number"
        },
        "CredentialsId": {
          "description": "Id number of a credentials",
          "type": "number"
        },
        "CredentialsType": {
          "description": "Type of credentials",
          "type": "string"
        },
        "TenantId": {
          "description": "Id of a tenant (organization Id).",
          "type": "number"
        },
        "LastSuccessPollTime": {
          "format": "date-time",
          "description": "Datetime of last successful poll.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SamAppOptics.ApmService.ServiceHost": {
      "description": "This entity contains informations about Service Host.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Each Service Host has this unique integer representation",
          "type": "number"
        },
        "ExternalId": {
          "description": "Id of service in external system.",
          "type": "string"
        },
        "Name": {
          "description": "Name of host",
          "type": "string"
        },
        "IPAddresses": {
          "description": "Ip addresses (separated by coma)",
          "type": "string"
        },
        "MACAddresses": {
          "description": "Mac addresses (seprated by comma)",
          "type": "string"
        },
        "NodeID": {
          "description": "ID of a node",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SamAppOptics.Integration": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "IntegrationType": {
          "type": "string"
        },
        "ApplicationID": {
          "type": "number"
        },
        "NodeID": {
          "type": "number"
        },
        "ExternalUrl": {
          "type": "string"
        },
        "ServiceName": {
          "type": "string"
        },
        "DeploymentState": {
          "type": "number"
        },
        "FailureReason": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SamAppOptics.RegistrationCountry": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SamAppOptics.RegistrationState": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SamAppOptics.ApplicationPool": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "number"
        },
        "IntegrationId": {
          "type": "number"
        },
        "ApplicationPoolId": {
          "type": "number"
        },
        "ServiceName": {
          "type": "string"
        },
        "ConfigurationPoolName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SamAppOptics.Integration": {
      "description": "\n\t\t\tThis entity contains informations about AppOptics integrations.\n\t\t",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Each Integraiton has this unique integer representation",
          "type": "number"
        },
        "IntegrationType": {
          "description": "String representation of integration type",
          "type": "string"
        },
        "ApplicationID": {
          "description": "Id number of Application related with integration",
          "type": "number"
        },
        "NodeID": {
          "description": "Id number of Node related with integration",
          "type": "number"
        },
        "ExternalUrl": {
          "description": "Link to AppOptics page",
          "type": "string"
        },
        "ServiceName": {
          "description": "Name of AppOptics service",
          "type": "string"
        },
        "DeploymentState": {
          "description": "State of deployment",
          "type": "number"
        },
        "FailureReason": {
          "description": "It contains reason of failure when deployment failed",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SamAppOptics.RegistrationCountry": {
      "description": "\n\t\t\tThis entity contains informations about countries.\n\t\t",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Each RegistrationCountry has this unique integer representation",
          "type": "number"
        },
        "Code": {
          "description": "The code of country",
          "type": "string"
        },
        "Name": {
          "description": "The name of country",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SamAppOptics.RegistrationState": {
      "description": "\n\t\t\tThis entity contains informations about states of countries.\n\t\t",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Each RegistrationState has this unique integer representation",
          "type": "number"
        },
        "Name": {
          "description": "The name of country",
          "type": "string"
        },
        "Code": {
          "description": "Abbreviation for state name",
          "type": "string"
        },
        "CountryCode": {
          "description": "The code of country",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SamAppOptics.ApplicationPool": {
      "description": "\n\t\t\tThis entity contains informations about application pools of IIS integrations.\n\t\t",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Each ApplicationPool has this unique integer representation",
          "type": "number"
        },
        "IntegrationId": {
          "description": "Id number of Integration related with AppOptics application pool",
          "type": "number"
        },
        "ApplicationPoolId": {
          "description": "Id number of ApplicationPool related with AppOptics application pool",
          "type": "number"
        },
        "ServiceName": {
          "description": "Name of service",
          "type": "string"
        },
        "ConfigurationPoolName": {
          "description": "Name of AppOptics for IIS pool",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SCM.Profiles": {
      "description": "\n      This entity represents profiles, which could be set and maintained by a user.\n    ",
      "type": "object",
      "properties": {
        "ProfileID": {
          "description": "Unique identifier of the profile.",
          "type": "number"
        },
        "Name": {
          "description": "Name of the profile.",
          "type": "string"
        },
        "BuiltIn": {
          "description": "Boolean value indicating whether profile is built-in. This property is readonly and set to true only for profiles deployed with SCM installation. These can't be modified.",
          "type": "boolean"
        },
        "DisplayName": {
          "description": "User friendly name of the profile. May differ from Name, e.g. if the Profile is managed by other module.",
          "type": "string"
        },
        "UniqueId": {
          "format": "uuid",
          "description": "GUID of the profile, valuable for import/export to identify identical profiles across different environments.",
          "type": "string"
        },
        "TemplateMappingRules": {
          "description": "Internal configuration storing how to discover profile and rules whether profile is candidate for monitoring (Json).",
          "type": "string"
        },
        "ProfileOrigin": {
          "description": "Numeric value indicating where the profile comes from. Options are: 0 (New), 1 (Copied), 2 (Imported), 3 (ImportedFromThwack).",
          "type": "number"
        },
        "OriginalProfileUniqueID": {
          "format": "uuid",
          "description": "Origin GUID of parent profile (when copied).",
          "type": "string"
        },
        "Modified": {
          "format": "date-time",
          "description": "Datetime of last profile modification.",
          "type": "string"
        },
        "PolicyID": {
          "description": "Identifier of Policy which caused creation of this entity.",
          "type": "number"
        },
        "Version": {
          "description": "Version of the OOTB profile definition.",
          "type": "number"
        },
        "ManagedExternally": {
          "description": "Flag, that the Profile is managed by other module and not SCM, e.g. PolicyEngine.",
          "type": "boolean"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SCM.NodesProfiles": {
      "description": "\n      This entity represents mapping table for M:N relationship between SCM Nodes and SCM Profiles.\n    ",
      "type": "object",
      "properties": {
        "NodeID": {
          "description": "Identifier of Node where the profile is assigned.",
          "type": "number"
        },
        "ProfileID": {
          "description": "Identifier of the Profile which is assigned.",
          "type": "number"
        },
        "Assigned": {
          "format": "date-time",
          "description": "Datetime of profile assignment.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SCM.ProfileElements": {
      "description": "\n      This entity represents monitored element for SCM profile, which could be set and maintained by a user.\n      Monitored element can represent file or registry key which is monitored by superior profile.\n    ",
      "type": "object",
      "properties": {
        "ElementID": {
          "description": "Unique identifier of this entity.",
          "type": "number"
        },
        "ProfileID": {
          "description": "Identifier of Profile to which this entity belongs to.",
          "type": "number"
        },
        "Type": {
          "description": "Type of the element. Options are: 0 (Unknown), 1 (File), 2 (Registry), 4 (ParsedFile), 5 (SwisQuery), 6 (PowerShell), 8 (Script).",
          "type": "number"
        },
        "DisplayAlias": {
          "description": "Alias assigned to this entity. If provided, it replaces automatically generated name.",
          "type": "string"
        },
        "Settings": {
          "description": "All related settings specific for given type (Json).",
          "type": "string"
        },
        "Description": {
          "description": "Text which helps understand this entity.",
          "type": "string"
        },
        "CredentialID": {
          "description": "Contains credentialID for mapping with credential from Credential store.",
          "type": "number"
        },
        "UniqueId": {
          "format": "uuid",
          "description": "GUID of the OOTB element, identifying it even if its name changes.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.SCM.AssignedElementSettingOverride": {
      "description": "\n      This entity represents an overridden settings of an assigned SCM element. It allows to set the settings per Node.\n    ",
      "type": "object",
      "properties": {
        "NodeID": {
          "description": "Identifier of Node where the profile is assigned.",
          "type": "number"
        },
        "ElementID": {
          "description": "Unique identifier of this entity.",
          "type": "number"
        },
        "ProfileID": {
          "description": "Identifier of Profile to which this entity belongs to.",
          "type": "number"
        },
        "Settings": {
          "description": "All related settings specific for given type (Json).",
          "type": "string"
        },
        "CredentialID": {
          "description": "Contains credentialID for mapping with credential from Credential store.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SCM.Results.NodesPollingErrors": {
      "description": "\n      This entity represents polling errors for SCM node / server configuration. Contains only current errors, does not keep records of previous ones.\n    ",
      "type": "object",
      "properties": {
        "NodeID": {
          "description": "Identifier of the node where error was collected.",
          "type": "number"
        },
        "Type": {
          "description": "Type of the error. Options are: 0 (Agent not required), 1 (Agent Ok), 2 (Agent missing), 3 (Agent issue), 4 (Scm plugin issue), 5 (Scm plugin not responding), 6 (Scm plugin not applicable), 7 (Asset inventory missing).",
          "type": "number"
        },
        "Message": {
          "description": "Error message.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SCM.DismissedCandidates": {
      "description": "\n      This entity provides Agent and Profile candidates the user does not want to see in the Candidates for monitoring widget.\n    ",
      "type": "object",
      "properties": {
        "DismissedCandidateID": {
          "description": "Unique identifier of this entity.",
          "type": "number"
        },
        "NodeID": {
          "description": "Identifier of the Node which is candidate for monitoring.",
          "type": "number"
        },
        "ProfileID": {
          "description": "Identifier of the Profile which is candidate for monitoring.",
          "type": "number"
        },
        "Type": {
          "description": "Type of candidate. Options are: 0 (Agent), 1 (Profile).",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SCM.FimDisabledNodes": {
      "description": "\n      This entity contains explicit list of nodes where FIM is forcibly disabled.\n    ",
      "type": "object",
      "properties": {
        "NodeID": {
          "description": "Identifier of the node where FIM is forcibly disabled.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SCM.ProfileElementPolicyDataSources": {
      "description": "\n      This entity represents a Profile Element relation to PolicyEngine.\n    ",
      "type": "object",
      "properties": {
        "ElementID": {
          "description": "Identifier of element.",
          "type": "number"
        },
        "DataSourceID": {
          "description": "Identifier of the data source.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SettingOverride": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "OrionServerID": {
          "type": "number"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.Agents": {
      "type": "object",
      "properties": {
        "AgentId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Hostname": {
          "type": "string"
        },
        "DNSName": {
          "type": "string"
        },
        "IP": {
          "type": "string"
        },
        "OSVersion": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        },
        "Port": {
          "type": "number"
        },
        "UseProxy": {
          "type": "boolean"
        },
        "ProxyUrl": {
          "type": "string"
        },
        "UseProxyAuthentication": {
          "type": "boolean"
        },
        "ProxyUserName": {
          "type": "string"
        },
        "ProxyPassword": {
          "type": "string"
        },
        "PollingEngineId": {
          "type": "number"
        },
        "JobId": {
          "format": "uuid",
          "type": "string"
        },
        "ConnectionStatus": {
          "type": "number"
        },
        "ConnectionStatusMessage": {
          "type": "string"
        },
        "AgentGuid": {
          "format": "uuid",
          "type": "string"
        },
        "IsActiveAgent": {
          "type": "boolean"
        },
        "AgentVersion": {
          "type": "string"
        },
        "LoadPercentage": {
          "type": "number"
        },
        "RDPEnabled": {
          "type": "boolean"
        },
        "OrionIdColumn": {
          "type": "string"
        },
        "Unmanaged": {
          "type": "boolean"
        },
        "ConnectionStatusTimeStampUtc": {
          "format": "date-time",
          "type": "string"
        },
        "NumAllTransactions": {
          "type": "number"
        },
        "NumManagedTransactions": {
          "type": "number"
        },
        "AvgLoadPercentageLast30min": {
          "type": "number"
        },
        "AvgLoadPercentageLast60min": {
          "type": "number"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.Transactions": {
      "type": "object",
      "properties": {
        "TransactionId": {
          "type": "number"
        },
        "RecordingId": {
          "type": "number"
        },
        "AgentId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Frequency": {
          "type": "number"
        },
        "JobId": {
          "format": "uuid",
          "type": "string"
        },
        "LastDuration": {
          "type": "number"
        },
        "LastDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "LastPlayedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "WarningThreshold": {
          "type": "number"
        },
        "CriticalThreshold": {
          "type": "number"
        },
        "LastErrorMessage": {
          "type": "string"
        },
        "OrionIdColumn": {
          "type": "string"
        },
        "LastModificationUtc": {
          "format": "date-time",
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.TransactionCustomProperties": {
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.TransactionRunParameters": {
      "type": "object",
      "properties": {
        "TransactionId": {
          "type": "number"
        },
        "Type": {
          "type": "number"
        },
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.TransactionSteps": {
      "type": "object",
      "properties": {
        "TransactionStepId": {
          "type": "number"
        },
        "TransactionId": {
          "type": "number"
        },
        "RecordingId": {
          "type": "number"
        },
        "StepId": {
          "type": "number"
        },
        "StepGuid": {
          "format": "uuid",
          "type": "string"
        },
        "WarningThreshold": {
          "type": "number"
        },
        "CriticalThreshold": {
          "type": "number"
        },
        "OptimalThreshold": {
          "type": "number"
        },
        "LastDuration": {
          "type": "number"
        },
        "LastErrorMessage": {
          "type": "string"
        },
        "LastDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "LastPlayedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ScreenshotId": {
          "format": "uuid",
          "type": "string"
        },
        "ScreenshotDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "OrionIdColumn": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.Settings": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.Recordings": {
      "type": "object",
      "properties": {
        "RecordingId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Guid": {
          "format": "uuid",
          "type": "string"
        },
        "CreationDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "RequiresInteractiveSession": {
          "type": "boolean"
        },
        "ProbeType": {
          "type": "number"
        },
        "Version": {
          "type": "number"
        },
        "Width": {
          "type": "number"
        },
        "Height": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.RecordingsSettings": {
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.RecordingCustomProperties": {
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.RecordingAuthentications": {
      "type": "object",
      "properties": {
        "CredentialsId": {
          "type": "number"
        },
        "RecordingId": {
          "type": "number"
        },
        "Host": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.RecordingCertificates": {
      "type": "object",
      "properties": {
        "CertificateId": {
          "type": "number"
        },
        "RecordingId": {
          "type": "number"
        },
        "CommonName": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.SEUM.RecordingSteps": {
      "type": "object",
      "properties": {
        "RecordingId": {
          "type": "number"
        },
        "StepId": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        },
        "StepOrder": {
          "type": "number"
        },
        "Guid": {
          "format": "uuid",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "PlaybackCommands": {
          "type": "string"
        },
        "WarningThreshold": {
          "type": "number"
        },
        "CriticalThreshold": {
          "type": "number"
        },
        "ControlActionId": {
          "format": "uuid",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.Agents": {
      "description": "\n            This entity represents the Agent information.\n        ",
      "type": "object",
      "properties": {
        "AgentId": {
          "description": "The unique integer representation of agent.",
          "type": "number"
        },
        "Name": {
          "description": "The string value that contains the name of the agent.",
          "type": "string"
        },
        "Hostname": {
          "description": "The string value that contains agent hostname.",
          "type": "string"
        },
        "DNSName": {
          "description": "The string value that contains agent DNS name.",
          "type": "string"
        },
        "IP": {
          "description": "The string value that contains agent IP.",
          "type": "string"
        },
        "OSVersion": {
          "description": "The string value that contains agent OS version.",
          "type": "string"
        },
        "Password": {
          "description": "The string value that contains agent password.",
          "type": "string"
        },
        "Url": {
          "description": "The string value that contains agent url.",
          "type": "string"
        },
        "Port": {
          "description": "The integer value that contains port.",
          "type": "number"
        },
        "UseProxy": {
          "description": "The bolean value that specifies if agent uses proxy.",
          "type": "boolean"
        },
        "ProxyUrl": {
          "description": "The string value that contains agent proxy url.",
          "type": "string"
        },
        "UseProxyAuthentication": {
          "description": "The bolean value that specifies if agent uses proxy authentication.",
          "type": "boolean"
        },
        "ProxyUserName": {
          "description": "The string value that contains agent proxy user name.",
          "type": "string"
        },
        "ProxyPassword": {
          "description": "The string value that contains agent proxy password.",
          "type": "string"
        },
        "PollingEngineId": {
          "description": "The integer value that contains polling engine id.",
          "type": "number"
        },
        "JobId": {
          "format": "uuid",
          "description": "The guid value that contains job id.",
          "type": "string"
        },
        "ConnectionStatus": {
          "description": "The integer value that contains connection status.",
          "type": "number"
        },
        "ConnectionStatusMessage": {
          "description": "The string value that contains agent connection status message.",
          "type": "string"
        },
        "AgentGuid": {
          "format": "uuid",
          "description": "The guid value that contains agent guid identifier.",
          "type": "string"
        },
        "IsActiveAgent": {
          "description": "The bolean value that specifies if agent is active.",
          "type": "boolean"
        },
        "AgentVersion": {
          "description": "The string value that contains agent version.",
          "type": "string"
        },
        "LoadPercentage": {
          "description": "The integer value that contains load percentage.",
          "type": "number"
        },
        "RDPEnabled": {
          "description": "The bolean value that specifies if RDP is enabled.",
          "type": "boolean"
        },
        "OrionIdColumn": {
          "description": "The string value that contains Orion column id.",
          "type": "string"
        },
        "Unmanaged": {
          "description": "The bolean value that specifies if agent is unmanaged.",
          "type": "boolean"
        },
        "ConnectionStatusTimeStampUtc": {
          "format": "date-time",
          "description": "The date value that contains connection status time stamp.",
          "type": "string"
        },
        "NumAllTransactions": {
          "description": "The integer value that contains number of all transactions.",
          "type": "number"
        },
        "NumManagedTransactions": {
          "description": "The integer value that contains number of managed transactions.",
          "type": "number"
        },
        "AvgLoadPercentageLast30min": {
          "description": "The integer value that contains average load percentage from last 30 min.",
          "type": "number"
        },
        "AvgLoadPercentageLast60min": {
          "description": "The integer value that contains average load percentage from last 60 min.",
          "type": "number"
        },
        "DetailsUrl": {
          "description": "The string value that contains agent details url.",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.Transactions": {
      "description": "\n            This entity represents the Transactions information.\n        ",
      "type": "object",
      "properties": {
        "TransactionId": {
          "description": "The unique integer representation of transaction id.",
          "type": "number"
        },
        "RecordingId": {
          "description": "The integer value that contains recording id.",
          "type": "number"
        },
        "AgentId": {
          "description": "The unique integer representation of agent.",
          "type": "number"
        },
        "Name": {
          "description": "The string value that contains transaction name.",
          "type": "string"
        },
        "Frequency": {
          "description": "The integer value that contains transaction frequency.",
          "type": "number"
        },
        "JobId": {
          "format": "uuid",
          "description": "The guid value that contains additional identifier.",
          "type": "string"
        },
        "LastDuration": {
          "description": "The integer value that contains last duration.",
          "type": "number"
        },
        "LastDateTimeUtc": {
          "format": "date-time",
          "description": "The datetime value that contains last time stamp.",
          "type": "string"
        },
        "LastPlayedUtc": {
          "format": "date-time",
          "description": "The datetime value that contains last played.",
          "type": "string"
        },
        "WarningThreshold": {
          "description": "The integer value that contains warning treshold.",
          "type": "number"
        },
        "CriticalThreshold": {
          "description": "The integer value that contains critical treshold.",
          "type": "number"
        },
        "LastErrorMessage": {
          "description": "The string value that contains transaction last error message.",
          "type": "string"
        },
        "OrionIdColumn": {
          "description": "The string value that contains transaction Orion column id.",
          "type": "string"
        },
        "LastModificationUtc": {
          "format": "date-time",
          "description": "The datetime value that contains last modification.",
          "type": "string"
        },
        "UnManaged": {
          "description": "The bolean value that specifies if transaction is unmanaged.",
          "type": "boolean"
        },
        "IsEnabled": {
          "description": "The bolean value that specifies if transaction is enabled.",
          "type": "boolean"
        },
        "DetailsUrl": {
          "description": "The string value that contains transaction details url.",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.TransactionCustomProperties": {
      "description": "\n      Allows to create, modify and delete custom properties for transactions.\n        ",
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.TransactionRunParameters": {
      "description": "\n            This entity represents the Response times information.\n        ",
      "type": "object",
      "properties": {
        "TransactionId": {
          "description": "The integer value that contains transaction id.",
          "type": "number"
        },
        "Type": {
          "description": "The integer value that contains type.",
          "type": "number"
        },
        "Key": {
          "description": "The string value that contains transaction run parameter key.",
          "type": "string"
        },
        "Value": {
          "description": "The string value that contains transaction run parameter value.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.TransactionSteps": {
      "description": "\n            This entity represents the Transaction steps information.\n        ",
      "type": "object",
      "properties": {
        "TransactionStepId": {
          "description": "The unique integer representation of transaction step.",
          "type": "number"
        },
        "TransactionId": {
          "description": "The unique integer representation of transaction.",
          "type": "number"
        },
        "RecordingId": {
          "description": "The integer value that contains recording id.",
          "type": "number"
        },
        "StepId": {
          "description": "The integer value that contains step id.",
          "type": "number"
        },
        "StepGuid": {
          "format": "uuid",
          "description": "The guid value that contains additional identifier.",
          "type": "string"
        },
        "WarningThreshold": {
          "description": "The integer value that contains warning treshold.",
          "type": "number"
        },
        "CriticalThreshold": {
          "description": "The integer value that contains critical treshold.",
          "type": "number"
        },
        "OptimalThreshold": {
          "description": "The integer value that contains optimal treshold.",
          "type": "number"
        },
        "LastDuration": {
          "description": "The integer value that contains last duration.",
          "type": "number"
        },
        "LastErrorMessage": {
          "description": "The string value that contains transaction step last error message.",
          "type": "string"
        },
        "LastDateTimeUtc": {
          "format": "date-time",
          "description": "The datetime value that contains last duration.",
          "type": "string"
        },
        "LastPlayedUtc": {
          "format": "date-time",
          "description": "The datetime value that contains last played.",
          "type": "string"
        },
        "ScreenshotId": {
          "format": "uuid",
          "description": "The guid value that contains screenshot id.",
          "type": "string"
        },
        "ScreenshotDateTimeUtc": {
          "format": "date-time",
          "description": "The datetime value that contains screenshot date time.",
          "type": "string"
        },
        "OrionIdColumn": {
          "description": "The string value that contains transaction step Orion column id.",
          "type": "string"
        },
        "DetailsUrl": {
          "description": "The string value that contains transaction details url.",
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "StatusLED": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.Settings": {
      "description": "\n            This entity represents the Settings information.\n        ",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The unique string value that contains setting name.",
          "type": "string"
        },
        "Value": {
          "description": "The string value that contains setting name.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.Recordings": {
      "description": "\n      This entity represents the Recordings information.\n        ",
      "type": "object",
      "properties": {
        "RecordingId": {
          "description": "The unique integer representation of recording.",
          "type": "number"
        },
        "Name": {
          "description": "The string value that contains recording name.",
          "type": "string"
        },
        "Guid": {
          "format": "uuid",
          "description": "The guid value that contains additional recording identifier.",
          "type": "string"
        },
        "CreationDateUtc": {
          "format": "date-time",
          "description": "The datetime value that contains recording creation time.",
          "type": "string"
        },
        "LastUpdateUtc": {
          "format": "date-time",
          "description": "The datetime value that contains recording last update time.",
          "type": "string"
        },
        "RequiresInteractiveSession": {
          "description": "The bolean value that specifies if recording requires interactive session.",
          "type": "boolean"
        },
        "ProbeType": {
          "description": "The integer value that contains probe type.",
          "type": "number"
        },
        "Version": {
          "description": "Version of a recording. Determines if recording is supported.",
          "type": "number"
        },
        "Width": {
          "description": "Resolution width of the recording.",
          "type": "number"
        },
        "Height": {
          "description": "Resolution height of the recording.",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.RecordingsSettings": {
      "description": "\n      Provides metadata for recordings package.\n        ",
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.RecordingCustomProperties": {
      "description": "\n      Allows to create, modify and delete custom properties for recordings.\n        ",
      "type": "object",
      "properties": {
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.RecordingAuthentications": {
      "description": "\n      This entity represents username and password credentials stored in the recording.\n        ",
      "type": "object",
      "properties": {
        "CredentialsId": {
          "description": "The unique integer representation of a credential pair.",
          "type": "number"
        },
        "RecordingId": {
          "description": "The unique integer representation of a recording.",
          "type": "number"
        },
        "Host": {
          "description": "Domain name of the website that requires credentials.",
          "type": "string"
        },
        "UserName": {
          "description": "The string value that contains username for authentication.",
          "type": "string"
        },
        "Password": {
          "description": "The string value that contains password for authentication.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.RecordingCertificates": {
      "description": "\n      This entity represents the certificates information used within recording.\n        ",
      "type": "object",
      "properties": {
        "CertificateId": {
          "description": "The unique integer representation of a certificate.",
          "type": "number"
        },
        "RecordingId": {
          "description": "The unique integer representation of a recording.",
          "type": "number"
        },
        "CommonName": {
          "description": "The string value that represents the certificate's common name.",
          "type": "string"
        },
        "Url": {
          "description": "The string value that contains url of the webpage that issued the certificate.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SEUM.RecordingSteps": {
      "description": "\n      This entity represents the Recordings steps information.\n        ",
      "type": "object",
      "properties": {
        "RecordingId": {
          "description": "The unique integer representation of recording.",
          "type": "number"
        },
        "StepId": {
          "description": "The unique integer representation of recording step.",
          "type": "number"
        },
        "Name": {
          "description": "The string value that contains recording step name.",
          "type": "string"
        },
        "Url": {
          "description": "The string value that contains recording step url.",
          "type": "string"
        },
        "StepOrder": {
          "description": "The integer value that contains recording step order.",
          "type": "number"
        },
        "Guid": {
          "format": "uuid",
          "description": "The guid value that contains recording step additional identifier.",
          "type": "string"
        },
        "Description": {
          "description": "The string value that contains recording step description.",
          "type": "string"
        },
        "PlaybackCommands": {
          "description": "The string value that contains recording step playback commands.",
          "type": "string"
        },
        "WarningThreshold": {
          "description": "The integer value that contains recording step warning treshold.",
          "type": "number"
        },
        "CriticalThreshold": {
          "description": "The integer value that contains recording step critical treshold.",
          "type": "number"
        },
        "ControlActionId": {
          "format": "uuid",
          "description": "The integer value that contains recording step control action id.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "Orion.AutoDependencyRoot": {
      "type": "object",
      "properties": {
        "EngineID": {
          "type": "number"
        },
        "RootNodeID": {
          "type": "number"
        },
        "RootEngineID": {
          "type": "number"
        },
        "LastUpdateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "TotalNodeCount": {
          "type": "number"
        },
        "EngineNodeCount": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SSH.Session": {
      "type": "object",
      "properties": {
        "ClientId": {
          "type": "string"
        },
        "HostName": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "SSHPort": {
          "type": "number"
        },
        "EngineId": {
          "type": "number"
        },
        "NodeId": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SSH.Audit": {
      "type": "object",
      "properties": {
        "AccountId": {
          "type": "string"
        },
        "Host": {
          "type": "string"
        },
        "User": {
          "type": "string"
        },
        "Action": {
          "type": "string"
        },
        "TimeUTC": {
          "format": "date-time",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.SSH.Key": {
      "type": "object",
      "properties": {
        "NodeId": {
          "type": "number"
        },
        "Host": {
          "type": "string"
        },
        "FingerPrint": {
          "type": "string"
        },
        "SSHKey": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "System.Subscription": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "EndpointAddress": {
          "type": "string"
        },
        "Query": {
          "type": "string"
        },
        "LastSuccessfulDelivery": {
          "format": "date-time",
          "type": "string"
        },
        "FailedDeliveryAttempts": {
          "type": "number"
        },
        "Binding": {
          "type": "string"
        },
        "DataFormat": {
          "type": "string"
        },
        "CredentialType": {
          "type": "string"
        },
        "Version": {
          "type": "number"
        },
        "TTL": {
          "type": "number"
        },
        "ReliableDelivery": {
          "type": "boolean"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "System.SubscriptionProperty": {
      "type": "object",
      "properties": {
        "IndicationType": {
          "type": "string"
        },
        "EntityName": {
          "type": "string"
        },
        "PropertyName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Toolset.SSHActiveData": {
      "type": "object",
      "properties": {
        "ConnectionID": {
          "format": "uuid",
          "type": "string"
        },
        "HostName": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "SSHPort": {
          "type": "number"
        },
        "UseForAutoDetect": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Toolset.ConnectionProfiles": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "SSHPort": {
          "type": "number"
        },
        "UseForAutoDetect": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.Toolset.NodesProperties": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "ConnectionProfileID": {
          "type": "number"
        },
        "IsDeleted": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.UDT.Port": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "PortID": {
          "type": "number"
        },
        "IsMonitored": {
          "type": "boolean"
        },
        "PortIndex": {
          "type": "number"
        },
        "PortType": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Speed": {
          "type": "number"
        },
        "Duplex": {
          "type": "number"
        },
        "TrunkMode": {
          "type": "number"
        },
        "PortDescription": {
          "type": "string"
        },
        "OperationalStatus": {
          "type": "number"
        },
        "AdministrativeStatus": {
          "type": "number"
        },
        "MACAddress": {
          "type": "string"
        },
        "IgnorePortRules": {
          "type": "boolean"
        },
        "Flag": {
          "type": "number"
        },
        "IsMissing": {
          "type": "boolean"
        },
        "StatusLED": {
          "type": "string"
        },
        "IsExcluded": {
          "type": "boolean"
        },
        "OrionIdPrefix": {
          "type": "string"
        },
        "OrionIdColumn": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.UDT.Port": {
      "type": "object",
      "properties": {
        "NodeID": {
          "type": "number"
        },
        "PortID": {
          "type": "number"
        },
        "IsMonitored": {
          "type": "boolean"
        },
        "PortIndex": {
          "type": "number"
        },
        "PortType": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "Speed": {
          "type": "number"
        },
        "Duplex": {
          "type": "number"
        },
        "TrunkMode": {
          "type": "number"
        },
        "PortDescription": {
          "type": "string"
        },
        "OperationalStatus": {
          "type": "number"
        },
        "AdministrativeStatus": {
          "type": "number"
        },
        "MACAddress": {
          "type": "string"
        },
        "IgnorePortRules": {
          "type": "boolean"
        },
        "Flag": {
          "type": "number"
        },
        "IsMissing": {
          "type": "boolean"
        },
        "StatusLED": {
          "type": "string"
        },
        "IsExcluded": {
          "type": "boolean"
        },
        "OrionIdPrefix": {
          "type": "string"
        },
        "OrionIdColumn": {
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "ModernIcon": {
          "type": "string"
        },
        "Status": {
          "type": "number"
        },
        "StatusDescription": {
          "type": "string"
        },
        "UnManaged": {
          "type": "boolean"
        },
        "UnManageFrom": {
          "format": "date-time",
          "type": "string"
        },
        "UnManageUntil": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "AncestorDisplayNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AncestorDetailsUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StatusIconHint": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.VIM.ClustersCustomProperties": {
      "type": "object",
      "properties": {
        "ClusterID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.VIM.DataCentersCustomProperties": {
      "type": "object",
      "properties": {
        "DataCenterID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.VIM.VirtualMachinesCustomProperties": {
      "type": "object",
      "properties": {
        "VirtualMachineID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.VIM.HostsCustomProperties": {
      "type": "object",
      "properties": {
        "HostID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Local.Orion.VIM.DatastoresCustomProperties": {
      "type": "object",
      "properties": {
        "DataStoreID": {
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.VIM.ClustersCustomProperties": {
      "description": "Custom Properties",
      "type": "object",
      "properties": {
        "ClusterID": {
          "description": "",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.VIM.DataCentersCustomProperties": {
      "description": "Custom Properties",
      "type": "object",
      "properties": {
        "DataCenterID": {
          "description": "",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.VIM.VirtualMachinesCustomProperties": {
      "description": "Custom Properties",
      "type": "object",
      "properties": {
        "VirtualMachineID": {
          "description": "",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.VIM.HostsCustomProperties": {
      "description": "Custom Properties",
      "type": "object",
      "properties": {
        "HostID": {
          "description": "",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.VIM.DatastoresCustomProperties": {
      "description": "Custom Properties",
      "type": "object",
      "properties": {
        "DataStoreID": {
          "description": "",
          "type": "number"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Orion.WirelessHeatMap.Map": {
      "type": "object",
      "properties": {
        "MapID": {
          "type": "number"
        },
        "ProjectID": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Scale": {
          "type": "number"
        },
        "ScaleUnit": {
          "type": "number"
        },
        "PercentProgress": {
          "type": "number"
        },
        "ProcessingEngine": {
          "type": "string"
        },
        "GenerateStarted": {
          "type": "boolean"
        },
        "LastGenerationStarted": {
          "format": "date-time",
          "type": "string"
        },
        "LastGenerationFinished": {
          "format": "date-time",
          "type": "string"
        },
        "ErrorCode": {
          "type": "number"
        },
        "MapStudioFileID": {
          "format": "uuid",
          "type": "string"
        },
        "DetailsUrl": {
          "type": "string"
        },
        "Width": {
          "type": "number"
        },
        "Height": {
          "type": "number"
        },
        "Description": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "security": [
    { }
  ],
  "tags": [
    {
      "name": "Query",
      "description": "Use SWQL queries to fetch data"
    },
    {
      "name": "CRUD",
      "description": "Create, Read, Update, or Delete SWIS entities"
    },
    {
      "name": "Verbs",
      "description": "Invoke operations"
    }
  ]
}